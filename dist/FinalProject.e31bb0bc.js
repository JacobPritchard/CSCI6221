// modules are defined as an array
// [ module function, map of requires ]
//
// map of requires is short require name -> numeric require
//
// anything defined in a previous bundle is accessed via the
// orig method which is the require for previous bundles
parcelRequire = (function (modules, cache, entry, globalName) {
  // Save the require from previous bundle to this closure if any
  var previousRequire = typeof parcelRequire === 'function' && parcelRequire;
  var nodeRequire = typeof require === 'function' && require;

  function newRequire(name, jumped) {
    if (!cache[name]) {
      if (!modules[name]) {
        // if we cannot find the module within our internal map or
        // cache jump to the current global require ie. the last bundle
        // that was added to the page.
        var currentRequire = typeof parcelRequire === 'function' && parcelRequire;
        if (!jumped && currentRequire) {
          return currentRequire(name, true);
        }

        // If there are other bundles on this page the require from the
        // previous one is saved to 'previousRequire'. Repeat this as
        // many times as there are bundles until the module is found or
        // we exhaust the require chain.
        if (previousRequire) {
          return previousRequire(name, true);
        }

        // Try the node require function if it exists.
        if (nodeRequire && typeof name === 'string') {
          return nodeRequire(name);
        }

        var err = new Error('Cannot find module \'' + name + '\'');
        err.code = 'MODULE_NOT_FOUND';
        throw err;
      }

      localRequire.resolve = resolve;
      localRequire.cache = {};

      var module = cache[name] = new newRequire.Module(name);

      modules[name][0].call(module.exports, localRequire, module, module.exports, this);
    }

    return cache[name].exports;

    function localRequire(x){
      return newRequire(localRequire.resolve(x));
    }

    function resolve(x){
      return modules[name][1][x] || x;
    }
  }

  function Module(moduleName) {
    this.id = moduleName;
    this.bundle = newRequire;
    this.exports = {};
  }

  newRequire.isParcelRequire = true;
  newRequire.Module = Module;
  newRequire.modules = modules;
  newRequire.cache = cache;
  newRequire.parent = previousRequire;
  newRequire.register = function (id, exports) {
    modules[id] = [function (require, module) {
      module.exports = exports;
    }, {}];
  };

  var error;
  for (var i = 0; i < entry.length; i++) {
    try {
      newRequire(entry[i]);
    } catch (e) {
      // Save first error but execute all entries
      if (!error) {
        error = e;
      }
    }
  }

  if (entry.length) {
    // Expose entry point to Node, AMD or browser globals
    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js
    var mainExports = newRequire(entry[entry.length - 1]);

    // CommonJS
    if (typeof exports === "object" && typeof module !== "undefined") {
      module.exports = mainExports;

    // RequireJS
    } else if (typeof define === "function" && define.amd) {
     define(function () {
       return mainExports;
     });

    // <script>
    } else if (globalName) {
      this[globalName] = mainExports;
    }
  }

  // Override the current require with this new one
  parcelRequire = newRequire;

  if (error) {
    // throw error from earlier, _after updating parcelRequire_
    throw error;
  }

  return newRequire;
})({"node_modules/process/browser.js":[function(require,module,exports) {

// shim for using process in browser
var process = module.exports = {}; // cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
  throw new Error('setTimeout has not been defined');
}

function defaultClearTimeout() {
  throw new Error('clearTimeout has not been defined');
}

(function () {
  try {
    if (typeof setTimeout === 'function') {
      cachedSetTimeout = setTimeout;
    } else {
      cachedSetTimeout = defaultSetTimout;
    }
  } catch (e) {
    cachedSetTimeout = defaultSetTimout;
  }

  try {
    if (typeof clearTimeout === 'function') {
      cachedClearTimeout = clearTimeout;
    } else {
      cachedClearTimeout = defaultClearTimeout;
    }
  } catch (e) {
    cachedClearTimeout = defaultClearTimeout;
  }
})();

function runTimeout(fun) {
  if (cachedSetTimeout === setTimeout) {
    //normal enviroments in sane situations
    return setTimeout(fun, 0);
  } // if setTimeout wasn't available but was latter defined


  if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
    cachedSetTimeout = setTimeout;
    return setTimeout(fun, 0);
  }

  try {
    // when when somebody has screwed with setTimeout but no I.E. maddness
    return cachedSetTimeout(fun, 0);
  } catch (e) {
    try {
      // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
      return cachedSetTimeout.call(null, fun, 0);
    } catch (e) {
      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
      return cachedSetTimeout.call(this, fun, 0);
    }
  }
}

function runClearTimeout(marker) {
  if (cachedClearTimeout === clearTimeout) {
    //normal enviroments in sane situations
    return clearTimeout(marker);
  } // if clearTimeout wasn't available but was latter defined


  if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
    cachedClearTimeout = clearTimeout;
    return clearTimeout(marker);
  }

  try {
    // when when somebody has screwed with setTimeout but no I.E. maddness
    return cachedClearTimeout(marker);
  } catch (e) {
    try {
      // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
      return cachedClearTimeout.call(null, marker);
    } catch (e) {
      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
      // Some versions of I.E. have different rules for clearTimeout vs setTimeout
      return cachedClearTimeout.call(this, marker);
    }
  }
}

var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
  if (!draining || !currentQueue) {
    return;
  }

  draining = false;

  if (currentQueue.length) {
    queue = currentQueue.concat(queue);
  } else {
    queueIndex = -1;
  }

  if (queue.length) {
    drainQueue();
  }
}

function drainQueue() {
  if (draining) {
    return;
  }

  var timeout = runTimeout(cleanUpNextTick);
  draining = true;
  var len = queue.length;

  while (len) {
    currentQueue = queue;
    queue = [];

    while (++queueIndex < len) {
      if (currentQueue) {
        currentQueue[queueIndex].run();
      }
    }

    queueIndex = -1;
    len = queue.length;
  }

  currentQueue = null;
  draining = false;
  runClearTimeout(timeout);
}

process.nextTick = function (fun) {
  var args = new Array(arguments.length - 1);

  if (arguments.length > 1) {
    for (var i = 1; i < arguments.length; i++) {
      args[i - 1] = arguments[i];
    }
  }

  queue.push(new Item(fun, args));

  if (queue.length === 1 && !draining) {
    runTimeout(drainQueue);
  }
}; // v8 likes predictible objects


function Item(fun, array) {
  this.fun = fun;
  this.array = array;
}

Item.prototype.run = function () {
  this.fun.apply(null, this.array);
};

process.title = 'browser';
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues

process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) {
  return [];
};

process.binding = function (name) {
  throw new Error('process.binding is not supported');
};

process.cwd = function () {
  return '/';
};

process.chdir = function (dir) {
  throw new Error('process.chdir is not supported');
};

process.umask = function () {
  return 0;
};
},{}],"output/Affjax/foreign.js":[function(require,module,exports) {
var process = require("process");
/* global XMLHttpRequest */

/* global process */
"use strict";

exports._ajax = function () {
  var platformSpecific = {};

  if (typeof module !== "undefined" && module.require && !(typeof process !== "undefined" && process.versions["electron"])) {
    // We are on node.js
    platformSpecific.newXHR = function () {
      var XHR = module.require("xhr2");

      return new XHR();
    };

    platformSpecific.fixupUrl = function (url, xhr) {
      if (xhr.nodejsBaseUrl === null) {
        var urllib = module.require("url");

        var u = urllib.parse(url);
        u.protocol = u.protocol || "http:";
        u.hostname = u.hostname || "localhost";
        return urllib.format(u);
      } else {
        return url || "/";
      }
    };

    platformSpecific.getResponse = function (xhr) {
      return xhr.response;
    };
  } else {
    // We are in the browser
    platformSpecific.newXHR = function () {
      return new XMLHttpRequest();
    };

    platformSpecific.fixupUrl = function (url) {
      return url || "/";
    };

    platformSpecific.getResponse = function (xhr) {
      return xhr.response;
    };
  }

  return function (timeoutErrorMessageIdent, requestFailedMessageIdent, mkHeader, options) {
    return function (errback, callback) {
      var xhr = platformSpecific.newXHR();
      var fixedUrl = platformSpecific.fixupUrl(options.url, xhr);
      xhr.open(options.method || "GET", fixedUrl, true, options.username, options.password);

      if (options.headers) {
        try {
          // eslint-disable-next-line no-eq-null,eqeqeq
          for (var i = 0, header; (header = options.headers[i]) != null; i++) {
            xhr.setRequestHeader(header.field, header.value);
          }
        } catch (e) {
          errback(e);
        }
      }

      var onerror = function onerror(msgIdent) {
        return function () {
          errback(new Error(msgIdent));
        };
      };

      xhr.onerror = onerror(requestFailedMessageIdent);
      xhr.ontimeout = onerror(timeoutErrorMessageIdent);

      xhr.onload = function () {
        callback({
          status: xhr.status,
          statusText: xhr.statusText,
          headers: xhr.getAllResponseHeaders().split("\r\n").filter(function (header) {
            return header.length > 0;
          }).map(function (header) {
            var i = header.indexOf(":");
            return mkHeader(header.substring(0, i))(header.substring(i + 2));
          }),
          body: platformSpecific.getResponse(xhr)
        });
      };

      xhr.responseType = options.responseType;
      xhr.withCredentials = options.withCredentials;
      xhr.timeout = options.timeout;
      xhr.send(options.content);
      return function (error, cancelErrback, cancelCallback) {
        try {
          xhr.abort();
        } catch (e) {
          return cancelErrback(e);
        }

        return cancelCallback();
      };
    };
  };
}();
},{"process":"node_modules/process/browser.js"}],"output/Data.Functor/foreign.js":[function(require,module,exports) {
"use strict";

exports.arrayMap = function (f) {
  return function (arr) {
    var l = arr.length;
    var result = new Array(l);

    for (var i = 0; i < l; i++) {
      result[i] = f(arr[i]);
    }

    return result;
  };
};
},{}],"output/Control.Semigroupoid/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var semigroupoidFn = {
  compose: function compose(f) {
    return function (g) {
      return function (x) {
        return f(g(x));
      };
    };
  }
};

var compose = function compose(dict) {
  return dict.compose;
};

var composeFlipped = function composeFlipped(dictSemigroupoid) {
  return function (f) {
    return function (g) {
      return compose(dictSemigroupoid)(g)(f);
    };
  };
};

module.exports = {
  compose: compose,
  composeFlipped: composeFlipped,
  semigroupoidFn: semigroupoidFn
};
},{}],"output/Control.Category/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var identity = function identity(dict) {
  return dict.identity;
};

var categoryFn = {
  identity: function identity(x) {
    return x;
  },
  Semigroupoid0: function Semigroupoid0() {
    return Control_Semigroupoid.semigroupoidFn;
  }
};
module.exports = {
  identity: identity,
  categoryFn: categoryFn,
  compose: Control_Semigroupoid.compose
};
},{"../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js"}],"output/Data.Boolean/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var otherwise = true;
module.exports = {
  otherwise: otherwise
};
},{}],"output/Data.Function/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Control_Category = require("../Control.Category/index.js");

var Data_Boolean = require("../Data.Boolean/index.js");

var on = function on(f) {
  return function (g) {
    return function (x) {
      return function (y) {
        return f(g(x))(g(y));
      };
    };
  };
};

var flip = function flip(f) {
  return function (b) {
    return function (a) {
      return f(a)(b);
    };
  };
};

var $$const = function $$const(a) {
  return function (v) {
    return a;
  };
};

var applyN = function applyN(f) {
  var go = function go($copy_n) {
    return function ($copy_acc) {
      var $tco_var_n = $copy_n;
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(n, acc) {
        if (n <= 0) {
          $tco_done = true;
          return acc;
        }

        ;

        if (Data_Boolean.otherwise) {
          $tco_var_n = n - 1 | 0;
          $copy_acc = f(acc);
          return;
        }

        ;
        throw new Error("Failed pattern match at Data.Function (line 100, column 3 - line 102, column 37): " + [n.constructor.name, acc.constructor.name]);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_n, $copy_acc);
      }

      ;
      return $tco_result;
    };
  };

  return go;
};

var applyFlipped = function applyFlipped(x) {
  return function (f) {
    return f(x);
  };
};

var apply = function apply(f) {
  return function (x) {
    return f(x);
  };
};

module.exports = {
  flip: flip,
  "const": $$const,
  apply: apply,
  applyFlipped: applyFlipped,
  applyN: applyN,
  on: on,
  compose: Control_Category.compose,
  identity: Control_Category.identity
};
},{"../Control.Category/index.js":"output/Control.Category/index.js","../Data.Boolean/index.js":"output/Data.Boolean/index.js"}],"output/Data.Unit/foreign.js":[function(require,module,exports) {
"use strict";

exports.unit = {};
},{}],"output/Data.Unit/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var showUnit = {
  show: function show(v) {
    return "unit";
  }
};
module.exports = {
  showUnit: showUnit,
  unit: $foreign.unit
};
},{"./foreign.js":"output/Data.Unit/foreign.js"}],"output/Type.Proxy/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Proxy3 = function () {
  function Proxy3() {}

  ;
  Proxy3.value = new Proxy3();
  return Proxy3;
}();

var Proxy2 = function () {
  function Proxy2() {}

  ;
  Proxy2.value = new Proxy2();
  return Proxy2;
}();

var $$Proxy = function () {
  function $$Proxy() {}

  ;
  $$Proxy.value = new $$Proxy();
  return $$Proxy;
}();

module.exports = {
  "Proxy": $$Proxy,
  Proxy2: Proxy2,
  Proxy3: Proxy3
};
},{}],"output/Data.Functor/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Type_Proxy = require("../Type.Proxy/index.js");

var map = function map(dict) {
  return dict.map;
};

var mapFlipped = function mapFlipped(dictFunctor) {
  return function (fa) {
    return function (f) {
      return map(dictFunctor)(f)(fa);
    };
  };
};

var $$void = function $$void(dictFunctor) {
  return map(dictFunctor)(Data_Function["const"](Data_Unit.unit));
};

var voidLeft = function voidLeft(dictFunctor) {
  return function (f) {
    return function (x) {
      return map(dictFunctor)(Data_Function["const"](x))(f);
    };
  };
};

var voidRight = function voidRight(dictFunctor) {
  return function (x) {
    return map(dictFunctor)(Data_Function["const"](x));
  };
};

var functorProxy = {
  map: function map(v) {
    return function (v1) {
      return Type_Proxy["Proxy"].value;
    };
  }
};
var functorFn = {
  map: Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn)
};
var functorArray = {
  map: $foreign.arrayMap
};

var flap = function flap(dictFunctor) {
  return function (ff) {
    return function (x) {
      return map(dictFunctor)(function (f) {
        return f(x);
      })(ff);
    };
  };
};

module.exports = {
  map: map,
  mapFlipped: mapFlipped,
  "void": $$void,
  voidRight: voidRight,
  voidLeft: voidLeft,
  flap: flap,
  functorFn: functorFn,
  functorArray: functorArray,
  functorProxy: functorProxy
};
},{"./foreign.js":"output/Data.Functor/foreign.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Type.Proxy/index.js":"output/Type.Proxy/index.js"}],"output/Data.Semigroup/foreign.js":[function(require,module,exports) {
"use strict";

exports.concatString = function (s1) {
  return function (s2) {
    return s1 + s2;
  };
};

exports.concatArray = function (xs) {
  return function (ys) {
    if (xs.length === 0) return ys;
    if (ys.length === 0) return xs;
    return xs.concat(ys);
  };
};
},{}],"output/Data.Symbol/foreign.js":[function(require,module,exports) {
"use strict"; // module Data.Symbol

exports.unsafeCoerce = function (arg) {
  return arg;
};
},{}],"output/Data.Symbol/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Type_Proxy = require("../Type.Proxy/index.js");

var SProxy = function () {
  function SProxy() {}

  ;
  SProxy.value = new SProxy();
  return SProxy;
}();

var reifySymbol = function reifySymbol(s) {
  return function (f) {
    return $foreign.unsafeCoerce(function (dictIsSymbol) {
      return f(dictIsSymbol);
    })({
      reflectSymbol: function reflectSymbol(v) {
        return s;
      }
    })(Type_Proxy["Proxy"].value);
  };
};

var reflectSymbol = function reflectSymbol(dict) {
  return dict.reflectSymbol;
};

module.exports = {
  reflectSymbol: reflectSymbol,
  reifySymbol: reifySymbol,
  SProxy: SProxy
};
},{"./foreign.js":"output/Data.Symbol/foreign.js","../Type.Proxy/index.js":"output/Type.Proxy/index.js"}],"output/Data.Void/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Void = function Void(x) {
  return x;
};

var absurd = function absurd(a) {
  var spin = function spin($copy_v) {
    var $tco_result;

    function $tco_loop(v) {
      $copy_v = v;
      return;
    }

    ;

    while (!false) {
      $tco_result = $tco_loop($copy_v);
    }

    ;
    return $tco_result;
  };

  return spin(a);
};

var showVoid = {
  show: absurd
};
module.exports = {
  absurd: absurd,
  showVoid: showVoid
};
},{}],"output/Record.Unsafe/foreign.js":[function(require,module,exports) {
"use strict";

exports.unsafeHas = function (label) {
  return function (rec) {
    return {}.hasOwnProperty.call(rec, label);
  };
};

exports.unsafeGet = function (label) {
  return function (rec) {
    return rec[label];
  };
};

exports.unsafeSet = function (label) {
  return function (value) {
    return function (rec) {
      var copy = {};

      for (var key in rec) {
        if ({}.hasOwnProperty.call(rec, key)) {
          copy[key] = rec[key];
        }
      }

      copy[label] = value;
      return copy;
    };
  };
};

exports.unsafeDelete = function (label) {
  return function (rec) {
    var copy = {};

    for (var key in rec) {
      if (key !== label && {}.hasOwnProperty.call(rec, key)) {
        copy[key] = rec[key];
      }
    }

    return copy;
  };
};
},{}],"output/Record.Unsafe/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

module.exports = {
  unsafeHas: $foreign.unsafeHas,
  unsafeGet: $foreign.unsafeGet,
  unsafeSet: $foreign.unsafeSet,
  unsafeDelete: $foreign.unsafeDelete
};
},{"./foreign.js":"output/Record.Unsafe/foreign.js"}],"output/Data.Semigroup/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Data_Symbol = require("../Data.Symbol/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Data_Void = require("../Data.Void/index.js");

var Record_Unsafe = require("../Record.Unsafe/index.js");

var Type_Proxy = require("../Type.Proxy/index.js");

var semigroupVoid = {
  append: function append(v) {
    return Data_Void.absurd;
  }
};
var semigroupUnit = {
  append: function append(v) {
    return function (v1) {
      return Data_Unit.unit;
    };
  }
};
var semigroupString = {
  append: $foreign.concatString
};
var semigroupRecordNil = {
  appendRecord: function appendRecord(v) {
    return function (v1) {
      return function (v2) {
        return {};
      };
    };
  }
};
var semigroupProxy3 = {
  append: function append(v) {
    return function (v1) {
      return Type_Proxy.Proxy3.value;
    };
  }
};
var semigroupProxy2 = {
  append: function append(v) {
    return function (v1) {
      return Type_Proxy.Proxy2.value;
    };
  }
};
var semigroupProxy = {
  append: function append(v) {
    return function (v1) {
      return Type_Proxy["Proxy"].value;
    };
  }
};
var semigroupArray = {
  append: $foreign.concatArray
};

var _appendRecord = function appendRecord(dict) {
  return dict.appendRecord;
};

var semigroupRecord = function semigroupRecord() {
  return function (dictSemigroupRecord) {
    return {
      append: _appendRecord(dictSemigroupRecord)(Type_Proxy["Proxy"].value)
    };
  };
};

var _append = function append(dict) {
  return dict.append;
};

var semigroupFn = function semigroupFn(dictSemigroup) {
  return {
    append: function append(f) {
      return function (g) {
        return function (x) {
          return _append(dictSemigroup)(f(x))(g(x));
        };
      };
    }
  };
};

var semigroupRecordCons = function semigroupRecordCons(dictIsSymbol) {
  return function () {
    return function (dictSemigroupRecord) {
      return function (dictSemigroup) {
        return {
          appendRecord: function appendRecord(v) {
            return function (ra) {
              return function (rb) {
                var tail = _appendRecord(dictSemigroupRecord)(Type_Proxy["Proxy"].value)(ra)(rb);

                var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
                var insert = Record_Unsafe.unsafeSet(key);
                var get = Record_Unsafe.unsafeGet(key);
                return insert(_append(dictSemigroup)(get(ra))(get(rb)))(tail);
              };
            };
          }
        };
      };
    };
  };
};

module.exports = {
  append: _append,
  appendRecord: _appendRecord,
  semigroupString: semigroupString,
  semigroupUnit: semigroupUnit,
  semigroupVoid: semigroupVoid,
  semigroupFn: semigroupFn,
  semigroupArray: semigroupArray,
  semigroupProxy: semigroupProxy,
  semigroupProxy2: semigroupProxy2,
  semigroupProxy3: semigroupProxy3,
  semigroupRecord: semigroupRecord,
  semigroupRecordNil: semigroupRecordNil,
  semigroupRecordCons: semigroupRecordCons
};
},{"./foreign.js":"output/Data.Semigroup/foreign.js","../Data.Symbol/index.js":"output/Data.Symbol/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Data.Void/index.js":"output/Data.Void/index.js","../Record.Unsafe/index.js":"output/Record.Unsafe/index.js","../Type.Proxy/index.js":"output/Type.Proxy/index.js"}],"output/Control.Alt/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Data_Functor = require("../Data.Functor/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var altArray = {
  alt: Data_Semigroup.append(Data_Semigroup.semigroupArray),
  Functor0: function Functor0() {
    return Data_Functor.functorArray;
  }
};

var alt = function alt(dict) {
  return dict.alt;
};

module.exports = {
  alt: alt,
  altArray: altArray,
  map: Data_Functor.map,
  "void": Data_Functor["void"]
};
},{"../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js"}],"output/Control.Apply/foreign.js":[function(require,module,exports) {
"use strict";

exports.arrayApply = function (fs) {
  return function (xs) {
    var l = fs.length;
    var k = xs.length;
    var result = new Array(l * k);
    var n = 0;

    for (var i = 0; i < l; i++) {
      var f = fs[i];

      for (var j = 0; j < k; j++) {
        result[n++] = f(xs[j]);
      }
    }

    return result;
  };
};
},{}],"output/Control.Apply/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Control_Category = require("../Control.Category/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Type_Proxy = require("../Type.Proxy/index.js");

var applyProxy = {
  apply: function apply(v) {
    return function (v1) {
      return Type_Proxy["Proxy"].value;
    };
  },
  Functor0: function Functor0() {
    return Data_Functor.functorProxy;
  }
};
var applyFn = {
  apply: function apply(f) {
    return function (g) {
      return function (x) {
        return f(x)(g(x));
      };
    };
  },
  Functor0: function Functor0() {
    return Data_Functor.functorFn;
  }
};
var applyArray = {
  apply: $foreign.arrayApply,
  Functor0: function Functor0() {
    return Data_Functor.functorArray;
  }
};

var apply = function apply(dict) {
  return dict.apply;
};

var applyFirst = function applyFirst(dictApply) {
  return function (a) {
    return function (b) {
      return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Data_Function["const"])(a))(b);
    };
  };
};

var applySecond = function applySecond(dictApply) {
  return function (a) {
    return function (b) {
      return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Data_Function["const"](Control_Category.identity(Control_Category.categoryFn)))(a))(b);
    };
  };
};

var lift2 = function lift2(dictApply) {
  return function (f) {
    return function (a) {
      return function (b) {
        return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b);
      };
    };
  };
};

var lift3 = function lift3(dictApply) {
  return function (f) {
    return function (a) {
      return function (b) {
        return function (c) {
          return apply(dictApply)(apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b))(c);
        };
      };
    };
  };
};

var lift4 = function lift4(dictApply) {
  return function (f) {
    return function (a) {
      return function (b) {
        return function (c) {
          return function (d) {
            return apply(dictApply)(apply(dictApply)(apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b))(c))(d);
          };
        };
      };
    };
  };
};

var lift5 = function lift5(dictApply) {
  return function (f) {
    return function (a) {
      return function (b) {
        return function (c) {
          return function (d) {
            return function (e) {
              return apply(dictApply)(apply(dictApply)(apply(dictApply)(apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b))(c))(d))(e);
            };
          };
        };
      };
    };
  };
};

module.exports = {
  apply: apply,
  applyFirst: applyFirst,
  applySecond: applySecond,
  lift2: lift2,
  lift3: lift3,
  lift4: lift4,
  lift5: lift5,
  applyFn: applyFn,
  applyArray: applyArray,
  applyProxy: applyProxy,
  map: Data_Functor.map,
  "void": Data_Functor["void"]
};
},{"./foreign.js":"output/Control.Apply/foreign.js","../Control.Category/index.js":"output/Control.Category/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Type.Proxy/index.js":"output/Type.Proxy/index.js"}],"output/Control.Applicative/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Control_Apply = require("../Control.Apply/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Type_Proxy = require("../Type.Proxy/index.js");

var pure = function pure(dict) {
  return dict.pure;
};

var unless = function unless(dictApplicative) {
  return function (v) {
    return function (v1) {
      if (!v) {
        return v1;
      }

      ;

      if (v) {
        return pure(dictApplicative)(Data_Unit.unit);
      }

      ;
      throw new Error("Failed pattern match at Control.Applicative (line 66, column 1 - line 66, column 65): " + [v.constructor.name, v1.constructor.name]);
    };
  };
};

var when = function when(dictApplicative) {
  return function (v) {
    return function (v1) {
      if (v) {
        return v1;
      }

      ;

      if (!v) {
        return pure(dictApplicative)(Data_Unit.unit);
      }

      ;
      throw new Error("Failed pattern match at Control.Applicative (line 61, column 1 - line 61, column 63): " + [v.constructor.name, v1.constructor.name]);
    };
  };
};

var liftA1 = function liftA1(dictApplicative) {
  return function (f) {
    return function (a) {
      return Control_Apply.apply(dictApplicative.Apply0())(pure(dictApplicative)(f))(a);
    };
  };
};

var applicativeProxy = {
  pure: function pure(v) {
    return Type_Proxy["Proxy"].value;
  },
  Apply0: function Apply0() {
    return Control_Apply.applyProxy;
  }
};
var applicativeFn = {
  pure: function pure(x) {
    return function (v) {
      return x;
    };
  },
  Apply0: function Apply0() {
    return Control_Apply.applyFn;
  }
};
var applicativeArray = {
  pure: function pure(x) {
    return [x];
  },
  Apply0: function Apply0() {
    return Control_Apply.applyArray;
  }
};
module.exports = {
  pure: pure,
  liftA1: liftA1,
  unless: unless,
  when: when,
  applicativeFn: applicativeFn,
  applicativeArray: applicativeArray,
  applicativeProxy: applicativeProxy,
  apply: Control_Apply.apply,
  map: Data_Functor.map,
  "void": Data_Functor["void"]
};
},{"../Control.Apply/index.js":"output/Control.Apply/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Type.Proxy/index.js":"output/Type.Proxy/index.js"}],"output/Data.Bounded/foreign.js":[function(require,module,exports) {
"use strict";

exports.topInt = 2147483647;
exports.bottomInt = -2147483648;
exports.topChar = String.fromCharCode(65535);
exports.bottomChar = String.fromCharCode(0);
exports.topNumber = Number.POSITIVE_INFINITY;
exports.bottomNumber = Number.NEGATIVE_INFINITY;
},{}],"output/Data.Ord/foreign.js":[function(require,module,exports) {
"use strict";

var unsafeCompareImpl = function unsafeCompareImpl(lt) {
  return function (eq) {
    return function (gt) {
      return function (x) {
        return function (y) {
          return x < y ? lt : x === y ? eq : gt;
        };
      };
    };
  };
};

exports.ordBooleanImpl = unsafeCompareImpl;
exports.ordIntImpl = unsafeCompareImpl;
exports.ordNumberImpl = unsafeCompareImpl;
exports.ordStringImpl = unsafeCompareImpl;
exports.ordCharImpl = unsafeCompareImpl;

exports.ordArrayImpl = function (f) {
  return function (xs) {
    return function (ys) {
      var i = 0;
      var xlen = xs.length;
      var ylen = ys.length;

      while (i < xlen && i < ylen) {
        var x = xs[i];
        var y = ys[i];
        var o = f(x)(y);

        if (o !== 0) {
          return o;
        }

        i++;
      }

      if (xlen === ylen) {
        return 0;
      } else if (xlen > ylen) {
        return -1;
      } else {
        return 1;
      }
    };
  };
};
},{}],"output/Data.Eq/foreign.js":[function(require,module,exports) {
"use strict";

var refEq = function refEq(r1) {
  return function (r2) {
    return r1 === r2;
  };
};

exports.eqBooleanImpl = refEq;
exports.eqIntImpl = refEq;
exports.eqNumberImpl = refEq;
exports.eqCharImpl = refEq;
exports.eqStringImpl = refEq;

exports.eqArrayImpl = function (f) {
  return function (xs) {
    return function (ys) {
      if (xs.length !== ys.length) return false;

      for (var i = 0; i < xs.length; i++) {
        if (!f(xs[i])(ys[i])) return false;
      }

      return true;
    };
  };
};
},{}],"output/Data.Eq/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Data_Symbol = require("../Data.Symbol/index.js");

var Record_Unsafe = require("../Record.Unsafe/index.js");

var Type_Proxy = require("../Type.Proxy/index.js");

var eqVoid = {
  eq: function eq(v) {
    return function (v1) {
      return true;
    };
  }
};
var eqUnit = {
  eq: function eq(v) {
    return function (v1) {
      return true;
    };
  }
};
var eqString = {
  eq: $foreign.eqStringImpl
};
var eqRowNil = {
  eqRecord: function eqRecord(v) {
    return function (v1) {
      return function (v2) {
        return true;
      };
    };
  }
};

var _eqRecord = function eqRecord(dict) {
  return dict.eqRecord;
};

var eqRec = function eqRec() {
  return function (dictEqRecord) {
    return {
      eq: _eqRecord(dictEqRecord)(Type_Proxy["Proxy"].value)
    };
  };
};

var eqProxy3 = {
  eq: function eq(v) {
    return function (v1) {
      return true;
    };
  }
};
var eqProxy2 = {
  eq: function eq(v) {
    return function (v1) {
      return true;
    };
  }
};
var eqProxy = {
  eq: function eq(v) {
    return function (v1) {
      return true;
    };
  }
};
var eqNumber = {
  eq: $foreign.eqNumberImpl
};
var eqInt = {
  eq: $foreign.eqIntImpl
};
var eqChar = {
  eq: $foreign.eqCharImpl
};
var eqBoolean = {
  eq: $foreign.eqBooleanImpl
};

var eq1 = function eq1(dict) {
  return dict.eq1;
};

var eq = function eq(dict) {
  return dict.eq;
};

var eqArray = function eqArray(dictEq) {
  return {
    eq: $foreign.eqArrayImpl(eq(dictEq))
  };
};

var eq1Array = {
  eq1: function eq1(dictEq) {
    return eq(eqArray(dictEq));
  }
};

var eqRowCons = function eqRowCons(dictEqRecord) {
  return function () {
    return function (dictIsSymbol) {
      return function (dictEq) {
        return {
          eqRecord: function eqRecord(v) {
            return function (ra) {
              return function (rb) {
                var tail = _eqRecord(dictEqRecord)(Type_Proxy["Proxy"].value)(ra)(rb);

                var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
                var get = Record_Unsafe.unsafeGet(key);
                return eq(dictEq)(get(ra))(get(rb)) && tail;
              };
            };
          }
        };
      };
    };
  };
};

var notEq = function notEq(dictEq) {
  return function (x) {
    return function (y) {
      return eq(eqBoolean)(eq(dictEq)(x)(y))(false);
    };
  };
};

var notEq1 = function notEq1(dictEq1) {
  return function (dictEq) {
    return function (x) {
      return function (y) {
        return eq(eqBoolean)(eq1(dictEq1)(dictEq)(x)(y))(false);
      };
    };
  };
};

module.exports = {
  eq: eq,
  notEq: notEq,
  eq1: eq1,
  notEq1: notEq1,
  eqRecord: _eqRecord,
  eqBoolean: eqBoolean,
  eqInt: eqInt,
  eqNumber: eqNumber,
  eqChar: eqChar,
  eqString: eqString,
  eqUnit: eqUnit,
  eqVoid: eqVoid,
  eqArray: eqArray,
  eqRec: eqRec,
  eqProxy: eqProxy,
  eqProxy2: eqProxy2,
  eqProxy3: eqProxy3,
  eq1Array: eq1Array,
  eqRowNil: eqRowNil,
  eqRowCons: eqRowCons
};
},{"./foreign.js":"output/Data.Eq/foreign.js","../Data.Symbol/index.js":"output/Data.Symbol/index.js","../Record.Unsafe/index.js":"output/Record.Unsafe/index.js","../Type.Proxy/index.js":"output/Type.Proxy/index.js"}],"output/Data.Ordering/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var LT = function () {
  function LT() {}

  ;
  LT.value = new LT();
  return LT;
}();

var GT = function () {
  function GT() {}

  ;
  GT.value = new GT();
  return GT;
}();

var EQ = function () {
  function EQ() {}

  ;
  EQ.value = new EQ();
  return EQ;
}();

var showOrdering = {
  show: function show(v) {
    if (v instanceof LT) {
      return "LT";
    }

    ;

    if (v instanceof GT) {
      return "GT";
    }

    ;

    if (v instanceof EQ) {
      return "EQ";
    }

    ;
    throw new Error("Failed pattern match at Data.Ordering (line 26, column 1 - line 29, column 17): " + [v.constructor.name]);
  }
};
var semigroupOrdering = {
  append: function append(v) {
    return function (v1) {
      if (v instanceof LT) {
        return LT.value;
      }

      ;

      if (v instanceof GT) {
        return GT.value;
      }

      ;

      if (v instanceof EQ) {
        return v1;
      }

      ;
      throw new Error("Failed pattern match at Data.Ordering (line 21, column 1 - line 24, column 18): " + [v.constructor.name, v1.constructor.name]);
    };
  }
};

var invert = function invert(v) {
  if (v instanceof GT) {
    return LT.value;
  }

  ;

  if (v instanceof EQ) {
    return EQ.value;
  }

  ;

  if (v instanceof LT) {
    return GT.value;
  }

  ;
  throw new Error("Failed pattern match at Data.Ordering (line 33, column 1 - line 33, column 31): " + [v.constructor.name]);
};

var eqOrdering = {
  eq: function eq(v) {
    return function (v1) {
      if (v instanceof LT && v1 instanceof LT) {
        return true;
      }

      ;

      if (v instanceof GT && v1 instanceof GT) {
        return true;
      }

      ;

      if (v instanceof EQ && v1 instanceof EQ) {
        return true;
      }

      ;
      return false;
    };
  }
};
module.exports = {
  LT: LT,
  GT: GT,
  EQ: EQ,
  invert: invert,
  eqOrdering: eqOrdering,
  semigroupOrdering: semigroupOrdering,
  showOrdering: showOrdering
};
},{}],"output/Data.Ring/foreign.js":[function(require,module,exports) {
"use strict";

exports.intSub = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x - y | 0;
  };
};

exports.numSub = function (n1) {
  return function (n2) {
    return n1 - n2;
  };
};
},{}],"output/Data.Semiring/foreign.js":[function(require,module,exports) {
"use strict";

exports.intAdd = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x + y | 0;
  };
};

exports.intMul = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x * y | 0;
  };
};

exports.numAdd = function (n1) {
  return function (n2) {
    return n1 + n2;
  };
};

exports.numMul = function (n1) {
  return function (n2) {
    return n1 * n2;
  };
};
},{}],"output/Data.Semiring/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Data_Symbol = require("../Data.Symbol/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Record_Unsafe = require("../Record.Unsafe/index.js");

var Type_Proxy = require("../Type.Proxy/index.js");

var _zeroRecord = function zeroRecord(dict) {
  return dict.zeroRecord;
};

var _zero = function zero(dict) {
  return dict.zero;
};

var semiringUnit = {
  add: function add(v) {
    return function (v1) {
      return Data_Unit.unit;
    };
  },
  zero: Data_Unit.unit,
  mul: function mul(v) {
    return function (v1) {
      return Data_Unit.unit;
    };
  },
  one: Data_Unit.unit
};
var semiringRecordNil = {
  addRecord: function addRecord(v) {
    return function (v1) {
      return function (v2) {
        return {};
      };
    };
  },
  mulRecord: function mulRecord(v) {
    return function (v1) {
      return function (v2) {
        return {};
      };
    };
  },
  oneRecord: function oneRecord(v) {
    return function (v1) {
      return {};
    };
  },
  zeroRecord: function zeroRecord(v) {
    return function (v1) {
      return {};
    };
  }
};
var semiringProxy3 = {
  add: function add(v) {
    return function (v1) {
      return Type_Proxy.Proxy3.value;
    };
  },
  mul: function mul(v) {
    return function (v1) {
      return Type_Proxy.Proxy3.value;
    };
  },
  one: Type_Proxy.Proxy3.value,
  zero: Type_Proxy.Proxy3.value
};
var semiringProxy2 = {
  add: function add(v) {
    return function (v1) {
      return Type_Proxy.Proxy2.value;
    };
  },
  mul: function mul(v) {
    return function (v1) {
      return Type_Proxy.Proxy2.value;
    };
  },
  one: Type_Proxy.Proxy2.value,
  zero: Type_Proxy.Proxy2.value
};
var semiringProxy = {
  add: function add(v) {
    return function (v1) {
      return Type_Proxy["Proxy"].value;
    };
  },
  mul: function mul(v) {
    return function (v1) {
      return Type_Proxy["Proxy"].value;
    };
  },
  one: Type_Proxy["Proxy"].value,
  zero: Type_Proxy["Proxy"].value
};
var semiringNumber = {
  add: $foreign.numAdd,
  zero: 0.0,
  mul: $foreign.numMul,
  one: 1.0
};
var semiringInt = {
  add: $foreign.intAdd,
  zero: 0,
  mul: $foreign.intMul,
  one: 1
};

var _oneRecord = function oneRecord(dict) {
  return dict.oneRecord;
};

var _one = function one(dict) {
  return dict.one;
};

var _mulRecord = function mulRecord(dict) {
  return dict.mulRecord;
};

var _mul = function mul(dict) {
  return dict.mul;
};

var _addRecord = function addRecord(dict) {
  return dict.addRecord;
};

var semiringRecord = function semiringRecord() {
  return function (dictSemiringRecord) {
    return {
      add: _addRecord(dictSemiringRecord)(Type_Proxy["Proxy"].value),
      mul: _mulRecord(dictSemiringRecord)(Type_Proxy["Proxy"].value),
      one: _oneRecord(dictSemiringRecord)(Type_Proxy["Proxy"].value)(Type_Proxy["Proxy"].value),
      zero: _zeroRecord(dictSemiringRecord)(Type_Proxy["Proxy"].value)(Type_Proxy["Proxy"].value)
    };
  };
};

var _add = function add(dict) {
  return dict.add;
};

var semiringFn = function semiringFn(dictSemiring) {
  return {
    add: function add(f) {
      return function (g) {
        return function (x) {
          return _add(dictSemiring)(f(x))(g(x));
        };
      };
    },
    zero: function zero(v) {
      return _zero(dictSemiring);
    },
    mul: function mul(f) {
      return function (g) {
        return function (x) {
          return _mul(dictSemiring)(f(x))(g(x));
        };
      };
    },
    one: function one(v) {
      return _one(dictSemiring);
    }
  };
};

var semiringRecordCons = function semiringRecordCons(dictIsSymbol) {
  return function () {
    return function (dictSemiringRecord) {
      return function (dictSemiring) {
        return {
          addRecord: function addRecord(v) {
            return function (ra) {
              return function (rb) {
                var tail = _addRecord(dictSemiringRecord)(Type_Proxy["Proxy"].value)(ra)(rb);

                var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
                var insert = Record_Unsafe.unsafeSet(key);
                var get = Record_Unsafe.unsafeGet(key);
                return insert(_add(dictSemiring)(get(ra))(get(rb)))(tail);
              };
            };
          },
          mulRecord: function mulRecord(v) {
            return function (ra) {
              return function (rb) {
                var tail = _mulRecord(dictSemiringRecord)(Type_Proxy["Proxy"].value)(ra)(rb);

                var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
                var insert = Record_Unsafe.unsafeSet(key);
                var get = Record_Unsafe.unsafeGet(key);
                return insert(_mul(dictSemiring)(get(ra))(get(rb)))(tail);
              };
            };
          },
          oneRecord: function oneRecord(v) {
            return function (v1) {
              var tail = _oneRecord(dictSemiringRecord)(Type_Proxy["Proxy"].value)(Type_Proxy["Proxy"].value);

              var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
              var insert = Record_Unsafe.unsafeSet(key);
              return insert(_one(dictSemiring))(tail);
            };
          },
          zeroRecord: function zeroRecord(v) {
            return function (v1) {
              var tail = _zeroRecord(dictSemiringRecord)(Type_Proxy["Proxy"].value)(Type_Proxy["Proxy"].value);

              var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
              var insert = Record_Unsafe.unsafeSet(key);
              return insert(_zero(dictSemiring))(tail);
            };
          }
        };
      };
    };
  };
};

module.exports = {
  add: _add,
  zero: _zero,
  mul: _mul,
  one: _one,
  addRecord: _addRecord,
  mulRecord: _mulRecord,
  oneRecord: _oneRecord,
  zeroRecord: _zeroRecord,
  semiringInt: semiringInt,
  semiringNumber: semiringNumber,
  semiringFn: semiringFn,
  semiringUnit: semiringUnit,
  semiringProxy: semiringProxy,
  semiringProxy2: semiringProxy2,
  semiringProxy3: semiringProxy3,
  semiringRecord: semiringRecord,
  semiringRecordNil: semiringRecordNil,
  semiringRecordCons: semiringRecordCons
};
},{"./foreign.js":"output/Data.Semiring/foreign.js","../Data.Symbol/index.js":"output/Data.Symbol/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Record.Unsafe/index.js":"output/Record.Unsafe/index.js","../Type.Proxy/index.js":"output/Type.Proxy/index.js"}],"output/Data.Ring/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Symbol = require("../Data.Symbol/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Record_Unsafe = require("../Record.Unsafe/index.js");

var Type_Proxy = require("../Type.Proxy/index.js");

var _subRecord = function subRecord(dict) {
  return dict.subRecord;
};

var _sub = function sub(dict) {
  return dict.sub;
};

var ringUnit = {
  sub: function sub(v) {
    return function (v1) {
      return Data_Unit.unit;
    };
  },
  Semiring0: function Semiring0() {
    return Data_Semiring.semiringUnit;
  }
};
var ringRecordNil = {
  subRecord: function subRecord(v) {
    return function (v1) {
      return function (v2) {
        return {};
      };
    };
  },
  SemiringRecord0: function SemiringRecord0() {
    return Data_Semiring.semiringRecordNil;
  }
};

var ringRecordCons = function ringRecordCons(dictIsSymbol) {
  return function () {
    return function (dictRingRecord) {
      return function (dictRing) {
        return {
          subRecord: function subRecord(v) {
            return function (ra) {
              return function (rb) {
                var tail = _subRecord(dictRingRecord)(Type_Proxy["Proxy"].value)(ra)(rb);

                var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
                var insert = Record_Unsafe.unsafeSet(key);
                var get = Record_Unsafe.unsafeGet(key);
                return insert(_sub(dictRing)(get(ra))(get(rb)))(tail);
              };
            };
          },
          SemiringRecord0: function SemiringRecord0() {
            return Data_Semiring.semiringRecordCons(dictIsSymbol)()(dictRingRecord.SemiringRecord0())(dictRing.Semiring0());
          }
        };
      };
    };
  };
};

var ringRecord = function ringRecord() {
  return function (dictRingRecord) {
    return {
      sub: _subRecord(dictRingRecord)(Type_Proxy["Proxy"].value),
      Semiring0: function Semiring0() {
        return Data_Semiring.semiringRecord()(dictRingRecord.SemiringRecord0());
      }
    };
  };
};

var ringProxy3 = {
  sub: function sub(v) {
    return function (v1) {
      return Type_Proxy.Proxy3.value;
    };
  },
  Semiring0: function Semiring0() {
    return Data_Semiring.semiringProxy3;
  }
};
var ringProxy2 = {
  sub: function sub(v) {
    return function (v1) {
      return Type_Proxy.Proxy2.value;
    };
  },
  Semiring0: function Semiring0() {
    return Data_Semiring.semiringProxy2;
  }
};
var ringProxy = {
  sub: function sub(v) {
    return function (v1) {
      return Type_Proxy["Proxy"].value;
    };
  },
  Semiring0: function Semiring0() {
    return Data_Semiring.semiringProxy;
  }
};
var ringNumber = {
  sub: $foreign.numSub,
  Semiring0: function Semiring0() {
    return Data_Semiring.semiringNumber;
  }
};
var ringInt = {
  sub: $foreign.intSub,
  Semiring0: function Semiring0() {
    return Data_Semiring.semiringInt;
  }
};

var ringFn = function ringFn(dictRing) {
  return {
    sub: function sub(f) {
      return function (g) {
        return function (x) {
          return _sub(dictRing)(f(x))(g(x));
        };
      };
    },
    Semiring0: function Semiring0() {
      return Data_Semiring.semiringFn(dictRing.Semiring0());
    }
  };
};

var negate = function negate(dictRing) {
  return function (a) {
    return _sub(dictRing)(Data_Semiring.zero(dictRing.Semiring0()))(a);
  };
};

module.exports = {
  sub: _sub,
  negate: negate,
  subRecord: _subRecord,
  ringInt: ringInt,
  ringNumber: ringNumber,
  ringUnit: ringUnit,
  ringFn: ringFn,
  ringProxy: ringProxy,
  ringProxy2: ringProxy2,
  ringProxy3: ringProxy3,
  ringRecord: ringRecord,
  ringRecordNil: ringRecordNil,
  ringRecordCons: ringRecordCons,
  add: Data_Semiring.add,
  mul: Data_Semiring.mul,
  one: Data_Semiring.one,
  zero: Data_Semiring.zero
};
},{"./foreign.js":"output/Data.Ring/foreign.js","../Data.Semiring/index.js":"output/Data.Semiring/index.js","../Data.Symbol/index.js":"output/Data.Symbol/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Record.Unsafe/index.js":"output/Record.Unsafe/index.js","../Type.Proxy/index.js":"output/Type.Proxy/index.js"}],"output/Data.Ord/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Ring = require("../Data.Ring/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Symbol = require("../Data.Symbol/index.js");

var Record_Unsafe = require("../Record.Unsafe/index.js");

var Type_Proxy = require("../Type.Proxy/index.js");

var ordVoid = {
  compare: function compare(v) {
    return function (v1) {
      return Data_Ordering.EQ.value;
    };
  },
  Eq0: function Eq0() {
    return Data_Eq.eqVoid;
  }
};
var ordUnit = {
  compare: function compare(v) {
    return function (v1) {
      return Data_Ordering.EQ.value;
    };
  },
  Eq0: function Eq0() {
    return Data_Eq.eqUnit;
  }
};
var ordString = {
  compare: $foreign.ordStringImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value),
  Eq0: function Eq0() {
    return Data_Eq.eqString;
  }
};
var ordRecordNil = {
  compareRecord: function compareRecord(v) {
    return function (v1) {
      return function (v2) {
        return Data_Ordering.EQ.value;
      };
    };
  },
  EqRecord0: function EqRecord0() {
    return Data_Eq.eqRowNil;
  }
};
var ordProxy3 = {
  compare: function compare(v) {
    return function (v1) {
      return Data_Ordering.EQ.value;
    };
  },
  Eq0: function Eq0() {
    return Data_Eq.eqProxy3;
  }
};
var ordProxy2 = {
  compare: function compare(v) {
    return function (v1) {
      return Data_Ordering.EQ.value;
    };
  },
  Eq0: function Eq0() {
    return Data_Eq.eqProxy2;
  }
};
var ordProxy = {
  compare: function compare(v) {
    return function (v1) {
      return Data_Ordering.EQ.value;
    };
  },
  Eq0: function Eq0() {
    return Data_Eq.eqProxy;
  }
};
var ordOrdering = {
  compare: function compare(v) {
    return function (v1) {
      if (v instanceof Data_Ordering.LT && v1 instanceof Data_Ordering.LT) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (v instanceof Data_Ordering.EQ && v1 instanceof Data_Ordering.EQ) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (v instanceof Data_Ordering.GT && v1 instanceof Data_Ordering.GT) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (v instanceof Data_Ordering.LT) {
        return Data_Ordering.LT.value;
      }

      ;

      if (v instanceof Data_Ordering.EQ && v1 instanceof Data_Ordering.LT) {
        return Data_Ordering.GT.value;
      }

      ;

      if (v instanceof Data_Ordering.EQ && v1 instanceof Data_Ordering.GT) {
        return Data_Ordering.LT.value;
      }

      ;

      if (v instanceof Data_Ordering.GT) {
        return Data_Ordering.GT.value;
      }

      ;
      throw new Error("Failed pattern match at Data.Ord (line 121, column 1 - line 128, column 21): " + [v.constructor.name, v1.constructor.name]);
    };
  },
  Eq0: function Eq0() {
    return Data_Ordering.eqOrdering;
  }
};
var ordNumber = {
  compare: $foreign.ordNumberImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value),
  Eq0: function Eq0() {
    return Data_Eq.eqNumber;
  }
};
var ordInt = {
  compare: $foreign.ordIntImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value),
  Eq0: function Eq0() {
    return Data_Eq.eqInt;
  }
};
var ordChar = {
  compare: $foreign.ordCharImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value),
  Eq0: function Eq0() {
    return Data_Eq.eqChar;
  }
};
var ordBoolean = {
  compare: $foreign.ordBooleanImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value),
  Eq0: function Eq0() {
    return Data_Eq.eqBoolean;
  }
};

var _compareRecord = function compareRecord(dict) {
  return dict.compareRecord;
};

var ordRecord = function ordRecord() {
  return function (dictOrdRecord) {
    return {
      compare: _compareRecord(dictOrdRecord)(Type_Proxy["Proxy"].value),
      Eq0: function Eq0() {
        return Data_Eq.eqRec()(dictOrdRecord.EqRecord0());
      }
    };
  };
};

var compare1 = function compare1(dict) {
  return dict.compare1;
};

var compare = function compare(dict) {
  return dict.compare;
};

var comparing = function comparing(dictOrd) {
  return function (f) {
    return function (x) {
      return function (y) {
        return compare(dictOrd)(f(x))(f(y));
      };
    };
  };
};

var greaterThan = function greaterThan(dictOrd) {
  return function (a1) {
    return function (a2) {
      var v = compare(dictOrd)(a1)(a2);

      if (v instanceof Data_Ordering.GT) {
        return true;
      }

      ;
      return false;
    };
  };
};

var greaterThanOrEq = function greaterThanOrEq(dictOrd) {
  return function (a1) {
    return function (a2) {
      var v = compare(dictOrd)(a1)(a2);

      if (v instanceof Data_Ordering.LT) {
        return false;
      }

      ;
      return true;
    };
  };
};

var signum = function signum(dictOrd) {
  return function (dictRing) {
    return function (x) {
      var $50 = greaterThanOrEq(dictOrd)(x)(Data_Semiring.zero(dictRing.Semiring0()));

      if ($50) {
        return Data_Semiring.one(dictRing.Semiring0());
      }

      ;
      return Data_Ring.negate(dictRing)(Data_Semiring.one(dictRing.Semiring0()));
    };
  };
};

var lessThan = function lessThan(dictOrd) {
  return function (a1) {
    return function (a2) {
      var v = compare(dictOrd)(a1)(a2);

      if (v instanceof Data_Ordering.LT) {
        return true;
      }

      ;
      return false;
    };
  };
};

var lessThanOrEq = function lessThanOrEq(dictOrd) {
  return function (a1) {
    return function (a2) {
      var v = compare(dictOrd)(a1)(a2);

      if (v instanceof Data_Ordering.GT) {
        return false;
      }

      ;
      return true;
    };
  };
};

var max = function max(dictOrd) {
  return function (x) {
    return function (y) {
      var v = compare(dictOrd)(x)(y);

      if (v instanceof Data_Ordering.LT) {
        return y;
      }

      ;

      if (v instanceof Data_Ordering.EQ) {
        return x;
      }

      ;

      if (v instanceof Data_Ordering.GT) {
        return x;
      }

      ;
      throw new Error("Failed pattern match at Data.Ord (line 176, column 3 - line 179, column 12): " + [v.constructor.name]);
    };
  };
};

var min = function min(dictOrd) {
  return function (x) {
    return function (y) {
      var v = compare(dictOrd)(x)(y);

      if (v instanceof Data_Ordering.LT) {
        return x;
      }

      ;

      if (v instanceof Data_Ordering.EQ) {
        return x;
      }

      ;

      if (v instanceof Data_Ordering.GT) {
        return y;
      }

      ;
      throw new Error("Failed pattern match at Data.Ord (line 167, column 3 - line 170, column 12): " + [v.constructor.name]);
    };
  };
};

var ordArray = function ordArray(dictOrd) {
  return {
    compare: function () {
      var toDelta = function toDelta(x) {
        return function (y) {
          var v = compare(dictOrd)(x)(y);

          if (v instanceof Data_Ordering.EQ) {
            return 0;
          }

          ;

          if (v instanceof Data_Ordering.LT) {
            return 1;
          }

          ;

          if (v instanceof Data_Ordering.GT) {
            return -1 | 0;
          }

          ;
          throw new Error("Failed pattern match at Data.Ord (line 74, column 7 - line 77, column 17): " + [v.constructor.name]);
        };
      };

      return function (xs) {
        return function (ys) {
          return compare(ordInt)(0)($foreign.ordArrayImpl(toDelta)(xs)(ys));
        };
      };
    }(),
    Eq0: function Eq0() {
      return Data_Eq.eqArray(dictOrd.Eq0());
    }
  };
};

var ord1Array = {
  compare1: function compare1(dictOrd) {
    return compare(ordArray(dictOrd));
  },
  Eq10: function Eq10() {
    return Data_Eq.eq1Array;
  }
};

var ordRecordCons = function ordRecordCons(dictOrdRecord) {
  return function () {
    return function (dictIsSymbol) {
      return function (dictOrd) {
        return {
          compareRecord: function compareRecord(v) {
            return function (ra) {
              return function (rb) {
                var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
                var left = compare(dictOrd)(Record_Unsafe.unsafeGet(key)(ra))(Record_Unsafe.unsafeGet(key)(rb));
                var $56 = Data_Eq.notEq(Data_Ordering.eqOrdering)(left)(Data_Ordering.EQ.value);

                if ($56) {
                  return left;
                }

                ;
                return _compareRecord(dictOrdRecord)(Type_Proxy["Proxy"].value)(ra)(rb);
              };
            };
          },
          EqRecord0: function EqRecord0() {
            return Data_Eq.eqRowCons(dictOrdRecord.EqRecord0())()(dictIsSymbol)(dictOrd.Eq0());
          }
        };
      };
    };
  };
};

var clamp = function clamp(dictOrd) {
  return function (low) {
    return function (hi) {
      return function (x) {
        return min(dictOrd)(hi)(max(dictOrd)(low)(x));
      };
    };
  };
};

var between = function between(dictOrd) {
  return function (low) {
    return function (hi) {
      return function (x) {
        if (lessThan(dictOrd)(x)(low)) {
          return false;
        }

        ;

        if (greaterThan(dictOrd)(x)(hi)) {
          return false;
        }

        ;
        return true;
      };
    };
  };
};

var abs = function abs(dictOrd) {
  return function (dictRing) {
    return function (x) {
      var $60 = greaterThanOrEq(dictOrd)(x)(Data_Semiring.zero(dictRing.Semiring0()));

      if ($60) {
        return x;
      }

      ;
      return Data_Ring.negate(dictRing)(x);
    };
  };
};

module.exports = {
  compare: compare,
  compare1: compare1,
  lessThan: lessThan,
  lessThanOrEq: lessThanOrEq,
  greaterThan: greaterThan,
  greaterThanOrEq: greaterThanOrEq,
  comparing: comparing,
  min: min,
  max: max,
  clamp: clamp,
  between: between,
  abs: abs,
  signum: signum,
  compareRecord: _compareRecord,
  ordBoolean: ordBoolean,
  ordInt: ordInt,
  ordNumber: ordNumber,
  ordString: ordString,
  ordChar: ordChar,
  ordUnit: ordUnit,
  ordVoid: ordVoid,
  ordProxy: ordProxy,
  ordProxy2: ordProxy2,
  ordProxy3: ordProxy3,
  ordArray: ordArray,
  ordOrdering: ordOrdering,
  ord1Array: ord1Array,
  ordRecordNil: ordRecordNil,
  ordRecordCons: ordRecordCons,
  ordRecord: ordRecord,
  EQ: Data_Ordering.EQ,
  GT: Data_Ordering.GT,
  LT: Data_Ordering.LT
};
},{"./foreign.js":"output/Data.Ord/foreign.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Data.Ring/index.js":"output/Data.Ring/index.js","../Data.Semiring/index.js":"output/Data.Semiring/index.js","../Data.Symbol/index.js":"output/Data.Symbol/index.js","../Record.Unsafe/index.js":"output/Record.Unsafe/index.js","../Type.Proxy/index.js":"output/Type.Proxy/index.js"}],"output/Data.Bounded/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Symbol = require("../Data.Symbol/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Record_Unsafe = require("../Record.Unsafe/index.js");

var Type_Proxy = require("../Type.Proxy/index.js");

var _topRecord = function topRecord(dict) {
  return dict.topRecord;
};

var top = function top(dict) {
  return dict.top;
};

var boundedUnit = {
  top: Data_Unit.unit,
  bottom: Data_Unit.unit,
  Ord0: function Ord0() {
    return Data_Ord.ordUnit;
  }
};
var boundedRecordNil = {
  topRecord: function topRecord(v) {
    return function (v1) {
      return {};
    };
  },
  bottomRecord: function bottomRecord(v) {
    return function (v1) {
      return {};
    };
  },
  OrdRecord0: function OrdRecord0() {
    return Data_Ord.ordRecordNil;
  }
};
var boundedProxy3 = {
  bottom: Type_Proxy.Proxy3.value,
  top: Type_Proxy.Proxy3.value,
  Ord0: function Ord0() {
    return Data_Ord.ordProxy3;
  }
};
var boundedProxy2 = {
  bottom: Type_Proxy.Proxy2.value,
  top: Type_Proxy.Proxy2.value,
  Ord0: function Ord0() {
    return Data_Ord.ordProxy2;
  }
};
var boundedProxy = {
  bottom: Type_Proxy["Proxy"].value,
  top: Type_Proxy["Proxy"].value,
  Ord0: function Ord0() {
    return Data_Ord.ordProxy;
  }
};
var boundedOrdering = {
  top: Data_Ordering.GT.value,
  bottom: Data_Ordering.LT.value,
  Ord0: function Ord0() {
    return Data_Ord.ordOrdering;
  }
};
var boundedNumber = {
  top: $foreign.topNumber,
  bottom: $foreign.bottomNumber,
  Ord0: function Ord0() {
    return Data_Ord.ordNumber;
  }
};
var boundedInt = {
  top: $foreign.topInt,
  bottom: $foreign.bottomInt,
  Ord0: function Ord0() {
    return Data_Ord.ordInt;
  }
};
var boundedChar = {
  top: $foreign.topChar,
  bottom: $foreign.bottomChar,
  Ord0: function Ord0() {
    return Data_Ord.ordChar;
  }
};
var boundedBoolean = {
  top: true,
  bottom: false,
  Ord0: function Ord0() {
    return Data_Ord.ordBoolean;
  }
};

var _bottomRecord = function bottomRecord(dict) {
  return dict.bottomRecord;
};

var boundedRecord = function boundedRecord() {
  return function (dictBoundedRecord) {
    return {
      top: _topRecord(dictBoundedRecord)(Type_Proxy["Proxy"].value)(Type_Proxy["Proxy"].value),
      bottom: _bottomRecord(dictBoundedRecord)(Type_Proxy["Proxy"].value)(Type_Proxy["Proxy"].value),
      Ord0: function Ord0() {
        return Data_Ord.ordRecord()(dictBoundedRecord.OrdRecord0());
      }
    };
  };
};

var bottom = function bottom(dict) {
  return dict.bottom;
};

var boundedRecordCons = function boundedRecordCons(dictIsSymbol) {
  return function (dictBounded) {
    return function () {
      return function () {
        return function (dictBoundedRecord) {
          return {
            topRecord: function topRecord(v) {
              return function (rowProxy) {
                var tail = _topRecord(dictBoundedRecord)(Type_Proxy["Proxy"].value)(rowProxy);

                var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
                var insert = Record_Unsafe.unsafeSet(key);
                return insert(top(dictBounded))(tail);
              };
            },
            bottomRecord: function bottomRecord(v) {
              return function (rowProxy) {
                var tail = _bottomRecord(dictBoundedRecord)(Type_Proxy["Proxy"].value)(rowProxy);

                var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
                var insert = Record_Unsafe.unsafeSet(key);
                return insert(bottom(dictBounded))(tail);
              };
            },
            OrdRecord0: function OrdRecord0() {
              return Data_Ord.ordRecordCons(dictBoundedRecord.OrdRecord0())()(dictIsSymbol)(dictBounded.Ord0());
            }
          };
        };
      };
    };
  };
};

module.exports = {
  bottom: bottom,
  top: top,
  bottomRecord: _bottomRecord,
  topRecord: _topRecord,
  boundedBoolean: boundedBoolean,
  boundedInt: boundedInt,
  boundedChar: boundedChar,
  boundedOrdering: boundedOrdering,
  boundedUnit: boundedUnit,
  boundedNumber: boundedNumber,
  boundedProxy: boundedProxy,
  boundedProxy2: boundedProxy2,
  boundedProxy3: boundedProxy3,
  boundedRecordNil: boundedRecordNil,
  boundedRecordCons: boundedRecordCons,
  boundedRecord: boundedRecord,
  EQ: Data_Ord.EQ,
  GT: Data_Ord.GT,
  LT: Data_Ord.LT,
  compare: Data_Ord.compare
};
},{"./foreign.js":"output/Data.Bounded/foreign.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Data.Symbol/index.js":"output/Data.Symbol/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Record.Unsafe/index.js":"output/Record.Unsafe/index.js","../Type.Proxy/index.js":"output/Type.Proxy/index.js"}],"output/Data.Functor.Invariant/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Data_Functor = require("../Data.Functor/index.js");

var invariantMultiplicative = {
  imap: function imap(f) {
    return function (v) {
      return function (v1) {
        return f(v1);
      };
    };
  }
};
var invariantEndo = {
  imap: function imap(ab) {
    return function (ba) {
      return function (v) {
        return function ($37) {
          return ab(v(ba($37)));
        };
      };
    };
  }
};
var invariantDual = {
  imap: function imap(f) {
    return function (v) {
      return function (v1) {
        return f(v1);
      };
    };
  }
};
var invariantDisj = {
  imap: function imap(f) {
    return function (v) {
      return function (v1) {
        return f(v1);
      };
    };
  }
};
var invariantConj = {
  imap: function imap(f) {
    return function (v) {
      return function (v1) {
        return f(v1);
      };
    };
  }
};
var invariantAdditive = {
  imap: function imap(f) {
    return function (v) {
      return function (v1) {
        return f(v1);
      };
    };
  }
};

var imapF = function imapF(dictFunctor) {
  return function (f) {
    return function (v) {
      return Data_Functor.map(dictFunctor)(f);
    };
  };
};

var invariantArray = {
  imap: imapF(Data_Functor.functorArray)
};
var invariantFn = {
  imap: imapF(Data_Functor.functorFn)
};

var _imap = function imap(dict) {
  return dict.imap;
};

var invariantAlternate = function invariantAlternate(dictInvariant) {
  return {
    imap: function imap(f) {
      return function (g) {
        return function (v) {
          return _imap(dictInvariant)(f)(g)(v);
        };
      };
    }
  };
};

module.exports = {
  imap: _imap,
  imapF: imapF,
  invariantFn: invariantFn,
  invariantArray: invariantArray,
  invariantAdditive: invariantAdditive,
  invariantConj: invariantConj,
  invariantDisj: invariantDisj,
  invariantDual: invariantDual,
  invariantEndo: invariantEndo,
  invariantMultiplicative: invariantMultiplicative,
  invariantAlternate: invariantAlternate
};
},{"../Data.Functor/index.js":"output/Data.Functor/index.js"}],"output/Data.Show/foreign.js":[function(require,module,exports) {
"use strict";

exports.showIntImpl = function (n) {
  return n.toString();
};

exports.showNumberImpl = function (n) {
  var str = n.toString();
  return isNaN(str + ".0") ? str : str + ".0";
};

exports.showCharImpl = function (c) {
  var code = c.charCodeAt(0);

  if (code < 0x20 || code === 0x7F) {
    switch (c) {
      case "\x07":
        return "'\\a'";

      case "\b":
        return "'\\b'";

      case "\f":
        return "'\\f'";

      case "\n":
        return "'\\n'";

      case "\r":
        return "'\\r'";

      case "\t":
        return "'\\t'";

      case "\v":
        return "'\\v'";
    }

    return "'\\" + code.toString(10) + "'";
  }

  return c === "'" || c === "\\" ? "'\\" + c + "'" : "'" + c + "'";
};

exports.showStringImpl = function (s) {
  var l = s.length;
  return "\"" + s.replace(/[\0-\x1F\x7F"\\]/g, // eslint-disable-line no-control-regex
  function (c, i) {
    switch (c) {
      case "\"":
      case "\\":
        return "\\" + c;

      case "\x07":
        return "\\a";

      case "\b":
        return "\\b";

      case "\f":
        return "\\f";

      case "\n":
        return "\\n";

      case "\r":
        return "\\r";

      case "\t":
        return "\\t";

      case "\v":
        return "\\v";
    }

    var k = i + 1;
    var empty = k < l && s[k] >= "0" && s[k] <= "9" ? "\\&" : "";
    return "\\" + c.charCodeAt(0).toString(10) + empty;
  }) + "\"";
};

exports.showArrayImpl = function (f) {
  return function (xs) {
    var ss = [];

    for (var i = 0, l = xs.length; i < l; i++) {
      ss[i] = f(xs[i]);
    }

    return "[" + ss.join(",") + "]";
  };
};

exports.cons = function (head) {
  return function (tail) {
    return [head].concat(tail);
  };
};

exports.join = function (separator) {
  return function (xs) {
    return xs.join(separator);
  };
};
},{}],"output/Data.Show/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Data_Symbol = require("../Data.Symbol/index.js");

var Record_Unsafe = require("../Record.Unsafe/index.js");

var Type_Proxy = require("../Type.Proxy/index.js");

var showString = {
  show: $foreign.showStringImpl
};
var showRecordFieldsNil = {
  showRecordFields: function showRecordFields(v) {
    return function (v1) {
      return [];
    };
  }
};

var _showRecordFields = function showRecordFields(dict) {
  return dict.showRecordFields;
};

var showRecord = function showRecord() {
  return function (dictShowRecordFields) {
    return {
      show: function show(record) {
        var v = _showRecordFields(dictShowRecordFields)(Type_Proxy["Proxy"].value)(record);

        if (v.length === 0) {
          return "{}";
        }

        ;
        return $foreign.join(" ")(["{", $foreign.join(", ")(v), "}"]);
      }
    };
  };
};

var showProxy3 = {
  show: function show(v) {
    return "Proxy3";
  }
};
var showProxy2 = {
  show: function show(v) {
    return "Proxy2";
  }
};
var showProxy = {
  show: function show(v) {
    return "Proxy";
  }
};
var showNumber = {
  show: $foreign.showNumberImpl
};
var showInt = {
  show: $foreign.showIntImpl
};
var showChar = {
  show: $foreign.showCharImpl
};
var showBoolean = {
  show: function show(v) {
    if (v) {
      return "true";
    }

    ;

    if (!v) {
      return "false";
    }

    ;
    throw new Error("Failed pattern match at Data.Show (line 20, column 1 - line 22, column 23): " + [v.constructor.name]);
  }
};

var show = function show(dict) {
  return dict.show;
};

var showArray = function showArray(dictShow) {
  return {
    show: $foreign.showArrayImpl(show(dictShow))
  };
};

var showRecordFieldsCons = function showRecordFieldsCons(dictIsSymbol) {
  return function (dictShowRecordFields) {
    return function (dictShow) {
      return {
        showRecordFields: function showRecordFields(v) {
          return function (record) {
            var tail = _showRecordFields(dictShowRecordFields)(Type_Proxy["Proxy"].value)(record);

            var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
            var focus = Record_Unsafe.unsafeGet(key)(record);
            return $foreign.cons($foreign.join(": ")([key, show(dictShow)(focus)]))(tail);
          };
        }
      };
    };
  };
};

module.exports = {
  show: show,
  showRecordFields: _showRecordFields,
  showBoolean: showBoolean,
  showInt: showInt,
  showNumber: showNumber,
  showChar: showChar,
  showString: showString,
  showArray: showArray,
  showProxy: showProxy,
  showProxy2: showProxy2,
  showProxy3: showProxy3,
  showRecord: showRecord,
  showRecordFieldsNil: showRecordFieldsNil,
  showRecordFieldsCons: showRecordFieldsCons
};
},{"./foreign.js":"output/Data.Show/foreign.js","../Data.Symbol/index.js":"output/Data.Symbol/index.js","../Record.Unsafe/index.js":"output/Record.Unsafe/index.js","../Type.Proxy/index.js":"output/Type.Proxy/index.js"}],"output/Data.Generic.Rep/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Data_Show = require("../Data.Show/index.js");

var Data_Symbol = require("../Data.Symbol/index.js");

var Type_Proxy = require("../Type.Proxy/index.js");

var Inl = function () {
  function Inl(value0) {
    this.value0 = value0;
  }

  ;

  Inl.create = function (value0) {
    return new Inl(value0);
  };

  return Inl;
}();

var Inr = function () {
  function Inr(value0) {
    this.value0 = value0;
  }

  ;

  Inr.create = function (value0) {
    return new Inr(value0);
  };

  return Inr;
}();

var Product = function () {
  function Product(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  Product.create = function (value0) {
    return function (value1) {
      return new Product(value0, value1);
    };
  };

  return Product;
}();

var NoArguments = function () {
  function NoArguments() {}

  ;
  NoArguments.value = new NoArguments();
  return NoArguments;
}();

var Constructor = function Constructor(x) {
  return x;
};

var Argument = function Argument(x) {
  return x;
};

var to = function to(dict) {
  return dict.to;
};

var showSum = function showSum(dictShow) {
  return function (dictShow1) {
    return {
      show: function show(v) {
        if (v instanceof Inl) {
          return "(Inl " + (Data_Show.show(dictShow)(v.value0) + ")");
        }

        ;

        if (v instanceof Inr) {
          return "(Inr " + (Data_Show.show(dictShow1)(v.value0) + ")");
        }

        ;
        throw new Error("Failed pattern match at Data.Generic.Rep (line 31, column 1 - line 33, column 42): " + [v.constructor.name]);
      }
    };
  };
};

var showProduct = function showProduct(dictShow) {
  return function (dictShow1) {
    return {
      show: function show(v) {
        return "(Product " + (Data_Show.show(dictShow)(v.value0) + (" " + (Data_Show.show(dictShow1)(v.value1) + ")")));
      }
    };
  };
};

var showNoArguments = {
  show: function show(v) {
    return "NoArguments";
  }
};

var showConstructor = function showConstructor(dictIsSymbol) {
  return function (dictShow) {
    return {
      show: function show(v) {
        return "(Constructor @" + (Data_Show.show(Data_Show.showString)(Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value)) + (" " + (Data_Show.show(dictShow)(v) + ")")));
      }
    };
  };
};

var showArgument = function showArgument(dictShow) {
  return {
    show: function show(v) {
      return "(Argument " + (Data_Show.show(dictShow)(v) + ")");
    }
  };
};

var repOf = function repOf(dictGeneric) {
  return function (v) {
    return Type_Proxy["Proxy"].value;
  };
};

var from = function from(dict) {
  return dict.from;
};

module.exports = {
  to: to,
  from: from,
  repOf: repOf,
  NoArguments: NoArguments,
  Inl: Inl,
  Inr: Inr,
  Product: Product,
  Constructor: Constructor,
  Argument: Argument,
  showNoArguments: showNoArguments,
  showSum: showSum,
  showProduct: showProduct,
  showConstructor: showConstructor,
  showArgument: showArgument
};
},{"../Data.Show/index.js":"output/Data.Show/index.js","../Data.Symbol/index.js":"output/Data.Symbol/index.js","../Type.Proxy/index.js":"output/Type.Proxy/index.js"}],"output/Data.Maybe/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Category = require("../Control.Category/index.js");

var Data_Bounded = require("../Data.Bounded/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Functor_Invariant = require("../Data.Functor.Invariant/index.js");

var Data_Generic_Rep = require("../Data.Generic.Rep/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Nothing = function () {
  function Nothing() {}

  ;
  Nothing.value = new Nothing();
  return Nothing;
}();

var Just = function () {
  function Just(value0) {
    this.value0 = value0;
  }

  ;

  Just.create = function (value0) {
    return new Just(value0);
  };

  return Just;
}();

var showMaybe = function showMaybe(dictShow) {
  return {
    show: function show(v) {
      if (v instanceof Just) {
        return "(Just " + (Data_Show.show(dictShow)(v.value0) + ")");
      }

      ;

      if (v instanceof Nothing) {
        return "Nothing";
      }

      ;
      throw new Error("Failed pattern match at Data.Maybe (line 216, column 1 - line 218, column 28): " + [v.constructor.name]);
    }
  };
};

var semigroupMaybe = function semigroupMaybe(dictSemigroup) {
  return {
    append: function append(v) {
      return function (v1) {
        if (v instanceof Nothing) {
          return v1;
        }

        ;

        if (v1 instanceof Nothing) {
          return v;
        }

        ;

        if (v instanceof Just && v1 instanceof Just) {
          return new Just(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0));
        }

        ;
        throw new Error("Failed pattern match at Data.Maybe (line 185, column 1 - line 188, column 43): " + [v.constructor.name, v1.constructor.name]);
      };
    }
  };
};

var optional = function optional(dictAlt) {
  return function (dictApplicative) {
    return function (a) {
      return Control_Alt.alt(dictAlt)(Data_Functor.map(dictAlt.Functor0())(Just.create)(a))(Control_Applicative.pure(dictApplicative)(Nothing.value));
    };
  };
};

var monoidMaybe = function monoidMaybe(dictSemigroup) {
  return {
    mempty: Nothing.value,
    Semigroup0: function Semigroup0() {
      return semigroupMaybe(dictSemigroup);
    }
  };
};

var maybe$prime = function maybe$prime(v) {
  return function (v1) {
    return function (v2) {
      if (v2 instanceof Nothing) {
        return v(Data_Unit.unit);
      }

      ;

      if (v2 instanceof Just) {
        return v1(v2.value0);
      }

      ;
      throw new Error("Failed pattern match at Data.Maybe (line 243, column 1 - line 243, column 62): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
    };
  };
};

var maybe = function maybe(v) {
  return function (v1) {
    return function (v2) {
      if (v2 instanceof Nothing) {
        return v;
      }

      ;

      if (v2 instanceof Just) {
        return v1(v2.value0);
      }

      ;
      throw new Error("Failed pattern match at Data.Maybe (line 230, column 1 - line 230, column 51): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
    };
  };
};

var isNothing = maybe(true)(Data_Function["const"](false));
var isJust = maybe(false)(Data_Function["const"](true));
var genericMaybe = {
  to: function to(x) {
    if (x instanceof Data_Generic_Rep.Inl) {
      return Nothing.value;
    }

    ;

    if (x instanceof Data_Generic_Rep.Inr) {
      return new Just(x.value0);
    }

    ;
    throw new Error("Failed pattern match at Data.Maybe (line 220, column 1 - line 220, column 52): " + [x.constructor.name]);
  },
  from: function from(x) {
    if (x instanceof Nothing) {
      return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);
    }

    ;

    if (x instanceof Just) {
      return new Data_Generic_Rep.Inr(x.value0);
    }

    ;
    throw new Error("Failed pattern match at Data.Maybe (line 220, column 1 - line 220, column 52): " + [x.constructor.name]);
  }
};
var functorMaybe = {
  map: function map(v) {
    return function (v1) {
      if (v1 instanceof Just) {
        return new Just(v(v1.value0));
      }

      ;
      return Nothing.value;
    };
  }
};
var invariantMaybe = {
  imap: Data_Functor_Invariant.imapF(functorMaybe)
};

var fromMaybe$prime = function fromMaybe$prime(a) {
  return maybe$prime(a)(Control_Category.identity(Control_Category.categoryFn));
};

var fromMaybe = function fromMaybe(a) {
  return maybe(a)(Control_Category.identity(Control_Category.categoryFn));
};

var fromJust = function fromJust() {
  return function (v) {
    if (v instanceof Just) {
      return v.value0;
    }

    ;
    throw new Error("Failed pattern match at Data.Maybe (line 281, column 1 - line 281, column 46): " + [v.constructor.name]);
  };
};

var extendMaybe = {
  extend: function extend(v) {
    return function (v1) {
      if (v1 instanceof Nothing) {
        return Nothing.value;
      }

      ;
      return new Just(v(v1));
    };
  },
  Functor0: function Functor0() {
    return functorMaybe;
  }
};

var eqMaybe = function eqMaybe(dictEq) {
  return {
    eq: function eq(x) {
      return function (y) {
        if (x instanceof Nothing && y instanceof Nothing) {
          return true;
        }

        ;

        if (x instanceof Just && y instanceof Just) {
          return Data_Eq.eq(dictEq)(x.value0)(y.value0);
        }

        ;
        return false;
      };
    }
  };
};

var ordMaybe = function ordMaybe(dictOrd) {
  return {
    compare: function compare(x) {
      return function (y) {
        if (x instanceof Nothing && y instanceof Nothing) {
          return Data_Ordering.EQ.value;
        }

        ;

        if (x instanceof Nothing) {
          return Data_Ordering.LT.value;
        }

        ;

        if (y instanceof Nothing) {
          return Data_Ordering.GT.value;
        }

        ;

        if (x instanceof Just && y instanceof Just) {
          return Data_Ord.compare(dictOrd)(x.value0)(y.value0);
        }

        ;
        throw new Error("Failed pattern match at Data.Maybe (line 205, column 1 - line 205, column 51): " + [x.constructor.name, y.constructor.name]);
      };
    },
    Eq0: function Eq0() {
      return eqMaybe(dictOrd.Eq0());
    }
  };
};

var eq1Maybe = {
  eq1: function eq1(dictEq) {
    return Data_Eq.eq(eqMaybe(dictEq));
  }
};
var ord1Maybe = {
  compare1: function compare1(dictOrd) {
    return Data_Ord.compare(ordMaybe(dictOrd));
  },
  Eq10: function Eq10() {
    return eq1Maybe;
  }
};

var boundedMaybe = function boundedMaybe(dictBounded) {
  return {
    top: new Just(Data_Bounded.top(dictBounded)),
    bottom: Nothing.value,
    Ord0: function Ord0() {
      return ordMaybe(dictBounded.Ord0());
    }
  };
};

var applyMaybe = {
  apply: function apply(v) {
    return function (v1) {
      if (v instanceof Just) {
        return Data_Functor.map(functorMaybe)(v.value0)(v1);
      }

      ;

      if (v instanceof Nothing) {
        return Nothing.value;
      }

      ;
      throw new Error("Failed pattern match at Data.Maybe (line 68, column 1 - line 70, column 30): " + [v.constructor.name, v1.constructor.name]);
    };
  },
  Functor0: function Functor0() {
    return functorMaybe;
  }
};
var bindMaybe = {
  bind: function bind(v) {
    return function (v1) {
      if (v instanceof Just) {
        return v1(v.value0);
      }

      ;

      if (v instanceof Nothing) {
        return Nothing.value;
      }

      ;
      throw new Error("Failed pattern match at Data.Maybe (line 126, column 1 - line 128, column 28): " + [v.constructor.name, v1.constructor.name]);
    };
  },
  Apply0: function Apply0() {
    return applyMaybe;
  }
};
var applicativeMaybe = {
  pure: Just.create,
  Apply0: function Apply0() {
    return applyMaybe;
  }
};
var monadMaybe = {
  Applicative0: function Applicative0() {
    return applicativeMaybe;
  },
  Bind1: function Bind1() {
    return bindMaybe;
  }
};
var altMaybe = {
  alt: function alt(v) {
    return function (v1) {
      if (v instanceof Nothing) {
        return v1;
      }

      ;
      return v;
    };
  },
  Functor0: function Functor0() {
    return functorMaybe;
  }
};
var plusMaybe = {
  empty: Nothing.value,
  Alt0: function Alt0() {
    return altMaybe;
  }
};
var alternativeMaybe = {
  Applicative0: function Applicative0() {
    return applicativeMaybe;
  },
  Plus1: function Plus1() {
    return plusMaybe;
  }
};
var monadZeroMaybe = {
  Monad0: function Monad0() {
    return monadMaybe;
  },
  Alternative1: function Alternative1() {
    return alternativeMaybe;
  },
  MonadZeroIsDeprecated2: function MonadZeroIsDeprecated2() {
    return undefined;
  }
};
module.exports = {
  Nothing: Nothing,
  Just: Just,
  maybe: maybe,
  "maybe'": maybe$prime,
  fromMaybe: fromMaybe,
  "fromMaybe'": fromMaybe$prime,
  isJust: isJust,
  isNothing: isNothing,
  fromJust: fromJust,
  optional: optional,
  functorMaybe: functorMaybe,
  applyMaybe: applyMaybe,
  applicativeMaybe: applicativeMaybe,
  altMaybe: altMaybe,
  plusMaybe: plusMaybe,
  alternativeMaybe: alternativeMaybe,
  bindMaybe: bindMaybe,
  monadMaybe: monadMaybe,
  monadZeroMaybe: monadZeroMaybe,
  extendMaybe: extendMaybe,
  invariantMaybe: invariantMaybe,
  semigroupMaybe: semigroupMaybe,
  monoidMaybe: monoidMaybe,
  eqMaybe: eqMaybe,
  eq1Maybe: eq1Maybe,
  ordMaybe: ordMaybe,
  ord1Maybe: ord1Maybe,
  boundedMaybe: boundedMaybe,
  showMaybe: showMaybe,
  genericMaybe: genericMaybe
};
},{"../Control.Alt/index.js":"output/Control.Alt/index.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Category/index.js":"output/Control.Category/index.js","../Data.Bounded/index.js":"output/Data.Bounded/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Functor.Invariant/index.js":"output/Data.Functor.Invariant/index.js","../Data.Generic.Rep/index.js":"output/Data.Generic.Rep/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js"}],"output/Data.MediaType.Common/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var textXML = "text/xml";
var textPlain = "text/plain";
var textHTML = "text/html";
var textCSV = "text/csv";
var textCSS = "text/css";
var multipartFormData = "multipart/form-data";
var imagePNG = "image/png";
var imageJPEG = "image/jpeg";
var imageGIF = "image/gif";
var applicationXML = "application/xml";
var applicationOctetStream = "application/octet-stream";
var applicationJavascript = "application/javascript";
var applicationJSON = "application/json";
var applicationFormURLEncoded = "application/x-www-form-urlencoded";
module.exports = {
  applicationFormURLEncoded: applicationFormURLEncoded,
  applicationJSON: applicationJSON,
  applicationJavascript: applicationJavascript,
  applicationOctetStream: applicationOctetStream,
  applicationXML: applicationXML,
  imageGIF: imageGIF,
  imageJPEG: imageJPEG,
  imagePNG: imagePNG,
  multipartFormData: multipartFormData,
  textCSV: textCSV,
  textHTML: textHTML,
  textPlain: textPlain,
  textXML: textXML,
  textCSS: textCSS
};
},{}],"output/Affjax.RequestBody/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_MediaType_Common = require("../Data.MediaType.Common/index.js");

var ArrayView = function () {
  function ArrayView(value0) {
    this.value0 = value0;
  }

  ;

  ArrayView.create = function (value0) {
    return new ArrayView(value0);
  };

  return ArrayView;
}();

var Blob = function () {
  function Blob(value0) {
    this.value0 = value0;
  }

  ;

  Blob.create = function (value0) {
    return new Blob(value0);
  };

  return Blob;
}();

var Document = function () {
  function Document(value0) {
    this.value0 = value0;
  }

  ;

  Document.create = function (value0) {
    return new Document(value0);
  };

  return Document;
}();

var $$String = function () {
  function $$String(value0) {
    this.value0 = value0;
  }

  ;

  $$String.create = function (value0) {
    return new $$String(value0);
  };

  return $$String;
}();

var FormData = function () {
  function FormData(value0) {
    this.value0 = value0;
  }

  ;

  FormData.create = function (value0) {
    return new FormData(value0);
  };

  return FormData;
}();

var FormURLEncoded = function () {
  function FormURLEncoded(value0) {
    this.value0 = value0;
  }

  ;

  FormURLEncoded.create = function (value0) {
    return new FormURLEncoded(value0);
  };

  return FormURLEncoded;
}();

var Json = function () {
  function Json(value0) {
    this.value0 = value0;
  }

  ;

  Json.create = function (value0) {
    return new Json(value0);
  };

  return Json;
}();

var toMediaType = function toMediaType(v) {
  if (v instanceof FormURLEncoded) {
    return new Data_Maybe.Just(Data_MediaType_Common.applicationFormURLEncoded);
  }

  ;

  if (v instanceof Json) {
    return new Data_Maybe.Just(Data_MediaType_Common.applicationJSON);
  }

  ;
  return Data_Maybe.Nothing.value;
};

var string = $$String.create;
var json = Json.create;
var formURLEncoded = FormURLEncoded.create;
var formData = FormData.create;
var document = Document.create;
var blob = Blob.create;

var arrayView = function arrayView(av) {
  return new ArrayView(function (f) {
    return f(av);
  });
};

module.exports = {
  ArrayView: ArrayView,
  Blob: Blob,
  Document: Document,
  "String": $$String,
  FormData: FormData,
  FormURLEncoded: FormURLEncoded,
  Json: Json,
  arrayView: arrayView,
  blob: blob,
  document: document,
  string: string,
  formData: formData,
  formURLEncoded: formURLEncoded,
  json: json,
  toMediaType: toMediaType
};
},{"../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.MediaType.Common/index.js":"output/Data.MediaType.Common/index.js"}],"output/Data.MediaType/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Data_Ord = require("../Data.Ord/index.js");

var Data_Show = require("../Data.Show/index.js");

var MediaType = function MediaType(x) {
  return x;
};

var showMediaType = {
  show: function show(v) {
    return "(MediaType " + (Data_Show.show(Data_Show.showString)(v) + ")");
  }
};
var newtypeMediaType = {
  Coercible0: function Coercible0() {
    return undefined;
  }
};
var eqMediaType = {
  eq: function eq(x) {
    return function (y) {
      return x === y;
    };
  }
};
var ordMediaType = {
  compare: function compare(x) {
    return function (y) {
      return Data_Ord.compare(Data_Ord.ordString)(x)(y);
    };
  },
  Eq0: function Eq0() {
    return eqMediaType;
  }
};
module.exports = {
  MediaType: MediaType,
  newtypeMediaType: newtypeMediaType,
  eqMediaType: eqMediaType,
  ordMediaType: ordMediaType,
  showMediaType: showMediaType
};
},{"../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Show/index.js":"output/Data.Show/index.js"}],"output/Unsafe.Coerce/foreign.js":[function(require,module,exports) {
"use strict"; // module Unsafe.Coerce

exports.unsafeCoerce = function (x) {
  return x;
};
},{}],"output/Unsafe.Coerce/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

module.exports = {
  unsafeCoerce: $foreign.unsafeCoerce
};
},{"./foreign.js":"output/Unsafe.Coerce/foreign.js"}],"output/Safe.Coerce/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var coerce = function coerce() {
  return Unsafe_Coerce.unsafeCoerce;
};

module.exports = {
  coerce: coerce
};
},{"../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js"}],"output/Data.Newtype/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Safe_Coerce = require("../Safe.Coerce/index.js");

var wrap = Safe_Coerce.coerce;
var unwrap = Safe_Coerce.coerce;

var underF2 = function underF2() {
  return function () {
    return function () {
      return function () {
        return function (v) {
          return Safe_Coerce.coerce();
        };
      };
    };
  };
};

var underF = function underF() {
  return function () {
    return function () {
      return function () {
        return function (v) {
          return Safe_Coerce.coerce();
        };
      };
    };
  };
};

var under2 = function under2() {
  return function () {
    return function (v) {
      return Safe_Coerce.coerce();
    };
  };
};

var under = function under() {
  return function () {
    return function (v) {
      return Safe_Coerce.coerce();
    };
  };
};

var un = function un() {
  return function (v) {
    return unwrap();
  };
};

var traverse = function traverse() {
  return function () {
    return function (v) {
      return Safe_Coerce.coerce();
    };
  };
};

var overF2 = function overF2() {
  return function () {
    return function () {
      return function () {
        return function (v) {
          return Safe_Coerce.coerce();
        };
      };
    };
  };
};

var overF = function overF() {
  return function () {
    return function () {
      return function () {
        return function (v) {
          return Safe_Coerce.coerce();
        };
      };
    };
  };
};

var over2 = function over2() {
  return function () {
    return function (v) {
      return Safe_Coerce.coerce();
    };
  };
};

var over = function over() {
  return function () {
    return function (v) {
      return Safe_Coerce.coerce();
    };
  };
};

var newtypeMultiplicative = {
  Coercible0: function Coercible0() {
    return undefined;
  }
};
var newtypeLast = {
  Coercible0: function Coercible0() {
    return undefined;
  }
};
var newtypeFirst = {
  Coercible0: function Coercible0() {
    return undefined;
  }
};
var newtypeEndo = {
  Coercible0: function Coercible0() {
    return undefined;
  }
};
var newtypeDual = {
  Coercible0: function Coercible0() {
    return undefined;
  }
};
var newtypeDisj = {
  Coercible0: function Coercible0() {
    return undefined;
  }
};
var newtypeConj = {
  Coercible0: function Coercible0() {
    return undefined;
  }
};
var newtypeAdditive = {
  Coercible0: function Coercible0() {
    return undefined;
  }
};

var collect = function collect() {
  return function () {
    return function (v) {
      return Safe_Coerce.coerce();
    };
  };
};

var alaF = function alaF() {
  return function () {
    return function () {
      return function () {
        return function (v) {
          return Safe_Coerce.coerce();
        };
      };
    };
  };
};

var ala = function ala() {
  return function () {
    return function () {
      return function (v) {
        return function (f) {
          return Safe_Coerce.coerce()(f(wrap()));
        };
      };
    };
  };
};

module.exports = {
  wrap: wrap,
  unwrap: unwrap,
  un: un,
  ala: ala,
  alaF: alaF,
  over: over,
  overF: overF,
  under: under,
  underF: underF,
  over2: over2,
  overF2: overF2,
  under2: under2,
  underF2: underF2,
  traverse: traverse,
  collect: collect,
  newtypeAdditive: newtypeAdditive,
  newtypeMultiplicative: newtypeMultiplicative,
  newtypeConj: newtypeConj,
  newtypeDisj: newtypeDisj,
  newtypeDual: newtypeDual,
  newtypeEndo: newtypeEndo,
  newtypeFirst: newtypeFirst,
  newtypeLast: newtypeLast
};
},{"../Safe.Coerce/index.js":"output/Safe.Coerce/index.js"}],"output/Affjax.RequestHeader/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Data_Eq = require("../Data.Eq/index.js");

var Data_MediaType = require("../Data.MediaType/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Show = require("../Data.Show/index.js");

var Accept = function () {
  function Accept(value0) {
    this.value0 = value0;
  }

  ;

  Accept.create = function (value0) {
    return new Accept(value0);
  };

  return Accept;
}();

var ContentType = function () {
  function ContentType(value0) {
    this.value0 = value0;
  }

  ;

  ContentType.create = function (value0) {
    return new ContentType(value0);
  };

  return ContentType;
}();

var RequestHeader = function () {
  function RequestHeader(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  RequestHeader.create = function (value0) {
    return function (value1) {
      return new RequestHeader(value0, value1);
    };
  };

  return RequestHeader;
}();

var value = function value(v) {
  if (v instanceof Accept) {
    return Data_Newtype.unwrap()(v.value0);
  }

  ;

  if (v instanceof ContentType) {
    return Data_Newtype.unwrap()(v.value0);
  }

  ;

  if (v instanceof RequestHeader) {
    return v.value1;
  }

  ;
  throw new Error("Failed pattern match at Affjax.RequestHeader (line 26, column 1 - line 26, column 33): " + [v.constructor.name]);
};

var showRequestHeader = {
  show: function show(v) {
    if (v instanceof Accept) {
      return "(Accept " + (Data_Show.show(Data_MediaType.showMediaType)(v.value0) + ")");
    }

    ;

    if (v instanceof ContentType) {
      return "(ContentType " + (Data_Show.show(Data_MediaType.showMediaType)(v.value0) + ")");
    }

    ;

    if (v instanceof RequestHeader) {
      return "(RequestHeader " + (Data_Show.show(Data_Show.showString)(v.value0) + (" " + (Data_Show.show(Data_Show.showString)(v.value1) + ")")));
    }

    ;
    throw new Error("Failed pattern match at Affjax.RequestHeader (line 16, column 1 - line 19, column 81): " + [v.constructor.name]);
  }
};

var name = function name(v) {
  if (v instanceof Accept) {
    return "Accept";
  }

  ;

  if (v instanceof ContentType) {
    return "Content-Type";
  }

  ;

  if (v instanceof RequestHeader) {
    return v.value0;
  }

  ;
  throw new Error("Failed pattern match at Affjax.RequestHeader (line 21, column 1 - line 21, column 32): " + [v.constructor.name]);
};

var eqRequestHeader = {
  eq: function eq(x) {
    return function (y) {
      if (x instanceof Accept && y instanceof Accept) {
        return Data_Eq.eq(Data_MediaType.eqMediaType)(x.value0)(y.value0);
      }

      ;

      if (x instanceof ContentType && y instanceof ContentType) {
        return Data_Eq.eq(Data_MediaType.eqMediaType)(x.value0)(y.value0);
      }

      ;

      if (x instanceof RequestHeader && y instanceof RequestHeader) {
        return x.value0 === y.value0 && x.value1 === y.value1;
      }

      ;
      return false;
    };
  }
};
var ordRequestHeader = {
  compare: function compare(x) {
    return function (y) {
      if (x instanceof Accept && y instanceof Accept) {
        return Data_Ord.compare(Data_MediaType.ordMediaType)(x.value0)(y.value0);
      }

      ;

      if (x instanceof Accept) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof Accept) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof ContentType && y instanceof ContentType) {
        return Data_Ord.compare(Data_MediaType.ordMediaType)(x.value0)(y.value0);
      }

      ;

      if (x instanceof ContentType) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof ContentType) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof RequestHeader && y instanceof RequestHeader) {
        var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);

        if (v instanceof Data_Ordering.LT) {
          return Data_Ordering.LT.value;
        }

        ;

        if (v instanceof Data_Ordering.GT) {
          return Data_Ordering.GT.value;
        }

        ;
        return Data_Ord.compare(Data_Ord.ordString)(x.value1)(y.value1);
      }

      ;
      throw new Error("Failed pattern match at Affjax.RequestHeader (line 14, column 1 - line 14, column 54): " + [x.constructor.name, y.constructor.name]);
    };
  },
  Eq0: function Eq0() {
    return eqRequestHeader;
  }
};
module.exports = {
  Accept: Accept,
  ContentType: ContentType,
  RequestHeader: RequestHeader,
  name: name,
  value: value,
  eqRequestHeader: eqRequestHeader,
  ordRequestHeader: ordRequestHeader,
  showRequestHeader: showRequestHeader
};
},{"../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.MediaType/index.js":"output/Data.MediaType/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Data.Show/index.js":"output/Data.Show/index.js"}],"output/Affjax.ResponseFormat/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Control_Category = require("../Control.Category/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_MediaType_Common = require("../Data.MediaType.Common/index.js");

var $$ArrayBuffer = function () {
  function $$ArrayBuffer(value0) {
    this.value0 = value0;
  }

  ;

  $$ArrayBuffer.create = function (value0) {
    return new $$ArrayBuffer(value0);
  };

  return $$ArrayBuffer;
}();

var Blob = function () {
  function Blob(value0) {
    this.value0 = value0;
  }

  ;

  Blob.create = function (value0) {
    return new Blob(value0);
  };

  return Blob;
}();

var Document = function () {
  function Document(value0) {
    this.value0 = value0;
  }

  ;

  Document.create = function (value0) {
    return new Document(value0);
  };

  return Document;
}();

var Json = function () {
  function Json(value0) {
    this.value0 = value0;
  }

  ;

  Json.create = function (value0) {
    return new Json(value0);
  };

  return Json;
}();

var $$String = function () {
  function $$String(value0) {
    this.value0 = value0;
  }

  ;

  $$String.create = function (value0) {
    return new $$String(value0);
  };

  return $$String;
}();

var Ignore = function () {
  function Ignore(value0) {
    this.value0 = value0;
  }

  ;

  Ignore.create = function (value0) {
    return new Ignore(value0);
  };

  return Ignore;
}();

var toResponseType = function toResponseType(v) {
  if (v instanceof $$ArrayBuffer) {
    return "arraybuffer";
  }

  ;

  if (v instanceof Blob) {
    return "blob";
  }

  ;

  if (v instanceof Document) {
    return "document";
  }

  ;

  if (v instanceof Json) {
    return "text";
  }

  ;

  if (v instanceof $$String) {
    return "text";
  }

  ;

  if (v instanceof Ignore) {
    return "";
  }

  ;
  throw new Error("Failed pattern match at Affjax.ResponseFormat (line 44, column 3 - line 50, column 19): " + [v.constructor.name]);
};

var toMediaType = function toMediaType(v) {
  if (v instanceof Json) {
    return new Data_Maybe.Just(Data_MediaType_Common.applicationJSON);
  }

  ;
  return Data_Maybe.Nothing.value;
};

var string = new $$String(Control_Category.identity(Control_Category.categoryFn));
var json = new Json(Control_Category.identity(Control_Category.categoryFn));
var ignore = new Ignore(Control_Category.identity(Control_Category.categoryFn));
var document = new Document(Control_Category.identity(Control_Category.categoryFn));
var blob = new Blob(Control_Category.identity(Control_Category.categoryFn));
var arrayBuffer = new $$ArrayBuffer(Control_Category.identity(Control_Category.categoryFn));
module.exports = {
  "ArrayBuffer": $$ArrayBuffer,
  Blob: Blob,
  Document: Document,
  Json: Json,
  "String": $$String,
  Ignore: Ignore,
  arrayBuffer: arrayBuffer,
  blob: blob,
  document: document,
  json: json,
  string: string,
  ignore: ignore,
  toResponseType: toResponseType,
  toMediaType: toMediaType
};
},{"../Control.Category/index.js":"output/Control.Category/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.MediaType.Common/index.js":"output/Data.MediaType.Common/index.js"}],"output/Affjax.ResponseHeader/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Show = require("../Data.Show/index.js");

var ResponseHeader = function () {
  function ResponseHeader(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  ResponseHeader.create = function (value0) {
    return function (value1) {
      return new ResponseHeader(value0, value1);
    };
  };

  return ResponseHeader;
}();

var value = function value(v) {
  return v.value1;
};

var showResponseHeader = {
  show: function show(v) {
    return "(ResponseHeader " + (Data_Show.show(Data_Show.showString)(v.value0) + (" " + (Data_Show.show(Data_Show.showString)(v.value1) + ")")));
  }
};

var name = function name(v) {
  return v.value0;
};

var eqResponseHeader = {
  eq: function eq(x) {
    return function (y) {
      return x.value0 === y.value0 && x.value1 === y.value1;
    };
  }
};
var ordResponseHeader = {
  compare: function compare(x) {
    return function (y) {
      var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);

      if (v instanceof Data_Ordering.LT) {
        return Data_Ordering.LT.value;
      }

      ;

      if (v instanceof Data_Ordering.GT) {
        return Data_Ordering.GT.value;
      }

      ;
      return Data_Ord.compare(Data_Ord.ordString)(x.value1)(y.value1);
    };
  },
  Eq0: function Eq0() {
    return eqResponseHeader;
  }
};
module.exports = {
  ResponseHeader: ResponseHeader,
  name: name,
  value: value,
  eqResponseHeader: eqResponseHeader,
  ordResponseHeader: ordResponseHeader,
  showResponseHeader: showResponseHeader
};
},{"../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Data.Show/index.js":"output/Data.Show/index.js"}],"output/Control.Bind/foreign.js":[function(require,module,exports) {
"use strict";

exports.arrayBind = function (arr) {
  return function (f) {
    var result = [];

    for (var i = 0, l = arr.length; i < l; i++) {
      Array.prototype.push.apply(result, f(arr[i]));
    }

    return result;
  };
};
},{}],"output/Control.Bind/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Category = require("../Control.Category/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Type_Proxy = require("../Type.Proxy/index.js");

var discard = function discard(dict) {
  return dict.discard;
};

var bindProxy = {
  bind: function bind(v) {
    return function (v1) {
      return Type_Proxy["Proxy"].value;
    };
  },
  Apply0: function Apply0() {
    return Control_Apply.applyProxy;
  }
};
var bindFn = {
  bind: function bind(m) {
    return function (f) {
      return function (x) {
        return f(m(x))(x);
      };
    };
  },
  Apply0: function Apply0() {
    return Control_Apply.applyFn;
  }
};
var bindArray = {
  bind: $foreign.arrayBind,
  Apply0: function Apply0() {
    return Control_Apply.applyArray;
  }
};

var bind = function bind(dict) {
  return dict.bind;
};

var bindFlipped = function bindFlipped(dictBind) {
  return Data_Function.flip(bind(dictBind));
};

var composeKleisliFlipped = function composeKleisliFlipped(dictBind) {
  return function (f) {
    return function (g) {
      return function (a) {
        return bindFlipped(dictBind)(f)(g(a));
      };
    };
  };
};

var composeKleisli = function composeKleisli(dictBind) {
  return function (f) {
    return function (g) {
      return function (a) {
        return bind(dictBind)(f(a))(g);
      };
    };
  };
};

var discardProxy = {
  discard: function discard(dictBind) {
    return bind(dictBind);
  }
};
var discardProxy2 = {
  discard: function discard(dictBind) {
    return bind(dictBind);
  }
};
var discardProxy3 = {
  discard: function discard(dictBind) {
    return bind(dictBind);
  }
};
var discardUnit = {
  discard: function discard(dictBind) {
    return bind(dictBind);
  }
};

var ifM = function ifM(dictBind) {
  return function (cond) {
    return function (t) {
      return function (f) {
        return bind(dictBind)(cond)(function (cond$prime) {
          if (cond$prime) {
            return t;
          }

          ;
          return f;
        });
      };
    };
  };
};

var join = function join(dictBind) {
  return function (m) {
    return bind(dictBind)(m)(Control_Category.identity(Control_Category.categoryFn));
  };
};

module.exports = {
  bind: bind,
  bindFlipped: bindFlipped,
  discard: discard,
  join: join,
  composeKleisli: composeKleisli,
  composeKleisliFlipped: composeKleisliFlipped,
  ifM: ifM,
  bindFn: bindFn,
  bindArray: bindArray,
  bindProxy: bindProxy,
  discardUnit: discardUnit,
  discardProxy: discardProxy,
  discardProxy2: discardProxy2,
  discardProxy3: discardProxy3,
  liftA1: Control_Applicative.liftA1,
  pure: Control_Applicative.pure,
  unless: Control_Applicative.unless,
  when: Control_Applicative.when,
  apply: Control_Apply.apply,
  map: Data_Functor.map,
  "void": Data_Functor["void"]
};
},{"./foreign.js":"output/Control.Bind/foreign.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Category/index.js":"output/Control.Category/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Type.Proxy/index.js":"output/Type.Proxy/index.js"}],"output/Data.Either/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Data_Bounded = require("../Data.Bounded/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Functor_Invariant = require("../Data.Functor.Invariant/index.js");

var Data_Generic_Rep = require("../Data.Generic.Rep/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Left = function () {
  function Left(value0) {
    this.value0 = value0;
  }

  ;

  Left.create = function (value0) {
    return new Left(value0);
  };

  return Left;
}();

var Right = function () {
  function Right(value0) {
    this.value0 = value0;
  }

  ;

  Right.create = function (value0) {
    return new Right(value0);
  };

  return Right;
}();

var showEither = function showEither(dictShow) {
  return function (dictShow1) {
    return {
      show: function show(v) {
        if (v instanceof Left) {
          return "(Left " + (Data_Show.show(dictShow)(v.value0) + ")");
        }

        ;

        if (v instanceof Right) {
          return "(Right " + (Data_Show.show(dictShow1)(v.value0) + ")");
        }

        ;
        throw new Error("Failed pattern match at Data.Either (line 173, column 1 - line 175, column 46): " + [v.constructor.name]);
      }
    };
  };
};

var note$prime = function note$prime(f) {
  return Data_Maybe["maybe'"](function ($105) {
    return Left.create(f($105));
  })(Right.create);
};

var note = function note(a) {
  return Data_Maybe.maybe(new Left(a))(Right.create);
};

var genericEither = {
  to: function to(x) {
    if (x instanceof Data_Generic_Rep.Inl) {
      return new Left(x.value0);
    }

    ;

    if (x instanceof Data_Generic_Rep.Inr) {
      return new Right(x.value0);
    }

    ;
    throw new Error("Failed pattern match at Data.Either (line 33, column 1 - line 33, column 56): " + [x.constructor.name]);
  },
  from: function from(x) {
    if (x instanceof Left) {
      return new Data_Generic_Rep.Inl(x.value0);
    }

    ;

    if (x instanceof Right) {
      return new Data_Generic_Rep.Inr(x.value0);
    }

    ;
    throw new Error("Failed pattern match at Data.Either (line 33, column 1 - line 33, column 56): " + [x.constructor.name]);
  }
};
var functorEither = {
  map: function map(f) {
    return function (m) {
      if (m instanceof Left) {
        return new Left(m.value0);
      }

      ;

      if (m instanceof Right) {
        return new Right(f(m.value0));
      }

      ;
      throw new Error("Failed pattern match at Data.Either (line 31, column 1 - line 31, column 52): " + [m.constructor.name]);
    };
  }
};
var invariantEither = {
  imap: Data_Functor_Invariant.imapF(functorEither)
};

var fromRight$prime = function fromRight$prime(v) {
  return function (v1) {
    if (v1 instanceof Right) {
      return v1.value0;
    }

    ;
    return v(Data_Unit.unit);
  };
};

var fromRight = function fromRight(v) {
  return function (v1) {
    if (v1 instanceof Right) {
      return v1.value0;
    }

    ;
    return v;
  };
};

var fromLeft$prime = function fromLeft$prime(v) {
  return function (v1) {
    if (v1 instanceof Left) {
      return v1.value0;
    }

    ;
    return v(Data_Unit.unit);
  };
};

var fromLeft = function fromLeft(v) {
  return function (v1) {
    if (v1 instanceof Left) {
      return v1.value0;
    }

    ;
    return v;
  };
};

var extendEither = {
  extend: function extend(v) {
    return function (v1) {
      if (v1 instanceof Left) {
        return new Left(v1.value0);
      }

      ;
      return new Right(v(v1));
    };
  },
  Functor0: function Functor0() {
    return functorEither;
  }
};

var eqEither = function eqEither(dictEq) {
  return function (dictEq1) {
    return {
      eq: function eq(x) {
        return function (y) {
          if (x instanceof Left && y instanceof Left) {
            return Data_Eq.eq(dictEq)(x.value0)(y.value0);
          }

          ;

          if (x instanceof Right && y instanceof Right) {
            return Data_Eq.eq(dictEq1)(x.value0)(y.value0);
          }

          ;
          return false;
        };
      }
    };
  };
};

var ordEither = function ordEither(dictOrd) {
  return function (dictOrd1) {
    return {
      compare: function compare(x) {
        return function (y) {
          if (x instanceof Left && y instanceof Left) {
            return Data_Ord.compare(dictOrd)(x.value0)(y.value0);
          }

          ;

          if (x instanceof Left) {
            return Data_Ordering.LT.value;
          }

          ;

          if (y instanceof Left) {
            return Data_Ordering.GT.value;
          }

          ;

          if (x instanceof Right && y instanceof Right) {
            return Data_Ord.compare(dictOrd1)(x.value0)(y.value0);
          }

          ;
          throw new Error("Failed pattern match at Data.Either (line 189, column 1 - line 189, column 64): " + [x.constructor.name, y.constructor.name]);
        };
      },
      Eq0: function Eq0() {
        return eqEither(dictOrd.Eq0())(dictOrd1.Eq0());
      }
    };
  };
};

var eq1Either = function eq1Either(dictEq) {
  return {
    eq1: function eq1(dictEq1) {
      return Data_Eq.eq(eqEither(dictEq)(dictEq1));
    }
  };
};

var ord1Either = function ord1Either(dictOrd) {
  return {
    compare1: function compare1(dictOrd1) {
      return Data_Ord.compare(ordEither(dictOrd)(dictOrd1));
    },
    Eq10: function Eq10() {
      return eq1Either(dictOrd.Eq0());
    }
  };
};

var either = function either(v) {
  return function (v1) {
    return function (v2) {
      if (v2 instanceof Left) {
        return v(v2.value0);
      }

      ;

      if (v2 instanceof Right) {
        return v1(v2.value0);
      }

      ;
      throw new Error("Failed pattern match at Data.Either (line 208, column 1 - line 208, column 64): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
    };
  };
};

var hush = either(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create);
var isLeft = either(Data_Function["const"](true))(Data_Function["const"](false));
var isRight = either(Data_Function["const"](false))(Data_Function["const"](true));

var choose = function choose(dictAlt) {
  return function (a) {
    return function (b) {
      return Control_Alt.alt(dictAlt)(Data_Functor.map(dictAlt.Functor0())(Left.create)(a))(Data_Functor.map(dictAlt.Functor0())(Right.create)(b));
    };
  };
};

var boundedEither = function boundedEither(dictBounded) {
  return function (dictBounded1) {
    return {
      top: new Right(Data_Bounded.top(dictBounded1)),
      bottom: new Left(Data_Bounded.bottom(dictBounded)),
      Ord0: function Ord0() {
        return ordEither(dictBounded.Ord0())(dictBounded1.Ord0());
      }
    };
  };
};

var applyEither = {
  apply: function apply(v) {
    return function (v1) {
      if (v instanceof Left) {
        return new Left(v.value0);
      }

      ;

      if (v instanceof Right) {
        return Data_Functor.map(functorEither)(v.value0)(v1);
      }

      ;
      throw new Error("Failed pattern match at Data.Either (line 70, column 1 - line 72, column 30): " + [v.constructor.name, v1.constructor.name]);
    };
  },
  Functor0: function Functor0() {
    return functorEither;
  }
};
var bindEither = {
  bind: either(function (e) {
    return function (v) {
      return new Left(e);
    };
  })(function (a) {
    return function (f) {
      return f(a);
    };
  }),
  Apply0: function Apply0() {
    return applyEither;
  }
};

var semigroupEither = function semigroupEither(dictSemigroup) {
  return {
    append: function append(x) {
      return function (y) {
        return Control_Apply.apply(applyEither)(Data_Functor.map(functorEither)(Data_Semigroup.append(dictSemigroup))(x))(y);
      };
    }
  };
};

var applicativeEither = {
  pure: Right.create,
  Apply0: function Apply0() {
    return applyEither;
  }
};
var monadEither = {
  Applicative0: function Applicative0() {
    return applicativeEither;
  },
  Bind1: function Bind1() {
    return bindEither;
  }
};
var altEither = {
  alt: function alt(v) {
    return function (v1) {
      if (v instanceof Left) {
        return v1;
      }

      ;
      return v;
    };
  },
  Functor0: function Functor0() {
    return functorEither;
  }
};
module.exports = {
  Left: Left,
  Right: Right,
  either: either,
  choose: choose,
  isLeft: isLeft,
  isRight: isRight,
  fromLeft: fromLeft,
  "fromLeft'": fromLeft$prime,
  fromRight: fromRight,
  "fromRight'": fromRight$prime,
  note: note,
  "note'": note$prime,
  hush: hush,
  functorEither: functorEither,
  genericEither: genericEither,
  invariantEither: invariantEither,
  applyEither: applyEither,
  applicativeEither: applicativeEither,
  altEither: altEither,
  bindEither: bindEither,
  monadEither: monadEither,
  extendEither: extendEither,
  showEither: showEither,
  eqEither: eqEither,
  eq1Either: eq1Either,
  ordEither: ordEither,
  ord1Either: ord1Either,
  boundedEither: boundedEither,
  semigroupEither: semigroupEither
};
},{"../Control.Alt/index.js":"output/Control.Alt/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Data.Bounded/index.js":"output/Data.Bounded/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Functor.Invariant/index.js":"output/Data.Functor.Invariant/index.js","../Data.Generic.Rep/index.js":"output/Data.Generic.Rep/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js"}],"output/Effect/foreign.js":[function(require,module,exports) {
"use strict";

exports.pureE = function (a) {
  return function () {
    return a;
  };
};

exports.bindE = function (a) {
  return function (f) {
    return function () {
      return f(a())();
    };
  };
};

exports.untilE = function (f) {
  return function () {
    while (!f()) {
      ;
    }
  };
};

exports.whileE = function (f) {
  return function (a) {
    return function () {
      while (f()) {
        a();
      }
    };
  };
};

exports.forE = function (lo) {
  return function (hi) {
    return function (f) {
      return function () {
        for (var i = lo; i < hi; i++) {
          f(i)();
        }
      };
    };
  };
};

exports.foreachE = function (as) {
  return function (f) {
    return function () {
      for (var i = 0, l = as.length; i < l; i++) {
        f(as[i])();
      }
    };
  };
};
},{}],"output/Control.Monad/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var whenM = function whenM(dictMonad) {
  return function (mb) {
    return function (m) {
      return Control_Bind.bind(dictMonad.Bind1())(mb)(function (b) {
        return Control_Applicative.when(dictMonad.Applicative0())(b)(m);
      });
    };
  };
};

var unlessM = function unlessM(dictMonad) {
  return function (mb) {
    return function (m) {
      return Control_Bind.bind(dictMonad.Bind1())(mb)(function (b) {
        return Control_Applicative.unless(dictMonad.Applicative0())(b)(m);
      });
    };
  };
};

var monadProxy = {
  Applicative0: function Applicative0() {
    return Control_Applicative.applicativeProxy;
  },
  Bind1: function Bind1() {
    return Control_Bind.bindProxy;
  }
};
var monadFn = {
  Applicative0: function Applicative0() {
    return Control_Applicative.applicativeFn;
  },
  Bind1: function Bind1() {
    return Control_Bind.bindFn;
  }
};
var monadArray = {
  Applicative0: function Applicative0() {
    return Control_Applicative.applicativeArray;
  },
  Bind1: function Bind1() {
    return Control_Bind.bindArray;
  }
};

var liftM1 = function liftM1(dictMonad) {
  return function (f) {
    return function (a) {
      return Control_Bind.bind(dictMonad.Bind1())(a)(function (a$prime) {
        return Control_Applicative.pure(dictMonad.Applicative0())(f(a$prime));
      });
    };
  };
};

var ap = function ap(dictMonad) {
  return function (f) {
    return function (a) {
      return Control_Bind.bind(dictMonad.Bind1())(f)(function (f$prime) {
        return Control_Bind.bind(dictMonad.Bind1())(a)(function (a$prime) {
          return Control_Applicative.pure(dictMonad.Applicative0())(f$prime(a$prime));
        });
      });
    };
  };
};

module.exports = {
  liftM1: liftM1,
  whenM: whenM,
  unlessM: unlessM,
  ap: ap,
  monadFn: monadFn,
  monadArray: monadArray,
  monadProxy: monadProxy,
  liftA1: Control_Applicative.liftA1,
  pure: Control_Applicative.pure,
  unless: Control_Applicative.unless,
  when: Control_Applicative.when,
  apply: Control_Apply.apply,
  bind: Control_Bind.bind,
  ifM: Control_Bind.ifM,
  join: Control_Bind.join,
  map: Data_Functor.map,
  "void": Data_Functor["void"]
};
},{"../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js"}],"output/Data.EuclideanRing/foreign.js":[function(require,module,exports) {
"use strict";

exports.intDegree = function (x) {
  return Math.min(Math.abs(x), 2147483647);
}; // See the Euclidean definition in
// https://en.m.wikipedia.org/wiki/Modulo_operation.


exports.intDiv = function (x) {
  return function (y) {
    if (y === 0) return 0;
    return y > 0 ? Math.floor(x / y) : -Math.floor(x / -y);
  };
};

exports.intMod = function (x) {
  return function (y) {
    if (y === 0) return 0;
    var yy = Math.abs(y);
    return (x % yy + yy) % yy;
  };
};

exports.numDiv = function (n1) {
  return function (n2) {
    return n1 / n2;
  };
};
},{}],"output/Data.CommutativeRing/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Data_Ring = require("../Data.Ring/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var commutativeRingUnit = {
  Ring0: function Ring0() {
    return Data_Ring.ringUnit;
  }
};
var commutativeRingRecordNil = {
  RingRecord0: function RingRecord0() {
    return Data_Ring.ringRecordNil;
  }
};

var commutativeRingRecordCons = function commutativeRingRecordCons(dictIsSymbol) {
  return function () {
    return function (dictCommutativeRingRecord) {
      return function (dictCommutativeRing) {
        return {
          RingRecord0: function RingRecord0() {
            return Data_Ring.ringRecordCons(dictIsSymbol)()(dictCommutativeRingRecord.RingRecord0())(dictCommutativeRing.Ring0());
          }
        };
      };
    };
  };
};

var commutativeRingRecord = function commutativeRingRecord() {
  return function (dictCommutativeRingRecord) {
    return {
      Ring0: function Ring0() {
        return Data_Ring.ringRecord()(dictCommutativeRingRecord.RingRecord0());
      }
    };
  };
};

var commutativeRingProxy3 = {
  Ring0: function Ring0() {
    return Data_Ring.ringProxy3;
  }
};
var commutativeRingProxy2 = {
  Ring0: function Ring0() {
    return Data_Ring.ringProxy2;
  }
};
var commutativeRingProxy = {
  Ring0: function Ring0() {
    return Data_Ring.ringProxy;
  }
};
var commutativeRingNumber = {
  Ring0: function Ring0() {
    return Data_Ring.ringNumber;
  }
};
var commutativeRingInt = {
  Ring0: function Ring0() {
    return Data_Ring.ringInt;
  }
};

var commutativeRingFn = function commutativeRingFn(dictCommutativeRing) {
  return {
    Ring0: function Ring0() {
      return Data_Ring.ringFn(dictCommutativeRing.Ring0());
    }
  };
};

module.exports = {
  commutativeRingInt: commutativeRingInt,
  commutativeRingNumber: commutativeRingNumber,
  commutativeRingUnit: commutativeRingUnit,
  commutativeRingFn: commutativeRingFn,
  commutativeRingRecord: commutativeRingRecord,
  commutativeRingProxy: commutativeRingProxy,
  commutativeRingProxy2: commutativeRingProxy2,
  commutativeRingProxy3: commutativeRingProxy3,
  commutativeRingRecordNil: commutativeRingRecordNil,
  commutativeRingRecordCons: commutativeRingRecordCons,
  add: Data_Semiring.add,
  mul: Data_Semiring.mul,
  one: Data_Semiring.one,
  zero: Data_Semiring.zero
};
},{"../Data.Ring/index.js":"output/Data.Ring/index.js","../Data.Semiring/index.js":"output/Data.Semiring/index.js"}],"output/Data.EuclideanRing/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Data_CommutativeRing = require("../Data.CommutativeRing/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Ring = require("../Data.Ring/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var mod = function mod(dict) {
  return dict.mod;
};

var gcd = function gcd($copy_dictEq) {
  return function ($copy_dictEuclideanRing) {
    return function ($copy_a) {
      return function ($copy_b) {
        var $tco_var_dictEq = $copy_dictEq;
        var $tco_var_dictEuclideanRing = $copy_dictEuclideanRing;
        var $tco_var_a = $copy_a;
        var $tco_done = false;
        var $tco_result;

        function $tco_loop(dictEq, dictEuclideanRing, a, b) {
          var $8 = Data_Eq.eq(dictEq)(b)(Data_Semiring.zero(dictEuclideanRing.CommutativeRing0().Ring0().Semiring0()));

          if ($8) {
            $tco_done = true;
            return a;
          }

          ;
          $tco_var_dictEq = dictEq;
          $tco_var_dictEuclideanRing = dictEuclideanRing;
          $tco_var_a = b;
          $copy_b = mod(dictEuclideanRing)(a)(b);
          return;
        }

        ;

        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_dictEq, $tco_var_dictEuclideanRing, $tco_var_a, $copy_b);
        }

        ;
        return $tco_result;
      };
    };
  };
};

var euclideanRingNumber = {
  degree: function degree(v) {
    return 1;
  },
  div: $foreign.numDiv,
  mod: function mod(v) {
    return function (v1) {
      return 0.0;
    };
  },
  CommutativeRing0: function CommutativeRing0() {
    return Data_CommutativeRing.commutativeRingNumber;
  }
};
var euclideanRingInt = {
  degree: $foreign.intDegree,
  div: $foreign.intDiv,
  mod: $foreign.intMod,
  CommutativeRing0: function CommutativeRing0() {
    return Data_CommutativeRing.commutativeRingInt;
  }
};

var div = function div(dict) {
  return dict.div;
};

var lcm = function lcm(dictEq) {
  return function (dictEuclideanRing) {
    return function (a) {
      return function (b) {
        var $10 = Data_Eq.eq(dictEq)(a)(Data_Semiring.zero(dictEuclideanRing.CommutativeRing0().Ring0().Semiring0())) || Data_Eq.eq(dictEq)(b)(Data_Semiring.zero(dictEuclideanRing.CommutativeRing0().Ring0().Semiring0()));

        if ($10) {
          return Data_Semiring.zero(dictEuclideanRing.CommutativeRing0().Ring0().Semiring0());
        }

        ;
        return div(dictEuclideanRing)(Data_Semiring.mul(dictEuclideanRing.CommutativeRing0().Ring0().Semiring0())(a)(b))(gcd(dictEq)(dictEuclideanRing)(a)(b));
      };
    };
  };
};

var degree = function degree(dict) {
  return dict.degree;
};

module.exports = {
  degree: degree,
  div: div,
  mod: mod,
  gcd: gcd,
  lcm: lcm,
  euclideanRingInt: euclideanRingInt,
  euclideanRingNumber: euclideanRingNumber,
  sub: Data_Ring.sub,
  add: Data_Semiring.add,
  mul: Data_Semiring.mul,
  one: Data_Semiring.one,
  zero: Data_Semiring.zero
};
},{"./foreign.js":"output/Data.EuclideanRing/foreign.js","../Data.CommutativeRing/index.js":"output/Data.CommutativeRing/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Ring/index.js":"output/Data.Ring/index.js","../Data.Semiring/index.js":"output/Data.Semiring/index.js"}],"output/Data.Monoid/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Data_Boolean = require("../Data.Boolean/index.js");

var Data_EuclideanRing = require("../Data.EuclideanRing/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Symbol = require("../Data.Symbol/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Record_Unsafe = require("../Record.Unsafe/index.js");

var Type_Proxy = require("../Type.Proxy/index.js");

var monoidUnit = {
  mempty: Data_Unit.unit,
  Semigroup0: function Semigroup0() {
    return Data_Semigroup.semigroupUnit;
  }
};
var monoidString = {
  mempty: "",
  Semigroup0: function Semigroup0() {
    return Data_Semigroup.semigroupString;
  }
};
var monoidRecordNil = {
  memptyRecord: function memptyRecord(v) {
    return {};
  },
  SemigroupRecord0: function SemigroupRecord0() {
    return Data_Semigroup.semigroupRecordNil;
  }
};
var monoidOrdering = {
  mempty: Data_Ordering.EQ.value,
  Semigroup0: function Semigroup0() {
    return Data_Ordering.semigroupOrdering;
  }
};
var monoidArray = {
  mempty: [],
  Semigroup0: function Semigroup0() {
    return Data_Semigroup.semigroupArray;
  }
};

var _memptyRecord = function memptyRecord(dict) {
  return dict.memptyRecord;
};

var monoidRecord = function monoidRecord() {
  return function (dictMonoidRecord) {
    return {
      mempty: _memptyRecord(dictMonoidRecord)(Type_Proxy["Proxy"].value),
      Semigroup0: function Semigroup0() {
        return Data_Semigroup.semigroupRecord()(dictMonoidRecord.SemigroupRecord0());
      }
    };
  };
};

var _mempty = function mempty(dict) {
  return dict.mempty;
};

var monoidFn = function monoidFn(dictMonoid) {
  return {
    mempty: function mempty(v) {
      return _mempty(dictMonoid);
    },
    Semigroup0: function Semigroup0() {
      return Data_Semigroup.semigroupFn(dictMonoid.Semigroup0());
    }
  };
};

var monoidRecordCons = function monoidRecordCons(dictIsSymbol) {
  return function (dictMonoid) {
    return function () {
      return function (dictMonoidRecord) {
        return {
          memptyRecord: function memptyRecord(v) {
            var tail = _memptyRecord(dictMonoidRecord)(Type_Proxy["Proxy"].value);

            var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
            var insert = Record_Unsafe.unsafeSet(key);
            return insert(_mempty(dictMonoid))(tail);
          },
          SemigroupRecord0: function SemigroupRecord0() {
            return Data_Semigroup.semigroupRecordCons(dictIsSymbol)()(dictMonoidRecord.SemigroupRecord0())(dictMonoid.Semigroup0());
          }
        };
      };
    };
  };
};

var power = function power(dictMonoid) {
  return function (x) {
    var go = function go(p) {
      if (p <= 0) {
        return _mempty(dictMonoid);
      }

      ;

      if (p === 1) {
        return x;
      }

      ;

      if (Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(p)(2) === 0) {
        var x$prime = go(Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(p)(2));
        return Data_Semigroup.append(dictMonoid.Semigroup0())(x$prime)(x$prime);
      }

      ;

      if (Data_Boolean.otherwise) {
        var x$prime = go(Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(p)(2));
        return Data_Semigroup.append(dictMonoid.Semigroup0())(x$prime)(Data_Semigroup.append(dictMonoid.Semigroup0())(x$prime)(x));
      }

      ;
      throw new Error("Failed pattern match at Data.Monoid (line 86, column 3 - line 86, column 17): " + [p.constructor.name]);
    };

    return go;
  };
};

var guard = function guard(dictMonoid) {
  return function (v) {
    return function (v1) {
      if (v) {
        return v1;
      }

      ;

      if (!v) {
        return _mempty(dictMonoid);
      }

      ;
      throw new Error("Failed pattern match at Data.Monoid (line 94, column 1 - line 94, column 49): " + [v.constructor.name, v1.constructor.name]);
    };
  };
};

module.exports = {
  mempty: _mempty,
  power: power,
  guard: guard,
  memptyRecord: _memptyRecord,
  monoidUnit: monoidUnit,
  monoidOrdering: monoidOrdering,
  monoidFn: monoidFn,
  monoidString: monoidString,
  monoidArray: monoidArray,
  monoidRecord: monoidRecord,
  monoidRecordNil: monoidRecordNil,
  monoidRecordCons: monoidRecordCons
};
},{"../Data.Boolean/index.js":"output/Data.Boolean/index.js","../Data.EuclideanRing/index.js":"output/Data.EuclideanRing/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Symbol/index.js":"output/Data.Symbol/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Record.Unsafe/index.js":"output/Record.Unsafe/index.js","../Type.Proxy/index.js":"output/Type.Proxy/index.js"}],"output/Effect/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var monadEffect = {
  Applicative0: function Applicative0() {
    return applicativeEffect;
  },
  Bind1: function Bind1() {
    return bindEffect;
  }
};
var bindEffect = {
  bind: $foreign.bindE,
  Apply0: function Apply0() {
    return applyEffect;
  }
};
var applyEffect = {
  apply: Control_Monad.ap(monadEffect),
  Functor0: function Functor0() {
    return functorEffect;
  }
};
var applicativeEffect = {
  pure: $foreign.pureE,
  Apply0: function Apply0() {
    return applyEffect;
  }
};
var functorEffect = {
  map: Control_Applicative.liftA1(applicativeEffect)
};

var semigroupEffect = function semigroupEffect(dictSemigroup) {
  return {
    append: Control_Apply.lift2(applyEffect)(Data_Semigroup.append(dictSemigroup))
  };
};

var monoidEffect = function monoidEffect(dictMonoid) {
  return {
    mempty: $foreign.pureE(Data_Monoid.mempty(dictMonoid)),
    Semigroup0: function Semigroup0() {
      return semigroupEffect(dictMonoid.Semigroup0());
    }
  };
};

module.exports = {
  functorEffect: functorEffect,
  applyEffect: applyEffect,
  applicativeEffect: applicativeEffect,
  bindEffect: bindEffect,
  monadEffect: monadEffect,
  semigroupEffect: semigroupEffect,
  monoidEffect: monoidEffect,
  untilE: $foreign.untilE,
  whileE: $foreign.whileE,
  forE: $foreign.forE,
  foreachE: $foreign.foreachE
};
},{"./foreign.js":"output/Effect/foreign.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Monad/index.js":"output/Control.Monad/index.js","../Data.Monoid/index.js":"output/Data.Monoid/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js"}],"output/Effect.Exception/foreign.js":[function(require,module,exports) {
"use strict";

exports.showErrorImpl = function (err) {
  return err.stack || err.toString();
};

exports.error = function (msg) {
  return new Error(msg);
};

exports.message = function (e) {
  return e.message;
};

exports.name = function (e) {
  return e.name || "Error";
};

exports.stackImpl = function (just) {
  return function (nothing) {
    return function (e) {
      return e.stack ? just(e.stack) : nothing;
    };
  };
};

exports.throwException = function (e) {
  return function () {
    throw e;
  };
};

exports.catchException = function (c) {
  return function (t) {
    return function () {
      try {
        return t();
      } catch (e) {
        if (e instanceof Error || Object.prototype.toString.call(e) === "[object Error]") {
          return c(e)();
        } else {
          return c(new Error(e.toString()))();
        }
      }
    };
  };
};
},{}],"output/Effect.Exception/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Effect = require("../Effect/index.js");

var $$try = function $$try(action) {
  return $foreign.catchException(function () {
    var $0 = Control_Applicative.pure(Effect.applicativeEffect);
    return function ($1) {
      return $0(Data_Either.Left.create($1));
    };
  }())(Data_Functor.map(Effect.functorEffect)(Data_Either.Right.create)(action));
};

var $$throw = function $$throw($2) {
  return $foreign.throwException($foreign.error($2));
};

var stack = $foreign.stackImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var showError = {
  show: $foreign.showErrorImpl
};
module.exports = {
  stack: stack,
  "throw": $$throw,
  "try": $$try,
  showError: showError,
  error: $foreign.error,
  message: $foreign.message,
  name: $foreign.name,
  throwException: $foreign.throwException,
  catchException: $foreign.catchException
};
},{"./foreign.js":"output/Effect.Exception/foreign.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Data.Either/index.js":"output/Data.Either/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Effect/index.js":"output/Effect/index.js"}],"output/Control.Monad.Error.Class/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Effect = require("../Effect/index.js");

var Effect_Exception = require("../Effect.Exception/index.js");

var throwError = function throwError(dict) {
  return dict.throwError;
};

var monadThrowMaybe = {
  throwError: Data_Function["const"](Data_Maybe.Nothing.value),
  Monad0: function Monad0() {
    return Data_Maybe.monadMaybe;
  }
};
var monadThrowEither = {
  throwError: Data_Either.Left.create,
  Monad0: function Monad0() {
    return Data_Either.monadEither;
  }
};
var monadThrowEffect = {
  throwError: Effect_Exception.throwException,
  Monad0: function Monad0() {
    return Effect.monadEffect;
  }
};
var monadErrorMaybe = {
  catchError: function catchError(v) {
    return function (v1) {
      if (v instanceof Data_Maybe.Nothing) {
        return v1(Data_Unit.unit);
      }

      ;

      if (v instanceof Data_Maybe.Just) {
        return new Data_Maybe.Just(v.value0);
      }

      ;
      throw new Error("Failed pattern match at Control.Monad.Error.Class (line 79, column 1 - line 81, column 33): " + [v.constructor.name, v1.constructor.name]);
    };
  },
  MonadThrow0: function MonadThrow0() {
    return monadThrowMaybe;
  }
};
var monadErrorEither = {
  catchError: function catchError(v) {
    return function (v1) {
      if (v instanceof Data_Either.Left) {
        return v1(v.value0);
      }

      ;

      if (v instanceof Data_Either.Right) {
        return new Data_Either.Right(v.value0);
      }

      ;
      throw new Error("Failed pattern match at Control.Monad.Error.Class (line 72, column 1 - line 74, column 35): " + [v.constructor.name, v1.constructor.name]);
    };
  },
  MonadThrow0: function MonadThrow0() {
    return monadThrowEither;
  }
};
var monadErrorEffect = {
  catchError: Data_Function.flip(Effect_Exception.catchException),
  MonadThrow0: function MonadThrow0() {
    return monadThrowEffect;
  }
};

var liftMaybe = function liftMaybe(dictMonadThrow) {
  return function (error) {
    return Data_Maybe.maybe(throwError(dictMonadThrow)(error))(Control_Applicative.pure(dictMonadThrow.Monad0().Applicative0()));
  };
};

var liftEither = function liftEither(dictMonadThrow) {
  return Data_Either.either(throwError(dictMonadThrow))(Control_Applicative.pure(dictMonadThrow.Monad0().Applicative0()));
};

var catchError = function catchError(dict) {
  return dict.catchError;
};

var catchJust = function catchJust(dictMonadError) {
  return function (p) {
    return function (act) {
      return function (handler) {
        var handle = function handle(e) {
          var v = p(e);

          if (v instanceof Data_Maybe.Nothing) {
            return throwError(dictMonadError.MonadThrow0())(e);
          }

          ;

          if (v instanceof Data_Maybe.Just) {
            return handler(v.value0);
          }

          ;
          throw new Error("Failed pattern match at Control.Monad.Error.Class (line 57, column 5 - line 59, column 26): " + [v.constructor.name]);
        };

        return catchError(dictMonadError)(act)(handle);
      };
    };
  };
};

var $$try = function $$try(dictMonadError) {
  return function (a) {
    return catchError(dictMonadError)(Data_Functor.map(dictMonadError.MonadThrow0().Monad0().Bind1().Apply0().Functor0())(Data_Either.Right.create)(a))(function () {
      var $21 = Control_Applicative.pure(dictMonadError.MonadThrow0().Monad0().Applicative0());
      return function ($22) {
        return $21(Data_Either.Left.create($22));
      };
    }());
  };
};

var withResource = function withResource(dictMonadError) {
  return function (acquire) {
    return function (release) {
      return function (kleisli) {
        return Control_Bind.bind(dictMonadError.MonadThrow0().Monad0().Bind1())(acquire)(function (resource) {
          return Control_Bind.bind(dictMonadError.MonadThrow0().Monad0().Bind1())($$try(dictMonadError)(kleisli(resource)))(function (result) {
            return Control_Bind.discard(Control_Bind.discardUnit)(dictMonadError.MonadThrow0().Monad0().Bind1())(release(resource))(function () {
              return Data_Either.either(throwError(dictMonadError.MonadThrow0()))(Control_Applicative.pure(dictMonadError.MonadThrow0().Monad0().Applicative0()))(result);
            });
          });
        });
      };
    };
  };
};

module.exports = {
  catchError: catchError,
  throwError: throwError,
  catchJust: catchJust,
  "try": $$try,
  withResource: withResource,
  liftMaybe: liftMaybe,
  liftEither: liftEither,
  monadThrowEither: monadThrowEither,
  monadErrorEither: monadErrorEither,
  monadThrowMaybe: monadThrowMaybe,
  monadErrorMaybe: monadErrorMaybe,
  monadThrowEffect: monadThrowEffect,
  monadErrorEffect: monadErrorEffect
};
},{"../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Data.Either/index.js":"output/Data.Either/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Effect/index.js":"output/Effect/index.js","../Effect.Exception/index.js":"output/Effect.Exception/index.js"}],"output/Control.Monad.Cont.Class/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var callCC = function callCC(dict) {
  return dict.callCC;
};

module.exports = {
  callCC: callCC
};
},{}],"output/Control.Monad.Reader.Class/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Control_Category = require("../Control.Category/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var monadAskFun = {
  ask: Control_Category.identity(Control_Category.categoryFn),
  Monad0: function Monad0() {
    return Control_Monad.monadFn;
  }
};
var monadReaderFun = {
  local: Control_Semigroupoid.composeFlipped(Control_Semigroupoid.semigroupoidFn),
  MonadAsk0: function MonadAsk0() {
    return monadAskFun;
  }
};

var local = function local(dict) {
  return dict.local;
};

var ask = function ask(dict) {
  return dict.ask;
};

var asks = function asks(dictMonadAsk) {
  return function (f) {
    return Data_Functor.map(dictMonadAsk.Monad0().Bind1().Apply0().Functor0())(f)(ask(dictMonadAsk));
  };
};

module.exports = {
  ask: ask,
  local: local,
  asks: asks,
  monadAskFun: monadAskFun,
  monadReaderFun: monadReaderFun
};
},{"../Control.Category/index.js":"output/Control.Category/index.js","../Control.Monad/index.js":"output/Control.Monad/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js"}],"output/Data.Identity/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Data_Eq = require("../Data.Eq/index.js");

var Data_Functor_Invariant = require("../Data.Functor.Invariant/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Show = require("../Data.Show/index.js");

var Identity = function Identity(x) {
  return x;
};

var showIdentity = function showIdentity(dictShow) {
  return {
    show: function show(v) {
      return "(Identity " + (Data_Show.show(dictShow)(v) + ")");
    }
  };
};

var semiringIdentity = function semiringIdentity(dictSemiring) {
  return dictSemiring;
};

var semigroupIdenity = function semigroupIdenity(dictSemigroup) {
  return dictSemigroup;
};

var ringIdentity = function ringIdentity(dictRing) {
  return dictRing;
};

var ordIdentity = function ordIdentity(dictOrd) {
  return dictOrd;
};

var newtypeIdentity = {
  Coercible0: function Coercible0() {
    return undefined;
  }
};

var monoidIdentity = function monoidIdentity(dictMonoid) {
  return dictMonoid;
};

var lazyIdentity = function lazyIdentity(dictLazy) {
  return dictLazy;
};

var heytingAlgebraIdentity = function heytingAlgebraIdentity(dictHeytingAlgebra) {
  return dictHeytingAlgebra;
};

var functorIdentity = {
  map: function map(f) {
    return function (m) {
      return f(m);
    };
  }
};
var invariantIdentity = {
  imap: Data_Functor_Invariant.imapF(functorIdentity)
};
var extendIdentity = {
  extend: function extend(f) {
    return function (m) {
      return f(m);
    };
  },
  Functor0: function Functor0() {
    return functorIdentity;
  }
};

var euclideanRingIdentity = function euclideanRingIdentity(dictEuclideanRing) {
  return dictEuclideanRing;
};

var eqIdentity = function eqIdentity(dictEq) {
  return dictEq;
};

var eq1Identity = {
  eq1: function eq1(dictEq) {
    return Data_Eq.eq(eqIdentity(dictEq));
  }
};
var ord1Identity = {
  compare1: function compare1(dictOrd) {
    return Data_Ord.compare(ordIdentity(dictOrd));
  },
  Eq10: function Eq10() {
    return eq1Identity;
  }
};
var comonadIdentity = {
  extract: function extract(v) {
    return v;
  },
  Extend0: function Extend0() {
    return extendIdentity;
  }
};

var commutativeRingIdentity = function commutativeRingIdentity(dictCommutativeRing) {
  return dictCommutativeRing;
};

var boundedIdentity = function boundedIdentity(dictBounded) {
  return dictBounded;
};

var booleanAlgebraIdentity = function booleanAlgebraIdentity(dictBooleanAlgebra) {
  return dictBooleanAlgebra;
};

var applyIdentity = {
  apply: function apply(v) {
    return function (v1) {
      return v(v1);
    };
  },
  Functor0: function Functor0() {
    return functorIdentity;
  }
};
var bindIdentity = {
  bind: function bind(v) {
    return function (f) {
      return f(v);
    };
  },
  Apply0: function Apply0() {
    return applyIdentity;
  }
};
var applicativeIdentity = {
  pure: Identity,
  Apply0: function Apply0() {
    return applyIdentity;
  }
};
var monadIdentity = {
  Applicative0: function Applicative0() {
    return applicativeIdentity;
  },
  Bind1: function Bind1() {
    return bindIdentity;
  }
};
var altIdentity = {
  alt: function alt(x) {
    return function (v) {
      return x;
    };
  },
  Functor0: function Functor0() {
    return functorIdentity;
  }
};
module.exports = {
  Identity: Identity,
  newtypeIdentity: newtypeIdentity,
  eqIdentity: eqIdentity,
  ordIdentity: ordIdentity,
  boundedIdentity: boundedIdentity,
  heytingAlgebraIdentity: heytingAlgebraIdentity,
  booleanAlgebraIdentity: booleanAlgebraIdentity,
  semigroupIdenity: semigroupIdenity,
  monoidIdentity: monoidIdentity,
  semiringIdentity: semiringIdentity,
  euclideanRingIdentity: euclideanRingIdentity,
  ringIdentity: ringIdentity,
  commutativeRingIdentity: commutativeRingIdentity,
  lazyIdentity: lazyIdentity,
  showIdentity: showIdentity,
  eq1Identity: eq1Identity,
  ord1Identity: ord1Identity,
  functorIdentity: functorIdentity,
  invariantIdentity: invariantIdentity,
  altIdentity: altIdentity,
  applyIdentity: applyIdentity,
  applicativeIdentity: applicativeIdentity,
  bindIdentity: bindIdentity,
  monadIdentity: monadIdentity,
  extendIdentity: extendIdentity,
  comonadIdentity: comonadIdentity
};
},{"../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Functor.Invariant/index.js":"output/Data.Functor.Invariant/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Show/index.js":"output/Data.Show/index.js"}],"output/Effect.Ref/foreign.js":[function(require,module,exports) {
"use strict";

exports.new = function (val) {
  return function () {
    return {
      value: val
    };
  };
};

exports.newWithSelf = function (f) {
  return function () {
    var ref = {
      value: null
    };
    ref.value = f(ref);
    return ref;
  };
};

exports.read = function (ref) {
  return function () {
    return ref.value;
  };
};

exports.modifyImpl = function (f) {
  return function (ref) {
    return function () {
      var t = f(ref.value);
      ref.value = t.state;
      return t.value;
    };
  };
};

exports.write = function (val) {
  return function (ref) {
    return function () {
      ref.value = val;
    };
  };
};
},{}],"output/Effect.Ref/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Data_Functor = require("../Data.Functor/index.js");

var Effect = require("../Effect/index.js");

var modify$prime = $foreign.modifyImpl;

var modify = function modify(f) {
  return modify$prime(function (s) {
    var s$prime = f(s);
    return {
      state: s$prime,
      value: s$prime
    };
  });
};

var modify_ = function modify_(f) {
  return function (s) {
    return Data_Functor["void"](Effect.functorEffect)(modify(f)(s));
  };
};

module.exports = {
  "modify'": modify$prime,
  modify: modify,
  modify_: modify_,
  "new": $foreign["new"],
  newWithSelf: $foreign.newWithSelf,
  read: $foreign.read,
  write: $foreign.write
};
},{"./foreign.js":"output/Effect.Ref/foreign.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Effect/index.js":"output/Effect/index.js"}],"output/Control.Monad.Rec.Class/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Identity = require("../Data.Identity/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Effect = require("../Effect/index.js");

var Effect_Ref = require("../Effect.Ref/index.js");

var Loop = function () {
  function Loop(value0) {
    this.value0 = value0;
  }

  ;

  Loop.create = function (value0) {
    return new Loop(value0);
  };

  return Loop;
}();

var Done = function () {
  function Done(value0) {
    this.value0 = value0;
  }

  ;

  Done.create = function (value0) {
    return new Done(value0);
  };

  return Done;
}();

var tailRecM = function tailRecM(dict) {
  return dict.tailRecM;
};

var tailRecM2 = function tailRecM2(dictMonadRec) {
  return function (f) {
    return function (a) {
      return function (b) {
        return tailRecM(dictMonadRec)(function (o) {
          return f(o.a)(o.b);
        })({
          a: a,
          b: b
        });
      };
    };
  };
};

var tailRecM3 = function tailRecM3(dictMonadRec) {
  return function (f) {
    return function (a) {
      return function (b) {
        return function (c) {
          return tailRecM(dictMonadRec)(function (o) {
            return f(o.a)(o.b)(o.c);
          })({
            a: a,
            b: b,
            c: c
          });
        };
      };
    };
  };
};

var untilJust = function untilJust(dictMonadRec) {
  return function (m) {
    return tailRecM(dictMonadRec)(function (v) {
      return Data_Functor.mapFlipped(dictMonadRec.Monad0().Bind1().Apply0().Functor0())(m)(function (v1) {
        if (v1 instanceof Data_Maybe.Nothing) {
          return new Loop(Data_Unit.unit);
        }

        ;

        if (v1 instanceof Data_Maybe.Just) {
          return new Done(v1.value0);
        }

        ;
        throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 155, column 43 - line 157, column 19): " + [v1.constructor.name]);
      });
    })(Data_Unit.unit);
  };
};

var whileJust = function whileJust(dictMonoid) {
  return function (dictMonadRec) {
    return function (m) {
      return tailRecM(dictMonadRec)(function (v) {
        return Data_Functor.mapFlipped(dictMonadRec.Monad0().Bind1().Apply0().Functor0())(m)(function (v1) {
          if (v1 instanceof Data_Maybe.Nothing) {
            return new Done(v);
          }

          ;

          if (v1 instanceof Data_Maybe.Just) {
            return new Loop(Data_Semigroup.append(dictMonoid.Semigroup0())(v)(v1.value0));
          }

          ;
          throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 148, column 45 - line 150, column 26): " + [v1.constructor.name]);
        });
      })(Data_Monoid.mempty(dictMonoid));
    };
  };
};

var tailRec = function tailRec(f) {
  var go = function go($copy_v) {
    var $tco_done = false;
    var $tco_result;

    function $tco_loop(v) {
      if (v instanceof Loop) {
        $copy_v = f(v.value0);
        return;
      }

      ;

      if (v instanceof Done) {
        $tco_done = true;
        return v.value0;
      }

      ;
      throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 93, column 3 - line 93, column 25): " + [v.constructor.name]);
    }

    ;

    while (!$tco_done) {
      $tco_result = $tco_loop($copy_v);
    }

    ;
    return $tco_result;
  };

  return function ($55) {
    return go(f($55));
  };
};

var monadRecMaybe = {
  tailRecM: function tailRecM(f) {
    return function (a0) {
      var g = function g(v) {
        if (v instanceof Data_Maybe.Nothing) {
          return new Done(Data_Maybe.Nothing.value);
        }

        ;

        if (v instanceof Data_Maybe.Just && v.value0 instanceof Loop) {
          return new Loop(f(v.value0.value0));
        }

        ;

        if (v instanceof Data_Maybe.Just && v.value0 instanceof Done) {
          return new Done(new Data_Maybe.Just(v.value0.value0));
        }

        ;
        throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 129, column 7 - line 129, column 31): " + [v.constructor.name]);
      };

      return tailRec(g)(f(a0));
    };
  },
  Monad0: function Monad0() {
    return Data_Maybe.monadMaybe;
  }
};
var monadRecIdentity = {
  tailRecM: function tailRecM(f) {
    var runIdentity = function runIdentity(v) {
      return v;
    };

    var $56 = tailRec(function ($58) {
      return runIdentity(f($58));
    });
    return function ($57) {
      return Data_Identity.Identity($56($57));
    };
  },
  Monad0: function Monad0() {
    return Data_Identity.monadIdentity;
  }
};
var monadRecFunction = {
  tailRecM: function tailRecM(f) {
    return function (a0) {
      return function (e) {
        return tailRec(function (a) {
          return f(a)(e);
        })(a0);
      };
    };
  },
  Monad0: function Monad0() {
    return Control_Monad.monadFn;
  }
};
var monadRecEither = {
  tailRecM: function tailRecM(f) {
    return function (a0) {
      var g = function g(v) {
        if (v instanceof Data_Either.Left) {
          return new Done(new Data_Either.Left(v.value0));
        }

        ;

        if (v instanceof Data_Either.Right && v.value0 instanceof Loop) {
          return new Loop(f(v.value0.value0));
        }

        ;

        if (v instanceof Data_Either.Right && v.value0 instanceof Done) {
          return new Done(new Data_Either.Right(v.value0.value0));
        }

        ;
        throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 121, column 7 - line 121, column 33): " + [v.constructor.name]);
      };

      return tailRec(g)(f(a0));
    };
  },
  Monad0: function Monad0() {
    return Data_Either.monadEither;
  }
};
var monadRecEffect = {
  tailRecM: function tailRecM(f) {
    return function (a) {
      var fromDone = function fromDone(v) {
        if (v instanceof Done) {
          return v.value0;
        }

        ;
        throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 113, column 30 - line 113, column 44): " + [v.constructor.name]);
      };

      return function __do() {
        var r = Control_Bind.bindFlipped(Effect.bindEffect)(Effect_Ref["new"])(f(a))();

        (function () {
          while (!function __do() {
            var v = Effect_Ref.read(r)();

            if (v instanceof Loop) {
              var e = f(v.value0)();
              Effect_Ref.write(e)(r)();
              return false;
            }

            ;

            if (v instanceof Done) {
              return true;
            }

            ;
            throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 104, column 22 - line 109, column 28): " + [v.constructor.name]);
          }()) {}

          ;
          return {};
        })();

        return Data_Functor.map(Effect.functorEffect)(fromDone)(Effect_Ref.read(r))();
      };
    };
  },
  Monad0: function Monad0() {
    return Effect.monadEffect;
  }
};
var functorStep = {
  map: function map(f) {
    return function (m) {
      if (m instanceof Loop) {
        return new Loop(m.value0);
      }

      ;

      if (m instanceof Done) {
        return new Done(f(m.value0));
      }

      ;
      throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 27, column 1 - line 27, column 48): " + [m.constructor.name]);
    };
  }
};

var forever = function forever(dictMonadRec) {
  return function (ma) {
    return tailRecM(dictMonadRec)(function (u) {
      return Data_Functor.voidRight(dictMonadRec.Monad0().Bind1().Apply0().Functor0())(new Loop(u))(ma);
    })(Data_Unit.unit);
  };
};

var bifunctorStep = {
  bimap: function bimap(v) {
    return function (v1) {
      return function (v2) {
        if (v2 instanceof Loop) {
          return new Loop(v(v2.value0));
        }

        ;

        if (v2 instanceof Done) {
          return new Done(v1(v2.value0));
        }

        ;
        throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 29, column 1 - line 31, column 34): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
      };
    };
  }
};
module.exports = {
  Loop: Loop,
  Done: Done,
  tailRec: tailRec,
  tailRecM: tailRecM,
  tailRecM2: tailRecM2,
  tailRecM3: tailRecM3,
  forever: forever,
  whileJust: whileJust,
  untilJust: untilJust,
  functorStep: functorStep,
  bifunctorStep: bifunctorStep,
  monadRecIdentity: monadRecIdentity,
  monadRecEffect: monadRecEffect,
  monadRecFunction: monadRecFunction,
  monadRecEither: monadRecEither,
  monadRecMaybe: monadRecMaybe
};
},{"../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Monad/index.js":"output/Control.Monad/index.js","../Data.Either/index.js":"output/Data.Either/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Identity/index.js":"output/Data.Identity/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Monoid/index.js":"output/Data.Monoid/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Effect/index.js":"output/Effect/index.js","../Effect.Ref/index.js":"output/Effect.Ref/index.js"}],"output/Control.Lazy/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Data_Unit = require("../Data.Unit/index.js");

var lazyUnit = {
  defer: function defer(v) {
    return Data_Unit.unit;
  }
};
var lazyFn = {
  defer: function defer(f) {
    return function (x) {
      return f(Data_Unit.unit)(x);
    };
  }
};

var defer = function defer(dict) {
  return dict.defer;
};

var fix = function fix(dictLazy) {
  return function (f) {
    var go = defer(dictLazy)(function (v) {
      return f(go);
    });
    return go;
  };
};

module.exports = {
  defer: defer,
  fix: fix,
  lazyFn: lazyFn,
  lazyUnit: lazyUnit
};
},{"../Data.Unit/index.js":"output/Data.Unit/index.js"}],"output/Data.HeytingAlgebra/foreign.js":[function(require,module,exports) {
"use strict";

exports.boolConj = function (b1) {
  return function (b2) {
    return b1 && b2;
  };
};

exports.boolDisj = function (b1) {
  return function (b2) {
    return b1 || b2;
  };
};

exports.boolNot = function (b) {
  return !b;
};
},{}],"output/Data.HeytingAlgebra/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Data_Symbol = require("../Data.Symbol/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Record_Unsafe = require("../Record.Unsafe/index.js");

var Type_Proxy = require("../Type.Proxy/index.js");

var _ttRecord = function ttRecord(dict) {
  return dict.ttRecord;
};

var _tt = function tt(dict) {
  return dict.tt;
};

var _notRecord = function notRecord(dict) {
  return dict.notRecord;
};

var _not = function not(dict) {
  return dict.not;
};

var _impliesRecord = function impliesRecord(dict) {
  return dict.impliesRecord;
};

var _implies = function implies(dict) {
  return dict.implies;
};

var heytingAlgebraUnit = {
  ff: Data_Unit.unit,
  tt: Data_Unit.unit,
  implies: function implies(v) {
    return function (v1) {
      return Data_Unit.unit;
    };
  },
  conj: function conj(v) {
    return function (v1) {
      return Data_Unit.unit;
    };
  },
  disj: function disj(v) {
    return function (v1) {
      return Data_Unit.unit;
    };
  },
  not: function not(v) {
    return Data_Unit.unit;
  }
};
var heytingAlgebraRecordNil = {
  conjRecord: function conjRecord(v) {
    return function (v1) {
      return function (v2) {
        return {};
      };
    };
  },
  disjRecord: function disjRecord(v) {
    return function (v1) {
      return function (v2) {
        return {};
      };
    };
  },
  ffRecord: function ffRecord(v) {
    return function (v1) {
      return {};
    };
  },
  impliesRecord: function impliesRecord(v) {
    return function (v1) {
      return function (v2) {
        return {};
      };
    };
  },
  notRecord: function notRecord(v) {
    return function (v1) {
      return {};
    };
  },
  ttRecord: function ttRecord(v) {
    return function (v1) {
      return {};
    };
  }
};
var heytingAlgebraProxy3 = {
  conj: function conj(v) {
    return function (v1) {
      return Type_Proxy.Proxy3.value;
    };
  },
  disj: function disj(v) {
    return function (v1) {
      return Type_Proxy.Proxy3.value;
    };
  },
  implies: function implies(v) {
    return function (v1) {
      return Type_Proxy.Proxy3.value;
    };
  },
  ff: Type_Proxy.Proxy3.value,
  not: function not(v) {
    return Type_Proxy.Proxy3.value;
  },
  tt: Type_Proxy.Proxy3.value
};
var heytingAlgebraProxy2 = {
  conj: function conj(v) {
    return function (v1) {
      return Type_Proxy.Proxy2.value;
    };
  },
  disj: function disj(v) {
    return function (v1) {
      return Type_Proxy.Proxy2.value;
    };
  },
  implies: function implies(v) {
    return function (v1) {
      return Type_Proxy.Proxy2.value;
    };
  },
  ff: Type_Proxy.Proxy2.value,
  not: function not(v) {
    return Type_Proxy.Proxy2.value;
  },
  tt: Type_Proxy.Proxy2.value
};
var heytingAlgebraProxy = {
  conj: function conj(v) {
    return function (v1) {
      return Type_Proxy["Proxy"].value;
    };
  },
  disj: function disj(v) {
    return function (v1) {
      return Type_Proxy["Proxy"].value;
    };
  },
  implies: function implies(v) {
    return function (v1) {
      return Type_Proxy["Proxy"].value;
    };
  },
  ff: Type_Proxy["Proxy"].value,
  not: function not(v) {
    return Type_Proxy["Proxy"].value;
  },
  tt: Type_Proxy["Proxy"].value
};

var _ffRecord = function ffRecord(dict) {
  return dict.ffRecord;
};

var _ff = function ff(dict) {
  return dict.ff;
};

var _disjRecord = function disjRecord(dict) {
  return dict.disjRecord;
};

var _disj = function disj(dict) {
  return dict.disj;
};

var heytingAlgebraBoolean = {
  ff: false,
  tt: true,
  implies: function implies(a) {
    return function (b) {
      return _disj(heytingAlgebraBoolean)(_not(heytingAlgebraBoolean)(a))(b);
    };
  },
  conj: $foreign.boolConj,
  disj: $foreign.boolDisj,
  not: $foreign.boolNot
};

var _conjRecord = function conjRecord(dict) {
  return dict.conjRecord;
};

var heytingAlgebraRecord = function heytingAlgebraRecord() {
  return function (dictHeytingAlgebraRecord) {
    return {
      ff: _ffRecord(dictHeytingAlgebraRecord)(Type_Proxy["Proxy"].value)(Type_Proxy["Proxy"].value),
      tt: _ttRecord(dictHeytingAlgebraRecord)(Type_Proxy["Proxy"].value)(Type_Proxy["Proxy"].value),
      conj: _conjRecord(dictHeytingAlgebraRecord)(Type_Proxy["Proxy"].value),
      disj: _disjRecord(dictHeytingAlgebraRecord)(Type_Proxy["Proxy"].value),
      implies: _impliesRecord(dictHeytingAlgebraRecord)(Type_Proxy["Proxy"].value),
      not: _notRecord(dictHeytingAlgebraRecord)(Type_Proxy["Proxy"].value)
    };
  };
};

var _conj = function conj(dict) {
  return dict.conj;
};

var heytingAlgebraFunction = function heytingAlgebraFunction(dictHeytingAlgebra) {
  return {
    ff: function ff(v) {
      return _ff(dictHeytingAlgebra);
    },
    tt: function tt(v) {
      return _tt(dictHeytingAlgebra);
    },
    implies: function implies(f) {
      return function (g) {
        return function (a) {
          return _implies(dictHeytingAlgebra)(f(a))(g(a));
        };
      };
    },
    conj: function conj(f) {
      return function (g) {
        return function (a) {
          return _conj(dictHeytingAlgebra)(f(a))(g(a));
        };
      };
    },
    disj: function disj(f) {
      return function (g) {
        return function (a) {
          return _disj(dictHeytingAlgebra)(f(a))(g(a));
        };
      };
    },
    not: function not(f) {
      return function (a) {
        return _not(dictHeytingAlgebra)(f(a));
      };
    }
  };
};

var heytingAlgebraRecordCons = function heytingAlgebraRecordCons(dictIsSymbol) {
  return function () {
    return function (dictHeytingAlgebraRecord) {
      return function (dictHeytingAlgebra) {
        return {
          conjRecord: function conjRecord(v) {
            return function (ra) {
              return function (rb) {
                var tail = _conjRecord(dictHeytingAlgebraRecord)(Type_Proxy["Proxy"].value)(ra)(rb);

                var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
                var insert = Record_Unsafe.unsafeSet(key);
                var get = Record_Unsafe.unsafeGet(key);
                return insert(_conj(dictHeytingAlgebra)(get(ra))(get(rb)))(tail);
              };
            };
          },
          disjRecord: function disjRecord(v) {
            return function (ra) {
              return function (rb) {
                var tail = _disjRecord(dictHeytingAlgebraRecord)(Type_Proxy["Proxy"].value)(ra)(rb);

                var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
                var insert = Record_Unsafe.unsafeSet(key);
                var get = Record_Unsafe.unsafeGet(key);
                return insert(_disj(dictHeytingAlgebra)(get(ra))(get(rb)))(tail);
              };
            };
          },
          impliesRecord: function impliesRecord(v) {
            return function (ra) {
              return function (rb) {
                var tail = _impliesRecord(dictHeytingAlgebraRecord)(Type_Proxy["Proxy"].value)(ra)(rb);

                var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
                var insert = Record_Unsafe.unsafeSet(key);
                var get = Record_Unsafe.unsafeGet(key);
                return insert(_implies(dictHeytingAlgebra)(get(ra))(get(rb)))(tail);
              };
            };
          },
          ffRecord: function ffRecord(v) {
            return function (row) {
              var tail = _ffRecord(dictHeytingAlgebraRecord)(Type_Proxy["Proxy"].value)(row);

              var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
              var insert = Record_Unsafe.unsafeSet(key);
              return insert(_ff(dictHeytingAlgebra))(tail);
            };
          },
          notRecord: function notRecord(v) {
            return function (row) {
              var tail = _notRecord(dictHeytingAlgebraRecord)(Type_Proxy["Proxy"].value)(row);

              var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
              var insert = Record_Unsafe.unsafeSet(key);
              var get = Record_Unsafe.unsafeGet(key);
              return insert(_not(dictHeytingAlgebra)(get(row)))(tail);
            };
          },
          ttRecord: function ttRecord(v) {
            return function (row) {
              var tail = _ttRecord(dictHeytingAlgebraRecord)(Type_Proxy["Proxy"].value)(row);

              var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
              var insert = Record_Unsafe.unsafeSet(key);
              return insert(_tt(dictHeytingAlgebra))(tail);
            };
          }
        };
      };
    };
  };
};

module.exports = {
  tt: _tt,
  ff: _ff,
  implies: _implies,
  conj: _conj,
  disj: _disj,
  not: _not,
  ffRecord: _ffRecord,
  ttRecord: _ttRecord,
  impliesRecord: _impliesRecord,
  conjRecord: _conjRecord,
  disjRecord: _disjRecord,
  notRecord: _notRecord,
  heytingAlgebraBoolean: heytingAlgebraBoolean,
  heytingAlgebraUnit: heytingAlgebraUnit,
  heytingAlgebraFunction: heytingAlgebraFunction,
  heytingAlgebraProxy: heytingAlgebraProxy,
  heytingAlgebraProxy2: heytingAlgebraProxy2,
  heytingAlgebraProxy3: heytingAlgebraProxy3,
  heytingAlgebraRecord: heytingAlgebraRecord,
  heytingAlgebraRecordNil: heytingAlgebraRecordNil,
  heytingAlgebraRecordCons: heytingAlgebraRecordCons
};
},{"./foreign.js":"output/Data.HeytingAlgebra/foreign.js","../Data.Symbol/index.js":"output/Data.Symbol/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Record.Unsafe/index.js":"output/Record.Unsafe/index.js","../Type.Proxy/index.js":"output/Type.Proxy/index.js"}],"output/Data.Tuple/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Control_Lazy = require("../Control.Lazy/index.js");

var Data_Bounded = require("../Data.Bounded/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Functor_Invariant = require("../Data.Functor.Invariant/index.js");

var Data_Generic_Rep = require("../Data.Generic.Rep/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Ring = require("../Data.Ring/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Tuple = function () {
  function Tuple(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  Tuple.create = function (value0) {
    return function (value1) {
      return new Tuple(value0, value1);
    };
  };

  return Tuple;
}();

var uncurry = function uncurry(f) {
  return function (v) {
    return f(v.value0)(v.value1);
  };
};

var swap = function swap(v) {
  return new Tuple(v.value1, v.value0);
};

var snd = function snd(v) {
  return v.value1;
};

var showTuple = function showTuple(dictShow) {
  return function (dictShow1) {
    return {
      show: function show(v) {
        return "(Tuple " + (Data_Show.show(dictShow)(v.value0) + (" " + (Data_Show.show(dictShow1)(v.value1) + ")")));
      }
    };
  };
};

var semiringTuple = function semiringTuple(dictSemiring) {
  return function (dictSemiring1) {
    return {
      add: function add(v) {
        return function (v1) {
          return new Tuple(Data_Semiring.add(dictSemiring)(v.value0)(v1.value0), Data_Semiring.add(dictSemiring1)(v.value1)(v1.value1));
        };
      },
      one: new Tuple(Data_Semiring.one(dictSemiring), Data_Semiring.one(dictSemiring1)),
      mul: function mul(v) {
        return function (v1) {
          return new Tuple(Data_Semiring.mul(dictSemiring)(v.value0)(v1.value0), Data_Semiring.mul(dictSemiring1)(v.value1)(v1.value1));
        };
      },
      zero: new Tuple(Data_Semiring.zero(dictSemiring), Data_Semiring.zero(dictSemiring1))
    };
  };
};

var semigroupoidTuple = {
  compose: function compose(v) {
    return function (v1) {
      return new Tuple(v1.value0, v.value1);
    };
  }
};

var semigroupTuple = function semigroupTuple(dictSemigroup) {
  return function (dictSemigroup1) {
    return {
      append: function append(v) {
        return function (v1) {
          return new Tuple(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0), Data_Semigroup.append(dictSemigroup1)(v.value1)(v1.value1));
        };
      }
    };
  };
};

var ringTuple = function ringTuple(dictRing) {
  return function (dictRing1) {
    return {
      sub: function sub(v) {
        return function (v1) {
          return new Tuple(Data_Ring.sub(dictRing)(v.value0)(v1.value0), Data_Ring.sub(dictRing1)(v.value1)(v1.value1));
        };
      },
      Semiring0: function Semiring0() {
        return semiringTuple(dictRing.Semiring0())(dictRing1.Semiring0());
      }
    };
  };
};

var monoidTuple = function monoidTuple(dictMonoid) {
  return function (dictMonoid1) {
    return {
      mempty: new Tuple(Data_Monoid.mempty(dictMonoid), Data_Monoid.mempty(dictMonoid1)),
      Semigroup0: function Semigroup0() {
        return semigroupTuple(dictMonoid.Semigroup0())(dictMonoid1.Semigroup0());
      }
    };
  };
};

var heytingAlgebraTuple = function heytingAlgebraTuple(dictHeytingAlgebra) {
  return function (dictHeytingAlgebra1) {
    return {
      tt: new Tuple(Data_HeytingAlgebra.tt(dictHeytingAlgebra), Data_HeytingAlgebra.tt(dictHeytingAlgebra1)),
      ff: new Tuple(Data_HeytingAlgebra.ff(dictHeytingAlgebra), Data_HeytingAlgebra.ff(dictHeytingAlgebra1)),
      implies: function implies(v) {
        return function (v1) {
          return new Tuple(Data_HeytingAlgebra.implies(dictHeytingAlgebra)(v.value0)(v1.value0), Data_HeytingAlgebra.implies(dictHeytingAlgebra1)(v.value1)(v1.value1));
        };
      },
      conj: function conj(v) {
        return function (v1) {
          return new Tuple(Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v.value0)(v1.value0), Data_HeytingAlgebra.conj(dictHeytingAlgebra1)(v.value1)(v1.value1));
        };
      },
      disj: function disj(v) {
        return function (v1) {
          return new Tuple(Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v.value0)(v1.value0), Data_HeytingAlgebra.disj(dictHeytingAlgebra1)(v.value1)(v1.value1));
        };
      },
      not: function not(v) {
        return new Tuple(Data_HeytingAlgebra.not(dictHeytingAlgebra)(v.value0), Data_HeytingAlgebra.not(dictHeytingAlgebra1)(v.value1));
      }
    };
  };
};

var genericTuple = {
  to: function to(x) {
    return new Tuple(x.value0, x.value1);
  },
  from: function from(x) {
    return new Data_Generic_Rep.Product(x.value0, x.value1);
  }
};
var functorTuple = {
  map: function map(f) {
    return function (m) {
      return new Tuple(m.value0, f(m.value1));
    };
  }
};
var invariantTuple = {
  imap: Data_Functor_Invariant.imapF(functorTuple)
};

var fst = function fst(v) {
  return v.value0;
};

var lazyTuple = function lazyTuple(dictLazy) {
  return function (dictLazy1) {
    return {
      defer: function defer(f) {
        return new Tuple(Control_Lazy.defer(dictLazy)(function (v) {
          return fst(f(Data_Unit.unit));
        }), Control_Lazy.defer(dictLazy1)(function (v) {
          return snd(f(Data_Unit.unit));
        }));
      }
    };
  };
};

var extendTuple = {
  extend: function extend(f) {
    return function (v) {
      return new Tuple(v.value0, f(v));
    };
  },
  Functor0: function Functor0() {
    return functorTuple;
  }
};

var eqTuple = function eqTuple(dictEq) {
  return function (dictEq1) {
    return {
      eq: function eq(x) {
        return function (y) {
          return Data_Eq.eq(dictEq)(x.value0)(y.value0) && Data_Eq.eq(dictEq1)(x.value1)(y.value1);
        };
      }
    };
  };
};

var ordTuple = function ordTuple(dictOrd) {
  return function (dictOrd1) {
    return {
      compare: function compare(x) {
        return function (y) {
          var v = Data_Ord.compare(dictOrd)(x.value0)(y.value0);

          if (v instanceof Data_Ordering.LT) {
            return Data_Ordering.LT.value;
          }

          ;

          if (v instanceof Data_Ordering.GT) {
            return Data_Ordering.GT.value;
          }

          ;
          return Data_Ord.compare(dictOrd1)(x.value1)(y.value1);
        };
      },
      Eq0: function Eq0() {
        return eqTuple(dictOrd.Eq0())(dictOrd1.Eq0());
      }
    };
  };
};

var eq1Tuple = function eq1Tuple(dictEq) {
  return {
    eq1: function eq1(dictEq1) {
      return Data_Eq.eq(eqTuple(dictEq)(dictEq1));
    }
  };
};

var ord1Tuple = function ord1Tuple(dictOrd) {
  return {
    compare1: function compare1(dictOrd1) {
      return Data_Ord.compare(ordTuple(dictOrd)(dictOrd1));
    },
    Eq10: function Eq10() {
      return eq1Tuple(dictOrd.Eq0());
    }
  };
};

var curry = function curry(f) {
  return function (a) {
    return function (b) {
      return f(new Tuple(a, b));
    };
  };
};

var comonadTuple = {
  extract: snd,
  Extend0: function Extend0() {
    return extendTuple;
  }
};

var commutativeRingTuple = function commutativeRingTuple(dictCommutativeRing) {
  return function (dictCommutativeRing1) {
    return {
      Ring0: function Ring0() {
        return ringTuple(dictCommutativeRing.Ring0())(dictCommutativeRing1.Ring0());
      }
    };
  };
};

var boundedTuple = function boundedTuple(dictBounded) {
  return function (dictBounded1) {
    return {
      top: new Tuple(Data_Bounded.top(dictBounded), Data_Bounded.top(dictBounded1)),
      bottom: new Tuple(Data_Bounded.bottom(dictBounded), Data_Bounded.bottom(dictBounded1)),
      Ord0: function Ord0() {
        return ordTuple(dictBounded.Ord0())(dictBounded1.Ord0());
      }
    };
  };
};

var booleanAlgebraTuple = function booleanAlgebraTuple(dictBooleanAlgebra) {
  return function (dictBooleanAlgebra1) {
    return {
      HeytingAlgebra0: function HeytingAlgebra0() {
        return heytingAlgebraTuple(dictBooleanAlgebra.HeytingAlgebra0())(dictBooleanAlgebra1.HeytingAlgebra0());
      }
    };
  };
};

var applyTuple = function applyTuple(dictSemigroup) {
  return {
    apply: function apply(v) {
      return function (v1) {
        return new Tuple(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0), v.value1(v1.value1));
      };
    },
    Functor0: function Functor0() {
      return functorTuple;
    }
  };
};

var bindTuple = function bindTuple(dictSemigroup) {
  return {
    bind: function bind(v) {
      return function (f) {
        var v1 = f(v.value1);
        return new Tuple(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0), v1.value1);
      };
    },
    Apply0: function Apply0() {
      return applyTuple(dictSemigroup);
    }
  };
};

var applicativeTuple = function applicativeTuple(dictMonoid) {
  return {
    pure: Tuple.create(Data_Monoid.mempty(dictMonoid)),
    Apply0: function Apply0() {
      return applyTuple(dictMonoid.Semigroup0());
    }
  };
};

var monadTuple = function monadTuple(dictMonoid) {
  return {
    Applicative0: function Applicative0() {
      return applicativeTuple(dictMonoid);
    },
    Bind1: function Bind1() {
      return bindTuple(dictMonoid.Semigroup0());
    }
  };
};

module.exports = {
  Tuple: Tuple,
  fst: fst,
  snd: snd,
  curry: curry,
  uncurry: uncurry,
  swap: swap,
  showTuple: showTuple,
  eqTuple: eqTuple,
  eq1Tuple: eq1Tuple,
  ordTuple: ordTuple,
  ord1Tuple: ord1Tuple,
  boundedTuple: boundedTuple,
  semigroupoidTuple: semigroupoidTuple,
  semigroupTuple: semigroupTuple,
  monoidTuple: monoidTuple,
  semiringTuple: semiringTuple,
  ringTuple: ringTuple,
  commutativeRingTuple: commutativeRingTuple,
  heytingAlgebraTuple: heytingAlgebraTuple,
  booleanAlgebraTuple: booleanAlgebraTuple,
  functorTuple: functorTuple,
  genericTuple: genericTuple,
  invariantTuple: invariantTuple,
  applyTuple: applyTuple,
  applicativeTuple: applicativeTuple,
  bindTuple: bindTuple,
  monadTuple: monadTuple,
  extendTuple: extendTuple,
  comonadTuple: comonadTuple,
  lazyTuple: lazyTuple
};
},{"../Control.Lazy/index.js":"output/Control.Lazy/index.js","../Data.Bounded/index.js":"output/Data.Bounded/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Functor.Invariant/index.js":"output/Data.Functor.Invariant/index.js","../Data.Generic.Rep/index.js":"output/Data.Generic.Rep/index.js","../Data.HeytingAlgebra/index.js":"output/Data.HeytingAlgebra/index.js","../Data.Monoid/index.js":"output/Data.Monoid/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Data.Ring/index.js":"output/Data.Ring/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Semiring/index.js":"output/Data.Semiring/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js"}],"output/Control.Monad.State.Class/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var state = function state(dict) {
  return dict.state;
};

var put = function put(dictMonadState) {
  return function (s) {
    return state(dictMonadState)(function (v) {
      return new Data_Tuple.Tuple(Data_Unit.unit, s);
    });
  };
};

var modify_ = function modify_(dictMonadState) {
  return function (f) {
    return state(dictMonadState)(function (s) {
      return new Data_Tuple.Tuple(Data_Unit.unit, f(s));
    });
  };
};

var modify = function modify(dictMonadState) {
  return function (f) {
    return state(dictMonadState)(function (s) {
      var s$prime = f(s);
      return new Data_Tuple.Tuple(s$prime, s$prime);
    });
  };
};

var gets = function gets(dictMonadState) {
  return function (f) {
    return state(dictMonadState)(function (s) {
      return new Data_Tuple.Tuple(f(s), s);
    });
  };
};

var get = function get(dictMonadState) {
  return state(dictMonadState)(function (s) {
    return new Data_Tuple.Tuple(s, s);
  });
};

module.exports = {
  state: state,
  get: get,
  gets: gets,
  put: put,
  modify: modify,
  modify_: modify_
};
},{"../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js"}],"output/Control.Monad.Trans.Class/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var lift = function lift(dict) {
  return dict.lift;
};

module.exports = {
  lift: lift
};
},{}],"output/Control.Monad.Writer.Class/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var tell = function tell(dict) {
  return dict.tell;
};

var pass = function pass(dict) {
  return dict.pass;
};

var listen = function listen(dict) {
  return dict.listen;
};

var listens = function listens(dictMonadWriter) {
  return function (f) {
    return function (m) {
      return Control_Bind.bind(dictMonadWriter.MonadTell1().Monad1().Bind1())(listen(dictMonadWriter)(m))(function (v) {
        return Control_Applicative.pure(dictMonadWriter.MonadTell1().Monad1().Applicative0())(new Data_Tuple.Tuple(v.value0, f(v.value1)));
      });
    };
  };
};

var censor = function censor(dictMonadWriter) {
  return function (f) {
    return function (m) {
      return pass(dictMonadWriter)(Control_Bind.bind(dictMonadWriter.MonadTell1().Monad1().Bind1())(m)(function (a) {
        return Control_Applicative.pure(dictMonadWriter.MonadTell1().Monad1().Applicative0())(new Data_Tuple.Tuple(a, f));
      }));
    };
  };
};

module.exports = {
  listen: listen,
  pass: pass,
  tell: tell,
  listens: listens,
  censor: censor
};
},{"../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js"}],"output/Effect.Class/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Control_Category = require("../Control.Category/index.js");

var Effect = require("../Effect/index.js");

var monadEffectEffect = {
  liftEffect: Control_Category.identity(Control_Category.categoryFn),
  Monad0: function Monad0() {
    return Effect.monadEffect;
  }
};

var liftEffect = function liftEffect(dict) {
  return dict.liftEffect;
};

module.exports = {
  liftEffect: liftEffect,
  monadEffectEffect: monadEffectEffect
};
},{"../Control.Category/index.js":"output/Control.Category/index.js","../Effect/index.js":"output/Effect/index.js"}],"output/Control.Monad.Except.Trans/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_Monad_Cont_Class = require("../Control.Monad.Cont.Class/index.js");

var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");

var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class/index.js");

var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");

var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");

var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");

var Control_Monad_Writer_Class = require("../Control.Monad.Writer.Class/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Effect_Class = require("../Effect.Class/index.js");

var ExceptT = function ExceptT(x) {
  return x;
};

var withExceptT = function withExceptT(dictFunctor) {
  return function (f) {
    return function (v) {
      var mapLeft = function mapLeft(v1) {
        return function (v2) {
          if (v2 instanceof Data_Either.Right) {
            return new Data_Either.Right(v2.value0);
          }

          ;

          if (v2 instanceof Data_Either.Left) {
            return new Data_Either.Left(v1(v2.value0));
          }

          ;
          throw new Error("Failed pattern match at Control.Monad.Except.Trans (line 43, column 3 - line 43, column 32): " + [v1.constructor.name, v2.constructor.name]);
        };
      };

      return Data_Functor.map(dictFunctor)(mapLeft(f))(v);
    };
  };
};

var runExceptT = function runExceptT(v) {
  return v;
};

var newtypeExceptT = {
  Coercible0: function Coercible0() {
    return undefined;
  }
};
var monadTransExceptT = {
  lift: function lift(dictMonad) {
    return function (m) {
      return Control_Bind.bind(dictMonad.Bind1())(m)(function (a) {
        return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(a));
      });
    };
  }
};

var mapExceptT = function mapExceptT(f) {
  return function (v) {
    return f(v);
  };
};

var functorExceptT = function functorExceptT(dictFunctor) {
  return {
    map: function map(f) {
      return mapExceptT(Data_Functor.map(dictFunctor)(Data_Functor.map(Data_Either.functorEither)(f)));
    }
  };
};

var except = function except(dictApplicative) {
  var $89 = Control_Applicative.pure(dictApplicative);
  return function ($90) {
    return ExceptT($89($90));
  };
};

var monadExceptT = function monadExceptT(dictMonad) {
  return {
    Applicative0: function Applicative0() {
      return applicativeExceptT(dictMonad);
    },
    Bind1: function Bind1() {
      return bindExceptT(dictMonad);
    }
  };
};

var bindExceptT = function bindExceptT(dictMonad) {
  return {
    bind: function bind(v) {
      return function (k) {
        return Control_Bind.bind(dictMonad.Bind1())(v)(Data_Either.either(function () {
          var $91 = Control_Applicative.pure(dictMonad.Applicative0());
          return function ($92) {
            return $91(Data_Either.Left.create($92));
          };
        }())(function (a) {
          var v1 = k(a);
          return v1;
        }));
      };
    },
    Apply0: function Apply0() {
      return applyExceptT(dictMonad);
    }
  };
};

var applyExceptT = function applyExceptT(dictMonad) {
  return {
    apply: Control_Monad.ap(monadExceptT(dictMonad)),
    Functor0: function Functor0() {
      return functorExceptT(dictMonad.Bind1().Apply0().Functor0());
    }
  };
};

var applicativeExceptT = function applicativeExceptT(dictMonad) {
  return {
    pure: function () {
      var $93 = Control_Applicative.pure(dictMonad.Applicative0());
      return function ($94) {
        return ExceptT($93(Data_Either.Right.create($94)));
      };
    }(),
    Apply0: function Apply0() {
      return applyExceptT(dictMonad);
    }
  };
};

var semigroupExceptT = function semigroupExceptT(dictMonad) {
  return function (dictSemigroup) {
    return {
      append: Control_Apply.lift2(applyExceptT(dictMonad))(Data_Semigroup.append(dictSemigroup))
    };
  };
};

var monadAskExceptT = function monadAskExceptT(dictMonadAsk) {
  return {
    ask: Control_Monad_Trans_Class.lift(monadTransExceptT)(dictMonadAsk.Monad0())(Control_Monad_Reader_Class.ask(dictMonadAsk)),
    Monad0: function Monad0() {
      return monadExceptT(dictMonadAsk.Monad0());
    }
  };
};

var monadReaderExceptT = function monadReaderExceptT(dictMonadReader) {
  return {
    local: function local(f) {
      return mapExceptT(Control_Monad_Reader_Class.local(dictMonadReader)(f));
    },
    MonadAsk0: function MonadAsk0() {
      return monadAskExceptT(dictMonadReader.MonadAsk0());
    }
  };
};

var monadContExceptT = function monadContExceptT(dictMonadCont) {
  return {
    callCC: function callCC(f) {
      return Control_Monad_Cont_Class.callCC(dictMonadCont)(function (c) {
        var v = f(function (a) {
          return c(new Data_Either.Right(a));
        });
        return v;
      });
    },
    Monad0: function Monad0() {
      return monadExceptT(dictMonadCont.Monad0());
    }
  };
};

var monadEffectExceptT = function monadEffectExceptT(dictMonadEffect) {
  return {
    liftEffect: function () {
      var $95 = Control_Monad_Trans_Class.lift(monadTransExceptT)(dictMonadEffect.Monad0());
      var $96 = Effect_Class.liftEffect(dictMonadEffect);
      return function ($97) {
        return $95($96($97));
      };
    }(),
    Monad0: function Monad0() {
      return monadExceptT(dictMonadEffect.Monad0());
    }
  };
};

var monadRecExceptT = function monadRecExceptT(dictMonadRec) {
  return {
    tailRecM: function tailRecM(f) {
      var $98 = Control_Monad_Rec_Class.tailRecM(dictMonadRec)(function (a) {
        var v = f(a);
        return Control_Bind.bind(dictMonadRec.Monad0().Bind1())(v)(function (m$prime) {
          return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(function () {
            if (m$prime instanceof Data_Either.Left) {
              return new Control_Monad_Rec_Class.Done(new Data_Either.Left(m$prime.value0));
            }

            ;

            if (m$prime instanceof Data_Either.Right && m$prime.value0 instanceof Control_Monad_Rec_Class.Loop) {
              return new Control_Monad_Rec_Class.Loop(m$prime.value0.value0);
            }

            ;

            if (m$prime instanceof Data_Either.Right && m$prime.value0 instanceof Control_Monad_Rec_Class.Done) {
              return new Control_Monad_Rec_Class.Done(new Data_Either.Right(m$prime.value0.value0));
            }

            ;
            throw new Error("Failed pattern match at Control.Monad.Except.Trans (line 75, column 14 - line 78, column 43): " + [m$prime.constructor.name]);
          }());
        });
      });
      return function ($99) {
        return ExceptT($98($99));
      };
    },
    Monad0: function Monad0() {
      return monadExceptT(dictMonadRec.Monad0());
    }
  };
};

var monadStateExceptT = function monadStateExceptT(dictMonadState) {
  return {
    state: function state(f) {
      return Control_Monad_Trans_Class.lift(monadTransExceptT)(dictMonadState.Monad0())(Control_Monad_State_Class.state(dictMonadState)(f));
    },
    Monad0: function Monad0() {
      return monadExceptT(dictMonadState.Monad0());
    }
  };
};

var monadTellExceptT = function monadTellExceptT(dictMonadTell) {
  return {
    tell: function () {
      var $100 = Control_Monad_Trans_Class.lift(monadTransExceptT)(dictMonadTell.Monad1());
      var $101 = Control_Monad_Writer_Class.tell(dictMonadTell);
      return function ($102) {
        return $100($101($102));
      };
    }(),
    Semigroup0: dictMonadTell.Semigroup0,
    Monad1: function Monad1() {
      return monadExceptT(dictMonadTell.Monad1());
    }
  };
};

var monadWriterExceptT = function monadWriterExceptT(dictMonadWriter) {
  return {
    listen: mapExceptT(function (m) {
      return Control_Bind.bind(dictMonadWriter.MonadTell1().Monad1().Bind1())(Control_Monad_Writer_Class.listen(dictMonadWriter)(m))(function (v) {
        return Control_Applicative.pure(dictMonadWriter.MonadTell1().Monad1().Applicative0())(Data_Functor.map(Data_Either.functorEither)(function (r) {
          return new Data_Tuple.Tuple(r, v.value1);
        })(v.value0));
      });
    }),
    pass: mapExceptT(function (m) {
      return Control_Monad_Writer_Class.pass(dictMonadWriter)(Control_Bind.bind(dictMonadWriter.MonadTell1().Monad1().Bind1())(m)(function (a) {
        return Control_Applicative.pure(dictMonadWriter.MonadTell1().Monad1().Applicative0())(function () {
          if (a instanceof Data_Either.Left) {
            return new Data_Tuple.Tuple(new Data_Either.Left(a.value0), Control_Category.identity(Control_Category.categoryFn));
          }

          ;

          if (a instanceof Data_Either.Right) {
            return new Data_Tuple.Tuple(new Data_Either.Right(a.value0.value0), a.value0.value1);
          }

          ;
          throw new Error("Failed pattern match at Control.Monad.Except.Trans (line 137, column 10 - line 139, column 45): " + [a.constructor.name]);
        }());
      }));
    }),
    Monoid0: dictMonadWriter.Monoid0,
    MonadTell1: function MonadTell1() {
      return monadTellExceptT(dictMonadWriter.MonadTell1());
    }
  };
};

var monadThrowExceptT = function monadThrowExceptT(dictMonad) {
  return {
    throwError: function () {
      var $103 = Control_Applicative.pure(dictMonad.Applicative0());
      return function ($104) {
        return ExceptT($103(Data_Either.Left.create($104)));
      };
    }(),
    Monad0: function Monad0() {
      return monadExceptT(dictMonad);
    }
  };
};

var monadErrorExceptT = function monadErrorExceptT(dictMonad) {
  return {
    catchError: function catchError(v) {
      return function (k) {
        return Control_Bind.bind(dictMonad.Bind1())(v)(Data_Either.either(function (a) {
          var v1 = k(a);
          return v1;
        })(function () {
          var $105 = Control_Applicative.pure(dictMonad.Applicative0());
          return function ($106) {
            return $105(Data_Either.Right.create($106));
          };
        }()));
      };
    },
    MonadThrow0: function MonadThrow0() {
      return monadThrowExceptT(dictMonad);
    }
  };
};

var monoidExceptT = function monoidExceptT(dictMonad) {
  return function (dictMonoid) {
    return {
      mempty: Control_Applicative.pure(applicativeExceptT(dictMonad))(Data_Monoid.mempty(dictMonoid)),
      Semigroup0: function Semigroup0() {
        return semigroupExceptT(dictMonad)(dictMonoid.Semigroup0());
      }
    };
  };
};

var altExceptT = function altExceptT(dictSemigroup) {
  return function (dictMonad) {
    return {
      alt: function alt(v) {
        return function (v1) {
          return Control_Bind.bind(dictMonad.Bind1())(v)(function (rm) {
            if (rm instanceof Data_Either.Right) {
              return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(rm.value0));
            }

            ;

            if (rm instanceof Data_Either.Left) {
              return Control_Bind.bind(dictMonad.Bind1())(v1)(function (rn) {
                if (rn instanceof Data_Either.Right) {
                  return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(rn.value0));
                }

                ;

                if (rn instanceof Data_Either.Left) {
                  return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Left(Data_Semigroup.append(dictSemigroup)(rm.value0)(rn.value0)));
                }

                ;
                throw new Error("Failed pattern match at Control.Monad.Except.Trans (line 87, column 9 - line 89, column 49): " + [rn.constructor.name]);
              });
            }

            ;
            throw new Error("Failed pattern match at Control.Monad.Except.Trans (line 83, column 5 - line 89, column 49): " + [rm.constructor.name]);
          });
        };
      },
      Functor0: function Functor0() {
        return functorExceptT(dictMonad.Bind1().Apply0().Functor0());
      }
    };
  };
};

var plusExceptT = function plusExceptT(dictMonoid) {
  return function (dictMonad) {
    return {
      empty: Control_Monad_Error_Class.throwError(monadThrowExceptT(dictMonad))(Data_Monoid.mempty(dictMonoid)),
      Alt0: function Alt0() {
        return altExceptT(dictMonoid.Semigroup0())(dictMonad);
      }
    };
  };
};

var alternativeExceptT = function alternativeExceptT(dictMonoid) {
  return function (dictMonad) {
    return {
      Applicative0: function Applicative0() {
        return applicativeExceptT(dictMonad);
      },
      Plus1: function Plus1() {
        return plusExceptT(dictMonoid)(dictMonad);
      }
    };
  };
};

var monadPlusExceptT = function monadPlusExceptT(dictMonoid) {
  return function (dictMonad) {
    return {
      Monad0: function Monad0() {
        return monadExceptT(dictMonad);
      },
      Alternative1: function Alternative1() {
        return alternativeExceptT(dictMonoid)(dictMonad);
      }
    };
  };
};

var monadZeroExceptT = function monadZeroExceptT(dictMonoid) {
  return function (dictMonad) {
    return {
      Monad0: function Monad0() {
        return monadExceptT(dictMonad);
      },
      Alternative1: function Alternative1() {
        return alternativeExceptT(dictMonoid)(dictMonad);
      },
      MonadZeroIsDeprecated2: function MonadZeroIsDeprecated2() {
        return undefined;
      }
    };
  };
};

module.exports = {
  ExceptT: ExceptT,
  runExceptT: runExceptT,
  withExceptT: withExceptT,
  mapExceptT: mapExceptT,
  except: except,
  newtypeExceptT: newtypeExceptT,
  functorExceptT: functorExceptT,
  applyExceptT: applyExceptT,
  applicativeExceptT: applicativeExceptT,
  bindExceptT: bindExceptT,
  monadExceptT: monadExceptT,
  monadRecExceptT: monadRecExceptT,
  altExceptT: altExceptT,
  plusExceptT: plusExceptT,
  alternativeExceptT: alternativeExceptT,
  monadPlusExceptT: monadPlusExceptT,
  monadZeroExceptT: monadZeroExceptT,
  monadTransExceptT: monadTransExceptT,
  monadEffectExceptT: monadEffectExceptT,
  monadContExceptT: monadContExceptT,
  monadThrowExceptT: monadThrowExceptT,
  monadErrorExceptT: monadErrorExceptT,
  monadAskExceptT: monadAskExceptT,
  monadReaderExceptT: monadReaderExceptT,
  monadStateExceptT: monadStateExceptT,
  monadTellExceptT: monadTellExceptT,
  monadWriterExceptT: monadWriterExceptT,
  semigroupExceptT: semigroupExceptT,
  monoidExceptT: monoidExceptT,
  catchError: Control_Monad_Error_Class.catchError,
  throwError: Control_Monad_Error_Class.throwError,
  lift: Control_Monad_Trans_Class.lift
};
},{"../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Category/index.js":"output/Control.Category/index.js","../Control.Monad/index.js":"output/Control.Monad/index.js","../Control.Monad.Cont.Class/index.js":"output/Control.Monad.Cont.Class/index.js","../Control.Monad.Error.Class/index.js":"output/Control.Monad.Error.Class/index.js","../Control.Monad.Reader.Class/index.js":"output/Control.Monad.Reader.Class/index.js","../Control.Monad.Rec.Class/index.js":"output/Control.Monad.Rec.Class/index.js","../Control.Monad.State.Class/index.js":"output/Control.Monad.State.Class/index.js","../Control.Monad.Trans.Class/index.js":"output/Control.Monad.Trans.Class/index.js","../Control.Monad.Writer.Class/index.js":"output/Control.Monad.Writer.Class/index.js","../Data.Either/index.js":"output/Data.Either/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Monoid/index.js":"output/Data.Monoid/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Effect.Class/index.js":"output/Effect.Class/index.js"}],"output/Control.Monad.Except/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");

var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans/index.js");

var Data_Identity = require("../Data.Identity/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var withExcept = Control_Monad_Except_Trans.withExceptT(Data_Identity.functorIdentity);

var runExcept = function () {
  var $0 = Data_Newtype.unwrap();
  return function ($1) {
    return $0(Control_Monad_Except_Trans.runExceptT($1));
  };
}();

var mapExcept = function mapExcept(f) {
  return Control_Monad_Except_Trans.mapExceptT(function () {
    var $2 = Data_Newtype.unwrap();
    return function ($3) {
      return Data_Identity.Identity(f($2($3)));
    };
  }());
};

module.exports = {
  runExcept: runExcept,
  mapExcept: mapExcept,
  withExcept: withExcept,
  catchError: Control_Monad_Error_Class.catchError,
  catchJust: Control_Monad_Error_Class.catchJust,
  throwError: Control_Monad_Error_Class.throwError,
  ExceptT: Control_Monad_Except_Trans.ExceptT,
  except: Control_Monad_Except_Trans.except,
  lift: Control_Monad_Except_Trans.lift,
  mapExceptT: Control_Monad_Except_Trans.mapExceptT,
  runExceptT: Control_Monad_Except_Trans.runExceptT,
  withExceptT: Control_Monad_Except_Trans.withExceptT
};
},{"../Control.Monad.Error.Class/index.js":"output/Control.Monad.Error.Class/index.js","../Control.Monad.Except.Trans/index.js":"output/Control.Monad.Except.Trans/index.js","../Data.Identity/index.js":"output/Data.Identity/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js"}],"output/Data.Argonaut.Core/foreign.js":[function(require,module,exports) {
/* eslint-disable no-eq-null, eqeqeq */
"use strict";

function id(x) {
  return x;
}

exports.fromBoolean = id;
exports.fromNumber = id;
exports.fromString = id;
exports.fromArray = id;
exports.fromObject = id;
exports.jsonNull = null;

exports.stringify = function (j) {
  return JSON.stringify(j);
};

exports.stringifyWithIndent = function (i) {
  return function (j) {
    return JSON.stringify(j, null, i);
  };
};

function isArray(a) {
  return Object.prototype.toString.call(a) === "[object Array]";
}

exports._caseJson = function (isNull, isBool, isNum, isStr, isArr, isObj, j) {
  if (j == null) return isNull();else if (typeof j === "boolean") return isBool(j);else if (typeof j === "number") return isNum(j);else if (typeof j === "string") return isStr(j);else if (Object.prototype.toString.call(j) === "[object Array]") return isArr(j);else return isObj(j);
};

exports._compare = function _compare(EQ, GT, LT, a, b) {
  if (a == null) {
    if (b == null) return EQ;else return LT;
  } else if (typeof a === "boolean") {
    if (typeof b === "boolean") {
      // boolean / boolean
      if (a === b) return EQ;else if (a === false) return LT;else return GT;
    } else if (b == null) return GT;else return LT;
  } else if (typeof a === "number") {
    if (typeof b === "number") {
      if (a === b) return EQ;else if (a < b) return LT;else return GT;
    } else if (b == null) return GT;else if (typeof b === "boolean") return GT;else return LT;
  } else if (typeof a === "string") {
    if (typeof b === "string") {
      if (a === b) return EQ;else if (a < b) return LT;else return GT;
    } else if (b == null) return GT;else if (typeof b === "boolean") return GT;else if (typeof b === "number") return GT;else return LT;
  } else if (isArray(a)) {
    if (isArray(b)) {
      for (var i = 0; i < Math.min(a.length, b.length); i++) {
        var ca = _compare(EQ, GT, LT, a[i], b[i]);

        if (ca !== EQ) return ca;
      }

      if (a.length === b.length) return EQ;else if (a.length < b.length) return LT;else return GT;
    } else if (b == null) return GT;else if (typeof b === "boolean") return GT;else if (typeof b === "number") return GT;else if (typeof b === "string") return GT;else return LT;
  } else {
    if (b == null) return GT;else if (typeof b === "boolean") return GT;else if (typeof b === "number") return GT;else if (typeof b === "string") return GT;else if (isArray(b)) return GT;else {
      var akeys = Object.keys(a);
      var bkeys = Object.keys(b);
      if (akeys.length < bkeys.length) return LT;else if (akeys.length > bkeys.length) return GT;
      var keys = akeys.concat(bkeys).sort();

      for (var j = 0; j < keys.length; j++) {
        var k = keys[j];
        if (a[k] === undefined) return LT;else if (b[k] === undefined) return GT;

        var ck = _compare(EQ, GT, LT, a[k], b[k]);

        if (ck !== EQ) return ck;
      }

      return EQ;
    }
  }
};
},{}],"output/Foreign.Object/foreign.js":[function(require,module,exports) {
"use strict";

exports._copyST = function (m) {
  return function () {
    var r = {};

    for (var k in m) {
      if (hasOwnProperty.call(m, k)) {
        r[k] = m[k];
      }
    }

    return r;
  };
};

exports.empty = {};

exports.runST = function (f) {
  return f();
};

exports._fmapObject = function (m0, f) {
  var m = {};

  for (var k in m0) {
    if (hasOwnProperty.call(m0, k)) {
      m[k] = f(m0[k]);
    }
  }

  return m;
};

exports._mapWithKey = function (m0, f) {
  var m = {};

  for (var k in m0) {
    if (hasOwnProperty.call(m0, k)) {
      m[k] = f(k)(m0[k]);
    }
  }

  return m;
};

exports._foldM = function (bind) {
  return function (f) {
    return function (mz) {
      return function (m) {
        var acc = mz;

        function g(k) {
          return function (z) {
            return f(z)(k)(m[k]);
          };
        }

        for (var k in m) {
          if (hasOwnProperty.call(m, k)) {
            acc = bind(acc)(g(k));
          }
        }

        return acc;
      };
    };
  };
};

exports._foldSCObject = function (m, z, f, fromMaybe) {
  var acc = z;

  for (var k in m) {
    if (hasOwnProperty.call(m, k)) {
      var maybeR = f(acc)(k)(m[k]);
      var r = fromMaybe(null)(maybeR);
      if (r === null) return acc;else acc = r;
    }
  }

  return acc;
};

exports.all = function (f) {
  return function (m) {
    for (var k in m) {
      if (hasOwnProperty.call(m, k) && !f(k)(m[k])) return false;
    }

    return true;
  };
};

exports.size = function (m) {
  var s = 0;

  for (var k in m) {
    if (hasOwnProperty.call(m, k)) {
      ++s;
    }
  }

  return s;
};

exports._lookup = function (no, yes, k, m) {
  return k in m ? yes(m[k]) : no;
};

exports._lookupST = function (no, yes, k, m) {
  return function () {
    return k in m ? yes(m[k]) : no;
  };
};

function toArrayWithKey(f) {
  return function (m) {
    var r = [];

    for (var k in m) {
      if (hasOwnProperty.call(m, k)) {
        r.push(f(k)(m[k]));
      }
    }

    return r;
  };
}

exports.toArrayWithKey = toArrayWithKey;
exports.keys = Object.keys || toArrayWithKey(function (k) {
  return function () {
    return k;
  };
});
},{}],"output/Control.Monad.ST.Internal/foreign.js":[function(require,module,exports) {
"use strict";

exports.map_ = function (f) {
  return function (a) {
    return function () {
      return f(a());
    };
  };
};

exports.pure_ = function (a) {
  return function () {
    return a;
  };
};

exports.bind_ = function (a) {
  return function (f) {
    return function () {
      return f(a())();
    };
  };
};

exports.run = function (f) {
  return f();
};

exports["while"] = function (f) {
  return function (a) {
    return function () {
      while (f()) {
        a();
      }
    };
  };
};

exports["for"] = function (lo) {
  return function (hi) {
    return function (f) {
      return function () {
        for (var i = lo; i < hi; i++) {
          f(i)();
        }
      };
    };
  };
};

exports.foreach = function (as) {
  return function (f) {
    return function () {
      for (var i = 0, l = as.length; i < l; i++) {
        f(as[i])();
      }
    };
  };
};

exports.new = function (val) {
  return function () {
    return {
      value: val
    };
  };
};

exports.read = function (ref) {
  return function () {
    return ref.value;
  };
};

exports.modifyImpl = function (f) {
  return function (ref) {
    return function () {
      var t = f(ref.value);
      ref.value = t.state;
      return t.value;
    };
  };
};

exports.write = function (a) {
  return function (ref) {
    return function () {
      return ref.value = a; // eslint-disable-line no-return-assign
    };
  };
};
},{}],"output/Control.Monad.ST.Internal/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var modify$prime = $foreign.modifyImpl;

var modify = function modify(f) {
  return modify$prime(function (s) {
    var s$prime = f(s);
    return {
      state: s$prime,
      value: s$prime
    };
  });
};

var functorST = {
  map: $foreign.map_
};
var monadST = {
  Applicative0: function Applicative0() {
    return applicativeST;
  },
  Bind1: function Bind1() {
    return bindST;
  }
};
var bindST = {
  bind: $foreign.bind_,
  Apply0: function Apply0() {
    return applyST;
  }
};
var applyST = {
  apply: Control_Monad.ap(monadST),
  Functor0: function Functor0() {
    return functorST;
  }
};
var applicativeST = {
  pure: $foreign.pure_,
  Apply0: function Apply0() {
    return applyST;
  }
};
var monadRecST = {
  tailRecM: function tailRecM(f) {
    return function (a) {
      var isLooping = function isLooping(v) {
        if (v instanceof Control_Monad_Rec_Class.Loop) {
          return true;
        }

        ;
        return false;
      };

      var fromDone = function fromDone(v) {
        if (v instanceof Control_Monad_Rec_Class.Done) {
          return v.value0;
        }

        ;
        throw new Error("Failed pattern match at Control.Monad.ST.Internal (line 69, column 32 - line 69, column 46): " + [v.constructor.name]);
      };

      return Control_Bind.bind(bindST)(Control_Bind.bindFlipped(bindST)($foreign["new"])(f(a)))(function (r) {
        return Control_Bind.discard(Control_Bind.discardUnit)(bindST)($foreign["while"](Data_Functor.map(functorST)(isLooping)($foreign.read(r)))(Control_Bind.bind(bindST)($foreign.read(r))(function (v) {
          if (v instanceof Control_Monad_Rec_Class.Loop) {
            return Control_Bind.bind(bindST)(f(v.value0))(function (e) {
              return Data_Functor["void"](functorST)($foreign.write(e)(r));
            });
          }

          ;

          if (v instanceof Control_Monad_Rec_Class.Done) {
            return Control_Applicative.pure(applicativeST)(Data_Unit.unit);
          }

          ;
          throw new Error("Failed pattern match at Control.Monad.ST.Internal (line 61, column 18 - line 65, column 28): " + [v.constructor.name]);
        })))(function () {
          return Data_Functor.map(functorST)(fromDone)($foreign.read(r));
        });
      });
    };
  },
  Monad0: function Monad0() {
    return monadST;
  }
};
module.exports = {
  "modify'": modify$prime,
  modify: modify,
  functorST: functorST,
  applyST: applyST,
  applicativeST: applicativeST,
  bindST: bindST,
  monadST: monadST,
  monadRecST: monadRecST,
  run: $foreign.run,
  "while": $foreign["while"],
  "for": $foreign["for"],
  foreach: $foreign.foreach,
  "new": $foreign["new"],
  read: $foreign.read,
  write: $foreign.write
};
},{"./foreign.js":"output/Control.Monad.ST.Internal/foreign.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Monad/index.js":"output/Control.Monad/index.js","../Control.Monad.Rec.Class/index.js":"output/Control.Monad.Rec.Class/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js"}],"output/Data.Array/foreign.js":[function(require,module,exports) {
"use strict"; //------------------------------------------------------------------------------
// Array creation --------------------------------------------------------------
//------------------------------------------------------------------------------

exports.range = function (start) {
  return function (end) {
    var step = start > end ? -1 : 1;
    var result = new Array(step * (end - start) + 1);
    var i = start,
        n = 0;

    while (i !== end) {
      result[n++] = i;
      i += step;
    }

    result[n] = i;
    return result;
  };
};

var replicateFill = function replicateFill(count) {
  return function (value) {
    if (count < 1) {
      return [];
    }

    var result = new Array(count);
    return result.fill(value);
  };
};

var replicatePolyfill = function replicatePolyfill(count) {
  return function (value) {
    var result = [];
    var n = 0;

    for (var i = 0; i < count; i++) {
      result[n++] = value;
    }

    return result;
  };
}; // In browsers that have Array.prototype.fill we use it, as it's faster.


exports.replicate = typeof Array.prototype.fill === "function" ? replicateFill : replicatePolyfill;

exports.fromFoldableImpl = function () {
  function Cons(head, tail) {
    this.head = head;
    this.tail = tail;
  }

  var emptyList = {};

  function curryCons(head) {
    return function (tail) {
      return new Cons(head, tail);
    };
  }

  function listToArray(list) {
    var result = [];
    var count = 0;
    var xs = list;

    while (xs !== emptyList) {
      result[count++] = xs.head;
      xs = xs.tail;
    }

    return result;
  }

  return function (foldr) {
    return function (xs) {
      return listToArray(foldr(curryCons)(emptyList)(xs));
    };
  };
}(); //------------------------------------------------------------------------------
// Array size ------------------------------------------------------------------
//------------------------------------------------------------------------------


exports.length = function (xs) {
  return xs.length;
}; //------------------------------------------------------------------------------
// Non-indexed reads -----------------------------------------------------------
//------------------------------------------------------------------------------


exports.unconsImpl = function (empty) {
  return function (next) {
    return function (xs) {
      return xs.length === 0 ? empty({}) : next(xs[0])(xs.slice(1));
    };
  };
}; //------------------------------------------------------------------------------
// Indexed operations ----------------------------------------------------------
//------------------------------------------------------------------------------


exports.indexImpl = function (just) {
  return function (nothing) {
    return function (xs) {
      return function (i) {
        return i < 0 || i >= xs.length ? nothing : just(xs[i]);
      };
    };
  };
};

exports.findMapImpl = function (nothing) {
  return function (isJust) {
    return function (f) {
      return function (xs) {
        for (var i = 0; i < xs.length; i++) {
          var result = f(xs[i]);
          if (isJust(result)) return result;
        }

        return nothing;
      };
    };
  };
};

exports.findIndexImpl = function (just) {
  return function (nothing) {
    return function (f) {
      return function (xs) {
        for (var i = 0, l = xs.length; i < l; i++) {
          if (f(xs[i])) return just(i);
        }

        return nothing;
      };
    };
  };
};

exports.findLastIndexImpl = function (just) {
  return function (nothing) {
    return function (f) {
      return function (xs) {
        for (var i = xs.length - 1; i >= 0; i--) {
          if (f(xs[i])) return just(i);
        }

        return nothing;
      };
    };
  };
};

exports._insertAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (a) {
        return function (l) {
          if (i < 0 || i > l.length) return nothing;
          var l1 = l.slice();
          l1.splice(i, 0, a);
          return just(l1);
        };
      };
    };
  };
};

exports._deleteAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (l) {
        if (i < 0 || i >= l.length) return nothing;
        var l1 = l.slice();
        l1.splice(i, 1);
        return just(l1);
      };
    };
  };
};

exports._updateAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (a) {
        return function (l) {
          if (i < 0 || i >= l.length) return nothing;
          var l1 = l.slice();
          l1[i] = a;
          return just(l1);
        };
      };
    };
  };
}; //------------------------------------------------------------------------------
// Transformations -------------------------------------------------------------
//------------------------------------------------------------------------------


exports.reverse = function (l) {
  return l.slice().reverse();
};

exports.concat = function (xss) {
  if (xss.length <= 10000) {
    // This method is faster, but it crashes on big arrays.
    // So we use it when can and fallback to simple variant otherwise.
    return Array.prototype.concat.apply([], xss);
  }

  var result = [];

  for (var i = 0, l = xss.length; i < l; i++) {
    var xs = xss[i];

    for (var j = 0, m = xs.length; j < m; j++) {
      result.push(xs[j]);
    }
  }

  return result;
};

exports.filter = function (f) {
  return function (xs) {
    return xs.filter(f);
  };
};

exports.partition = function (f) {
  return function (xs) {
    var yes = [];
    var no = [];

    for (var i = 0; i < xs.length; i++) {
      var x = xs[i];
      if (f(x)) yes.push(x);else no.push(x);
    }

    return {
      yes: yes,
      no: no
    };
  };
};

exports.scanl = function (f) {
  return function (b) {
    return function (xs) {
      var len = xs.length;
      var acc = b;
      var out = new Array(len);

      for (var i = 0; i < len; i++) {
        acc = f(acc)(xs[i]);
        out[i] = acc;
      }

      return out;
    };
  };
};

exports.scanr = function (f) {
  return function (b) {
    return function (xs) {
      var len = xs.length;
      var acc = b;
      var out = new Array(len);

      for (var i = len - 1; i >= 0; i--) {
        acc = f(xs[i])(acc);
        out[i] = acc;
      }

      return out;
    };
  };
}; //------------------------------------------------------------------------------
// Sorting ---------------------------------------------------------------------
//------------------------------------------------------------------------------


exports.sortByImpl = function () {
  function mergeFromTo(compare, fromOrdering, xs1, xs2, from, to) {
    var mid;
    var i;
    var j;
    var k;
    var x;
    var y;
    var c;
    mid = from + (to - from >> 1);
    if (mid - from > 1) mergeFromTo(compare, fromOrdering, xs2, xs1, from, mid);
    if (to - mid > 1) mergeFromTo(compare, fromOrdering, xs2, xs1, mid, to);
    i = from;
    j = mid;
    k = from;

    while (i < mid && j < to) {
      x = xs2[i];
      y = xs2[j];
      c = fromOrdering(compare(x)(y));

      if (c > 0) {
        xs1[k++] = y;
        ++j;
      } else {
        xs1[k++] = x;
        ++i;
      }
    }

    while (i < mid) {
      xs1[k++] = xs2[i++];
    }

    while (j < to) {
      xs1[k++] = xs2[j++];
    }
  }

  return function (compare) {
    return function (fromOrdering) {
      return function (xs) {
        var out;
        if (xs.length < 2) return xs;
        out = xs.slice(0);
        mergeFromTo(compare, fromOrdering, out, xs.slice(0), 0, xs.length);
        return out;
      };
    };
  };
}(); //------------------------------------------------------------------------------
// Subarrays -------------------------------------------------------------------
//------------------------------------------------------------------------------


exports.slice = function (s) {
  return function (e) {
    return function (l) {
      return l.slice(s, e);
    };
  };
}; //------------------------------------------------------------------------------
// Zipping ---------------------------------------------------------------------
//------------------------------------------------------------------------------


exports.zipWith = function (f) {
  return function (xs) {
    return function (ys) {
      var l = xs.length < ys.length ? xs.length : ys.length;
      var result = new Array(l);

      for (var i = 0; i < l; i++) {
        result[i] = f(xs[i])(ys[i]);
      }

      return result;
    };
  };
}; //------------------------------------------------------------------------------
// Folding ---------------------------------------------------------------------
//------------------------------------------------------------------------------


exports.any = function (p) {
  return function (xs) {
    var len = xs.length;

    for (var i = 0; i < len; i++) {
      if (p(xs[i])) return true;
    }

    return false;
  };
};

exports.all = function (p) {
  return function (xs) {
    var len = xs.length;

    for (var i = 0; i < len; i++) {
      if (!p(xs[i])) return false;
    }

    return true;
  };
}; //------------------------------------------------------------------------------
// Partial ---------------------------------------------------------------------
//------------------------------------------------------------------------------


exports.unsafeIndexImpl = function (xs) {
  return function (n) {
    return xs[n];
  };
};
},{}],"output/Data.Array.ST/foreign.js":[function(require,module,exports) {
"use strict";

exports["new"] = function () {
  return [];
};

exports.peekImpl = function (just) {
  return function (nothing) {
    return function (i) {
      return function (xs) {
        return function () {
          return i >= 0 && i < xs.length ? just(xs[i]) : nothing;
        };
      };
    };
  };
};

exports.poke = function (i) {
  return function (a) {
    return function (xs) {
      return function () {
        var ret = i >= 0 && i < xs.length;
        if (ret) xs[i] = a;
        return ret;
      };
    };
  };
};

exports.popImpl = function (just) {
  return function (nothing) {
    return function (xs) {
      return function () {
        return xs.length > 0 ? just(xs.pop()) : nothing;
      };
    };
  };
};

exports.pushAll = function (as) {
  return function (xs) {
    return function () {
      return xs.push.apply(xs, as);
    };
  };
};

exports.shiftImpl = function (just) {
  return function (nothing) {
    return function (xs) {
      return function () {
        return xs.length > 0 ? just(xs.shift()) : nothing;
      };
    };
  };
};

exports.unshiftAll = function (as) {
  return function (xs) {
    return function () {
      return xs.unshift.apply(xs, as);
    };
  };
};

exports.splice = function (i) {
  return function (howMany) {
    return function (bs) {
      return function (xs) {
        return function () {
          return xs.splice.apply(xs, [i, howMany].concat(bs));
        };
      };
    };
  };
};

exports.unsafeFreeze = function (xs) {
  return function () {
    return xs;
  };
};

exports.unsafeThaw = function (xs) {
  return function () {
    return xs;
  };
};

function copyImpl(xs) {
  return function () {
    return xs.slice();
  };
}

exports.freeze = copyImpl;
exports.thaw = copyImpl;

exports.sortByImpl = function () {
  function mergeFromTo(compare, fromOrdering, xs1, xs2, from, to) {
    var mid;
    var i;
    var j;
    var k;
    var x;
    var y;
    var c;
    mid = from + (to - from >> 1);
    if (mid - from > 1) mergeFromTo(compare, fromOrdering, xs2, xs1, from, mid);
    if (to - mid > 1) mergeFromTo(compare, fromOrdering, xs2, xs1, mid, to);
    i = from;
    j = mid;
    k = from;

    while (i < mid && j < to) {
      x = xs2[i];
      y = xs2[j];
      c = fromOrdering(compare(x)(y));

      if (c > 0) {
        xs1[k++] = y;
        ++j;
      } else {
        xs1[k++] = x;
        ++i;
      }
    }

    while (i < mid) {
      xs1[k++] = xs2[i++];
    }

    while (j < to) {
      xs1[k++] = xs2[j++];
    }
  }

  return function (compare) {
    return function (fromOrdering) {
      return function (xs) {
        return function () {
          if (xs.length < 2) return xs;
          mergeFromTo(compare, fromOrdering, xs, xs.slice(0), 0, xs.length);
          return xs;
        };
      };
    };
  };
}();

exports.toAssocArray = function (xs) {
  return function () {
    var n = xs.length;
    var as = new Array(n);

    for (var i = 0; i < n; i++) {
      as[i] = {
        value: xs[i],
        index: i
      };
    }

    return as;
  };
};
},{}],"output/Data.Array.ST/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad_ST_Internal = require("../Control.Monad.ST.Internal/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var withArray = function withArray(f) {
  return function (xs) {
    return function __do() {
      var result = $foreign.thaw(xs)();
      f(result)();
      return $foreign.unsafeFreeze(result)();
    };
  };
};

var unshift = function unshift(a) {
  return $foreign.unshiftAll([a]);
};

var sortBy = function sortBy(comp) {
  return $foreign.sortByImpl(comp)(function (v) {
    if (v instanceof Data_Ordering.GT) {
      return 1;
    }

    ;

    if (v instanceof Data_Ordering.EQ) {
      return 0;
    }

    ;

    if (v instanceof Data_Ordering.LT) {
      return -1 | 0;
    }

    ;
    throw new Error("Failed pattern match at Data.Array.ST (line 113, column 31 - line 116, column 11): " + [v.constructor.name]);
  });
};

var sortWith = function sortWith(dictOrd) {
  return function (f) {
    return sortBy(Data_Ord.comparing(dictOrd)(f));
  };
};

var sort = function sort(dictOrd) {
  return sortBy(Data_Ord.compare(dictOrd));
};

var shift = $foreign.shiftImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);

var run = function run(st) {
  return Control_Bind.bind(Control_Monad_ST_Internal.bindST)(st)($foreign.unsafeFreeze)();
};

var push = function push(a) {
  return $foreign.pushAll([a]);
};

var pop = $foreign.popImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var peek = $foreign.peekImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);

var modify = function modify(i) {
  return function (f) {
    return function (xs) {
      return function __do() {
        var entry = peek(i)(xs)();

        if (entry instanceof Data_Maybe.Just) {
          return $foreign.poke(i)(f(entry.value0))(xs)();
        }

        ;

        if (entry instanceof Data_Maybe.Nothing) {
          return false;
        }

        ;
        throw new Error("Failed pattern match at Data.Array.ST (line 198, column 3 - line 200, column 26): " + [entry.constructor.name]);
      };
    };
  };
};

var empty = function empty() {
  return $foreign["new"];
};

module.exports = {
  run: run,
  withArray: withArray,
  empty: empty,
  peek: peek,
  modify: modify,
  pop: pop,
  push: push,
  shift: shift,
  unshift: unshift,
  sort: sort,
  sortBy: sortBy,
  sortWith: sortWith,
  "new": $foreign["new"],
  poke: $foreign.poke,
  pushAll: $foreign.pushAll,
  unshiftAll: $foreign.unshiftAll,
  splice: $foreign.splice,
  freeze: $foreign.freeze,
  thaw: $foreign.thaw,
  unsafeFreeze: $foreign.unsafeFreeze,
  unsafeThaw: $foreign.unsafeThaw,
  toAssocArray: $foreign.toAssocArray
};
},{"./foreign.js":"output/Data.Array.ST/foreign.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Monad.ST.Internal/index.js":"output/Control.Monad.ST.Internal/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js"}],"output/Data.Array.ST.Iterator/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Control_Monad_ST_Internal = require("../Control.Monad.ST.Internal/index.js");

var Data_Array_ST = require("../Data.Array.ST/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Iterator = function () {
  function Iterator(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  Iterator.create = function (value0) {
    return function (value1) {
      return new Iterator(value0, value1);
    };
  };

  return Iterator;
}();

var peek = function peek(v) {
  return function __do() {
    var i = Control_Monad_ST_Internal.read(v.value1)();
    return v.value0(i);
  };
};

var next = function next(v) {
  return function __do() {
    var i = Control_Monad_ST_Internal.read(v.value1)();
    Control_Monad_ST_Internal.modify(function (v1) {
      return v1 + 1 | 0;
    })(v.value1)();
    return v.value0(i);
  };
};

var pushWhile = function pushWhile(p) {
  return function (iter) {
    return function (array) {
      return function __do() {
        var $$break = Control_Monad_ST_Internal["new"](false)();

        while (Data_Functor.map(Control_Monad_ST_Internal.functorST)(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean))(Control_Monad_ST_Internal.read($$break))()) {
          (function __do() {
            var mx = peek(iter)();

            if (mx instanceof Data_Maybe.Just && p(mx.value0)) {
              Data_Array_ST.push(mx.value0)(array)();
              return Data_Functor["void"](Control_Monad_ST_Internal.functorST)(next(iter))();
            }

            ;
            return Data_Functor["void"](Control_Monad_ST_Internal.functorST)(Control_Monad_ST_Internal.write(true)($$break))();
          })();
        }

        ;
        return {};
      };
    };
  };
};

var pushAll = pushWhile(Data_Function["const"](true));

var iterator = function iterator(f) {
  return Data_Functor.map(Control_Monad_ST_Internal.functorST)(Iterator.create(f))(Control_Monad_ST_Internal["new"](0));
};

var iterate = function iterate(iter) {
  return function (f) {
    return function __do() {
      var $$break = Control_Monad_ST_Internal["new"](false)();

      while (Data_Functor.map(Control_Monad_ST_Internal.functorST)(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean))(Control_Monad_ST_Internal.read($$break))()) {
        (function __do() {
          var mx = next(iter)();

          if (mx instanceof Data_Maybe.Just) {
            return f(mx.value0)();
          }

          ;

          if (mx instanceof Data_Maybe.Nothing) {
            return Data_Functor["void"](Control_Monad_ST_Internal.functorST)(Control_Monad_ST_Internal.write(true)($$break))();
          }

          ;
          throw new Error("Failed pattern match at Data.Array.ST.Iterator (line 42, column 5 - line 44, column 47): " + [mx.constructor.name]);
        })();
      }

      ;
      return {};
    };
  };
};

var exhausted = function () {
  var $13 = Data_Functor.map(Control_Monad_ST_Internal.functorST)(Data_Maybe.isNothing);
  return function ($14) {
    return $13(peek($14));
  };
}();

module.exports = {
  iterator: iterator,
  iterate: iterate,
  next: next,
  peek: peek,
  exhausted: exhausted,
  pushWhile: pushWhile,
  pushAll: pushAll
};
},{"../Control.Monad.ST.Internal/index.js":"output/Control.Monad.ST.Internal/index.js","../Data.Array.ST/index.js":"output/Data.Array.ST/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.HeytingAlgebra/index.js":"output/Data.HeytingAlgebra/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js"}],"output/Data.Foldable/foreign.js":[function(require,module,exports) {
"use strict";

exports.foldrArray = function (f) {
  return function (init) {
    return function (xs) {
      var acc = init;
      var len = xs.length;

      for (var i = len - 1; i >= 0; i--) {
        acc = f(xs[i])(acc);
      }

      return acc;
    };
  };
};

exports.foldlArray = function (f) {
  return function (init) {
    return function (xs) {
      var acc = init;
      var len = xs.length;

      for (var i = 0; i < len; i++) {
        acc = f(acc)(xs[i]);
      }

      return acc;
    };
  };
};
},{}],"output/Control.Plus/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var plusArray = {
  empty: [],
  Alt0: function Alt0() {
    return Control_Alt.altArray;
  }
};

var empty = function empty(dict) {
  return dict.empty;
};

module.exports = {
  empty: empty,
  plusArray: plusArray,
  alt: Control_Alt.alt,
  map: Data_Functor.map,
  "void": Data_Functor["void"]
};
},{"../Control.Alt/index.js":"output/Control.Alt/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js"}],"output/Control.Extend/foreign.js":[function(require,module,exports) {
"use strict";

exports.arrayExtend = function (f) {
  return function (xs) {
    return xs.map(function (_, i, xs) {
      return f(xs.slice(i));
    });
  };
};
},{}],"output/Control.Extend/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Control_Category = require("../Control.Category/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var extendFn = function extendFn(dictSemigroup) {
  return {
    extend: function extend(f) {
      return function (g) {
        return function (w) {
          return f(function (w$prime) {
            return g(Data_Semigroup.append(dictSemigroup)(w)(w$prime));
          });
        };
      };
    },
    Functor0: function Functor0() {
      return Data_Functor.functorFn;
    }
  };
};

var extendArray = {
  extend: $foreign.arrayExtend,
  Functor0: function Functor0() {
    return Data_Functor.functorArray;
  }
};

var extend = function extend(dict) {
  return dict.extend;
};

var extendFlipped = function extendFlipped(dictExtend) {
  return function (w) {
    return function (f) {
      return extend(dictExtend)(f)(w);
    };
  };
};

var duplicate = function duplicate(dictExtend) {
  return extend(dictExtend)(Control_Category.identity(Control_Category.categoryFn));
};

var composeCoKleisliFlipped = function composeCoKleisliFlipped(dictExtend) {
  return function (f) {
    return function (g) {
      return function (w) {
        return f(extend(dictExtend)(g)(w));
      };
    };
  };
};

var composeCoKleisli = function composeCoKleisli(dictExtend) {
  return function (f) {
    return function (g) {
      return function (w) {
        return g(extend(dictExtend)(f)(w));
      };
    };
  };
};

module.exports = {
  extend: extend,
  extendFlipped: extendFlipped,
  composeCoKleisli: composeCoKleisli,
  composeCoKleisliFlipped: composeCoKleisliFlipped,
  duplicate: duplicate,
  extendFn: extendFn,
  extendArray: extendArray,
  map: Data_Functor.map,
  "void": Data_Functor["void"]
};
},{"./foreign.js":"output/Control.Extend/foreign.js","../Control.Category/index.js":"output/Control.Category/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js"}],"output/Control.Comonad/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Control_Extend = require("../Control.Extend/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var extract = function extract(dict) {
  return dict.extract;
};

module.exports = {
  extract: extract,
  duplicate: Control_Extend.duplicate,
  extend: Control_Extend.extend,
  map: Data_Functor.map,
  "void": Data_Functor["void"]
};
},{"../Control.Extend/index.js":"output/Control.Extend/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js"}],"output/Data.Bifunctor/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Control_Category = require("../Control.Category/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var bimap = function bimap(dict) {
  return dict.bimap;
};

var lmap = function lmap(dictBifunctor) {
  return function (f) {
    return bimap(dictBifunctor)(f)(Control_Category.identity(Control_Category.categoryFn));
  };
};

var rmap = function rmap(dictBifunctor) {
  return bimap(dictBifunctor)(Control_Category.identity(Control_Category.categoryFn));
};

var bifunctorTuple = {
  bimap: function bimap(f) {
    return function (g) {
      return function (v) {
        return new Data_Tuple.Tuple(f(v.value0), g(v.value1));
      };
    };
  }
};
var bifunctorEither = {
  bimap: function bimap(v) {
    return function (v1) {
      return function (v2) {
        if (v2 instanceof Data_Either.Left) {
          return new Data_Either.Left(v(v2.value0));
        }

        ;

        if (v2 instanceof Data_Either.Right) {
          return new Data_Either.Right(v1(v2.value0));
        }

        ;
        throw new Error("Failed pattern match at Data.Bifunctor (line 32, column 1 - line 34, column 36): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
      };
    };
  }
};
var bifunctorConst = {
  bimap: function bimap(f) {
    return function (v) {
      return function (v1) {
        return f(v1);
      };
    };
  }
};
module.exports = {
  bimap: bimap,
  lmap: lmap,
  rmap: rmap,
  bifunctorEither: bifunctorEither,
  bifunctorTuple: bifunctorTuple,
  bifunctorConst: bifunctorConst
};
},{"../Control.Category/index.js":"output/Control.Category/index.js","../Data.Either/index.js":"output/Data.Either/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js"}],"output/Data.Functor.Coproduct/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Control_Comonad = require("../Control.Comonad/index.js");

var Control_Extend = require("../Control.Extend/index.js");

var Data_Bifunctor = require("../Data.Bifunctor/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Show = require("../Data.Show/index.js");

var Coproduct = function Coproduct(x) {
  return x;
};

var showCoproduct = function showCoproduct(dictShow) {
  return function (dictShow1) {
    return {
      show: function show(v) {
        if (v instanceof Data_Either.Left) {
          return "(left " + (Data_Show.show(dictShow)(v.value0) + ")");
        }

        ;

        if (v instanceof Data_Either.Right) {
          return "(right " + (Data_Show.show(dictShow1)(v.value0) + ")");
        }

        ;
        throw new Error("Failed pattern match at Data.Functor.Coproduct (line 63, column 1 - line 65, column 60): " + [v.constructor.name]);
      }
    };
  };
};

var right = function right(ga) {
  return new Data_Either.Right(ga);
};

var newtypeCoproduct = {
  Coercible0: function Coercible0() {
    return undefined;
  }
};

var left = function left(fa) {
  return new Data_Either.Left(fa);
};

var functorCoproduct = function functorCoproduct(dictFunctor) {
  return function (dictFunctor1) {
    return {
      map: function map(f) {
        return function (v) {
          return Data_Bifunctor.bimap(Data_Bifunctor.bifunctorEither)(Data_Functor.map(dictFunctor)(f))(Data_Functor.map(dictFunctor1)(f))(v);
        };
      }
    };
  };
};

var eq1Coproduct = function eq1Coproduct(dictEq1) {
  return function (dictEq11) {
    return {
      eq1: function eq1(dictEq) {
        return function (v) {
          return function (v1) {
            if (v instanceof Data_Either.Left && v1 instanceof Data_Either.Left) {
              return Data_Eq.eq1(dictEq1)(dictEq)(v.value0)(v1.value0);
            }

            ;

            if (v instanceof Data_Either.Right && v1 instanceof Data_Either.Right) {
              return Data_Eq.eq1(dictEq11)(dictEq)(v.value0)(v1.value0);
            }

            ;
            return false;
          };
        };
      }
    };
  };
};

var eqCoproduct = function eqCoproduct(dictEq1) {
  return function (dictEq11) {
    return function (dictEq) {
      return {
        eq: Data_Eq.eq1(eq1Coproduct(dictEq1)(dictEq11))(dictEq)
      };
    };
  };
};

var ord1Coproduct = function ord1Coproduct(dictOrd1) {
  return function (dictOrd11) {
    return {
      compare1: function compare1(dictOrd) {
        return function (v) {
          return function (v1) {
            if (v instanceof Data_Either.Left && v1 instanceof Data_Either.Left) {
              return Data_Ord.compare1(dictOrd1)(dictOrd)(v.value0)(v1.value0);
            }

            ;

            if (v instanceof Data_Either.Left) {
              return Data_Ordering.LT.value;
            }

            ;

            if (v1 instanceof Data_Either.Left) {
              return Data_Ordering.GT.value;
            }

            ;

            if (v instanceof Data_Either.Right && v1 instanceof Data_Either.Right) {
              return Data_Ord.compare1(dictOrd11)(dictOrd)(v.value0)(v1.value0);
            }

            ;
            throw new Error("Failed pattern match at Data.Functor.Coproduct (line 57, column 5 - line 61, column 43): " + [v.constructor.name, v1.constructor.name]);
          };
        };
      },
      Eq10: function Eq10() {
        return eq1Coproduct(dictOrd1.Eq10())(dictOrd11.Eq10());
      }
    };
  };
};

var ordCoproduct = function ordCoproduct(dictOrd1) {
  return function (dictOrd11) {
    return function (dictOrd) {
      return {
        compare: Data_Ord.compare1(ord1Coproduct(dictOrd1)(dictOrd11))(dictOrd),
        Eq0: function Eq0() {
          return eqCoproduct(dictOrd1.Eq10())(dictOrd11.Eq10())(dictOrd.Eq0());
        }
      };
    };
  };
};

var coproduct = function coproduct(v) {
  return function (v1) {
    return function (v2) {
      if (v2 instanceof Data_Either.Left) {
        return v(v2.value0);
      }

      ;

      if (v2 instanceof Data_Either.Right) {
        return v1(v2.value0);
      }

      ;
      throw new Error("Failed pattern match at Data.Functor.Coproduct (line 27, column 1 - line 27, column 78): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
    };
  };
};

var extendCoproduct = function extendCoproduct(dictExtend) {
  return function (dictExtend1) {
    return {
      extend: function extend(f) {
        var $61 = coproduct(function () {
          var $63 = Control_Extend.extend(dictExtend)(function ($65) {
            return f(Coproduct(Data_Either.Left.create($65)));
          });
          return function ($64) {
            return Data_Either.Left.create($63($64));
          };
        }())(function () {
          var $66 = Control_Extend.extend(dictExtend1)(function ($68) {
            return f(Coproduct(Data_Either.Right.create($68)));
          });
          return function ($67) {
            return Data_Either.Right.create($66($67));
          };
        }());
        return function ($62) {
          return Coproduct($61($62));
        };
      },
      Functor0: function Functor0() {
        return functorCoproduct(dictExtend.Functor0())(dictExtend1.Functor0());
      }
    };
  };
};

var comonadCoproduct = function comonadCoproduct(dictComonad) {
  return function (dictComonad1) {
    return {
      extract: coproduct(Control_Comonad.extract(dictComonad))(Control_Comonad.extract(dictComonad1)),
      Extend0: function Extend0() {
        return extendCoproduct(dictComonad.Extend0())(dictComonad1.Extend0());
      }
    };
  };
};

var bihoistCoproduct = function bihoistCoproduct(natF) {
  return function (natG) {
    return function (v) {
      return Data_Bifunctor.bimap(Data_Bifunctor.bifunctorEither)(natF)(natG)(v);
    };
  };
};

module.exports = {
  Coproduct: Coproduct,
  left: left,
  right: right,
  coproduct: coproduct,
  bihoistCoproduct: bihoistCoproduct,
  newtypeCoproduct: newtypeCoproduct,
  eqCoproduct: eqCoproduct,
  eq1Coproduct: eq1Coproduct,
  ordCoproduct: ordCoproduct,
  ord1Coproduct: ord1Coproduct,
  showCoproduct: showCoproduct,
  functorCoproduct: functorCoproduct,
  extendCoproduct: extendCoproduct,
  comonadCoproduct: comonadCoproduct
};
},{"../Control.Comonad/index.js":"output/Control.Comonad/index.js","../Control.Extend/index.js":"output/Control.Extend/index.js","../Data.Bifunctor/index.js":"output/Data.Bifunctor/index.js","../Data.Either/index.js":"output/Data.Either/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Data.Show/index.js":"output/Data.Show/index.js"}],"output/Data.Maybe.First/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var First = function First(x) {
  return x;
};

var showFirst = function showFirst(dictShow) {
  return {
    show: function show(v) {
      return "First (" + (Data_Show.show(Data_Maybe.showMaybe(dictShow))(v) + ")");
    }
  };
};

var semigroupFirst = {
  append: function append(v) {
    return function (v1) {
      if (v instanceof Data_Maybe.Just) {
        return v;
      }

      ;
      return v1;
    };
  }
};

var ordFirst = function ordFirst(dictOrd) {
  return Data_Maybe.ordMaybe(dictOrd);
};

var ord1First = Data_Maybe.ord1Maybe;
var newtypeFirst = {
  Coercible0: function Coercible0() {
    return undefined;
  }
};
var monoidFirst = {
  mempty: Data_Maybe.Nothing.value,
  Semigroup0: function Semigroup0() {
    return semigroupFirst;
  }
};
var monadFirst = Data_Maybe.monadMaybe;
var invariantFirst = Data_Maybe.invariantMaybe;
var functorFirst = Data_Maybe.functorMaybe;
var extendFirst = Data_Maybe.extendMaybe;

var eqFirst = function eqFirst(dictEq) {
  return Data_Maybe.eqMaybe(dictEq);
};

var eq1First = Data_Maybe.eq1Maybe;

var boundedFirst = function boundedFirst(dictBounded) {
  return Data_Maybe.boundedMaybe(dictBounded);
};

var bindFirst = Data_Maybe.bindMaybe;
var applyFirst = Data_Maybe.applyMaybe;
var applicativeFirst = Data_Maybe.applicativeMaybe;
var altFirst = {
  alt: Data_Semigroup.append(semigroupFirst),
  Functor0: function Functor0() {
    return functorFirst;
  }
};
var plusFirst = {
  empty: Data_Monoid.mempty(monoidFirst),
  Alt0: function Alt0() {
    return altFirst;
  }
};
var alternativeFirst = {
  Applicative0: function Applicative0() {
    return applicativeFirst;
  },
  Plus1: function Plus1() {
    return plusFirst;
  }
};
var monadZeroFirst = {
  Monad0: function Monad0() {
    return monadFirst;
  },
  Alternative1: function Alternative1() {
    return alternativeFirst;
  },
  MonadZeroIsDeprecated2: function MonadZeroIsDeprecated2() {
    return undefined;
  }
};
module.exports = {
  First: First,
  newtypeFirst: newtypeFirst,
  eqFirst: eqFirst,
  eq1First: eq1First,
  ordFirst: ordFirst,
  ord1First: ord1First,
  boundedFirst: boundedFirst,
  functorFirst: functorFirst,
  invariantFirst: invariantFirst,
  applyFirst: applyFirst,
  applicativeFirst: applicativeFirst,
  bindFirst: bindFirst,
  monadFirst: monadFirst,
  extendFirst: extendFirst,
  showFirst: showFirst,
  semigroupFirst: semigroupFirst,
  monoidFirst: monoidFirst,
  altFirst: altFirst,
  plusFirst: plusFirst,
  alternativeFirst: alternativeFirst,
  monadZeroFirst: monadZeroFirst
};
},{"../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Monoid/index.js":"output/Data.Monoid/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Show/index.js":"output/Data.Show/index.js"}],"output/Data.Monoid.Conj/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Data_Eq = require("../Data.Eq/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Show = require("../Data.Show/index.js");

var Conj = function Conj(x) {
  return x;
};

var showConj = function showConj(dictShow) {
  return {
    show: function show(v) {
      return "(Conj " + (Data_Show.show(dictShow)(v) + ")");
    }
  };
};

var semiringConj = function semiringConj(dictHeytingAlgebra) {
  return {
    zero: Data_HeytingAlgebra.tt(dictHeytingAlgebra),
    one: Data_HeytingAlgebra.ff(dictHeytingAlgebra),
    add: function add(v) {
      return function (v1) {
        return Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v)(v1);
      };
    },
    mul: function mul(v) {
      return function (v1) {
        return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
      };
    }
  };
};

var semigroupConj = function semigroupConj(dictHeytingAlgebra) {
  return {
    append: function append(v) {
      return function (v1) {
        return Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v)(v1);
      };
    }
  };
};

var ordConj = function ordConj(dictOrd) {
  return dictOrd;
};

var monoidConj = function monoidConj(dictHeytingAlgebra) {
  return {
    mempty: Data_HeytingAlgebra.tt(dictHeytingAlgebra),
    Semigroup0: function Semigroup0() {
      return semigroupConj(dictHeytingAlgebra);
    }
  };
};

var functorConj = {
  map: function map(f) {
    return function (m) {
      return f(m);
    };
  }
};

var eqConj = function eqConj(dictEq) {
  return dictEq;
};

var eq1Conj = {
  eq1: function eq1(dictEq) {
    return Data_Eq.eq(eqConj(dictEq));
  }
};
var ord1Conj = {
  compare1: function compare1(dictOrd) {
    return Data_Ord.compare(ordConj(dictOrd));
  },
  Eq10: function Eq10() {
    return eq1Conj;
  }
};

var boundedConj = function boundedConj(dictBounded) {
  return dictBounded;
};

var applyConj = {
  apply: function apply(v) {
    return function (v1) {
      return v(v1);
    };
  },
  Functor0: function Functor0() {
    return functorConj;
  }
};
var bindConj = {
  bind: function bind(v) {
    return function (f) {
      return f(v);
    };
  },
  Apply0: function Apply0() {
    return applyConj;
  }
};
var applicativeConj = {
  pure: Conj,
  Apply0: function Apply0() {
    return applyConj;
  }
};
var monadConj = {
  Applicative0: function Applicative0() {
    return applicativeConj;
  },
  Bind1: function Bind1() {
    return bindConj;
  }
};
module.exports = {
  Conj: Conj,
  eqConj: eqConj,
  eq1Conj: eq1Conj,
  ordConj: ordConj,
  ord1Conj: ord1Conj,
  boundedConj: boundedConj,
  showConj: showConj,
  functorConj: functorConj,
  applyConj: applyConj,
  applicativeConj: applicativeConj,
  bindConj: bindConj,
  monadConj: monadConj,
  semigroupConj: semigroupConj,
  monoidConj: monoidConj,
  semiringConj: semiringConj
};
},{"../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.HeytingAlgebra/index.js":"output/Data.HeytingAlgebra/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Show/index.js":"output/Data.Show/index.js"}],"output/Data.Monoid.Disj/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Data_Eq = require("../Data.Eq/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Show = require("../Data.Show/index.js");

var Disj = function Disj(x) {
  return x;
};

var showDisj = function showDisj(dictShow) {
  return {
    show: function show(v) {
      return "(Disj " + (Data_Show.show(dictShow)(v) + ")");
    }
  };
};

var semiringDisj = function semiringDisj(dictHeytingAlgebra) {
  return {
    zero: Data_HeytingAlgebra.ff(dictHeytingAlgebra),
    one: Data_HeytingAlgebra.tt(dictHeytingAlgebra),
    add: function add(v) {
      return function (v1) {
        return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
      };
    },
    mul: function mul(v) {
      return function (v1) {
        return Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v)(v1);
      };
    }
  };
};

var semigroupDisj = function semigroupDisj(dictHeytingAlgebra) {
  return {
    append: function append(v) {
      return function (v1) {
        return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
      };
    }
  };
};

var ordDisj = function ordDisj(dictOrd) {
  return dictOrd;
};

var monoidDisj = function monoidDisj(dictHeytingAlgebra) {
  return {
    mempty: Data_HeytingAlgebra.ff(dictHeytingAlgebra),
    Semigroup0: function Semigroup0() {
      return semigroupDisj(dictHeytingAlgebra);
    }
  };
};

var functorDisj = {
  map: function map(f) {
    return function (m) {
      return f(m);
    };
  }
};

var eqDisj = function eqDisj(dictEq) {
  return dictEq;
};

var eq1Disj = {
  eq1: function eq1(dictEq) {
    return Data_Eq.eq(eqDisj(dictEq));
  }
};
var ord1Disj = {
  compare1: function compare1(dictOrd) {
    return Data_Ord.compare(ordDisj(dictOrd));
  },
  Eq10: function Eq10() {
    return eq1Disj;
  }
};

var boundedDisj = function boundedDisj(dictBounded) {
  return dictBounded;
};

var applyDisj = {
  apply: function apply(v) {
    return function (v1) {
      return v(v1);
    };
  },
  Functor0: function Functor0() {
    return functorDisj;
  }
};
var bindDisj = {
  bind: function bind(v) {
    return function (f) {
      return f(v);
    };
  },
  Apply0: function Apply0() {
    return applyDisj;
  }
};
var applicativeDisj = {
  pure: Disj,
  Apply0: function Apply0() {
    return applyDisj;
  }
};
var monadDisj = {
  Applicative0: function Applicative0() {
    return applicativeDisj;
  },
  Bind1: function Bind1() {
    return bindDisj;
  }
};
module.exports = {
  Disj: Disj,
  eqDisj: eqDisj,
  eq1Disj: eq1Disj,
  ordDisj: ordDisj,
  ord1Disj: ord1Disj,
  boundedDisj: boundedDisj,
  showDisj: showDisj,
  functorDisj: functorDisj,
  applyDisj: applyDisj,
  applicativeDisj: applicativeDisj,
  bindDisj: bindDisj,
  monadDisj: monadDisj,
  semigroupDisj: semigroupDisj,
  monoidDisj: monoidDisj,
  semiringDisj: semiringDisj
};
},{"../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.HeytingAlgebra/index.js":"output/Data.HeytingAlgebra/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Show/index.js":"output/Data.Show/index.js"}],"output/Data.Monoid.Dual/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Data_Eq = require("../Data.Eq/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Dual = function Dual(x) {
  return x;
};

var showDual = function showDual(dictShow) {
  return {
    show: function show(v) {
      return "(Dual " + (Data_Show.show(dictShow)(v) + ")");
    }
  };
};

var semigroupDual = function semigroupDual(dictSemigroup) {
  return {
    append: function append(v) {
      return function (v1) {
        return Data_Semigroup.append(dictSemigroup)(v1)(v);
      };
    }
  };
};

var ordDual = function ordDual(dictOrd) {
  return dictOrd;
};

var monoidDual = function monoidDual(dictMonoid) {
  return {
    mempty: Data_Monoid.mempty(dictMonoid),
    Semigroup0: function Semigroup0() {
      return semigroupDual(dictMonoid.Semigroup0());
    }
  };
};

var functorDual = {
  map: function map(f) {
    return function (m) {
      return f(m);
    };
  }
};

var eqDual = function eqDual(dictEq) {
  return dictEq;
};

var eq1Dual = {
  eq1: function eq1(dictEq) {
    return Data_Eq.eq(eqDual(dictEq));
  }
};
var ord1Dual = {
  compare1: function compare1(dictOrd) {
    return Data_Ord.compare(ordDual(dictOrd));
  },
  Eq10: function Eq10() {
    return eq1Dual;
  }
};

var boundedDual = function boundedDual(dictBounded) {
  return dictBounded;
};

var applyDual = {
  apply: function apply(v) {
    return function (v1) {
      return v(v1);
    };
  },
  Functor0: function Functor0() {
    return functorDual;
  }
};
var bindDual = {
  bind: function bind(v) {
    return function (f) {
      return f(v);
    };
  },
  Apply0: function Apply0() {
    return applyDual;
  }
};
var applicativeDual = {
  pure: Dual,
  Apply0: function Apply0() {
    return applyDual;
  }
};
var monadDual = {
  Applicative0: function Applicative0() {
    return applicativeDual;
  },
  Bind1: function Bind1() {
    return bindDual;
  }
};
module.exports = {
  Dual: Dual,
  eqDual: eqDual,
  eq1Dual: eq1Dual,
  ordDual: ordDual,
  ord1Dual: ord1Dual,
  boundedDual: boundedDual,
  showDual: showDual,
  functorDual: functorDual,
  applyDual: applyDual,
  applicativeDual: applicativeDual,
  bindDual: bindDual,
  monadDual: monadDual,
  semigroupDual: semigroupDual,
  monoidDual: monoidDual
};
},{"../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Monoid/index.js":"output/Data.Monoid/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Show/index.js":"output/Data.Show/index.js"}],"output/Data.Monoid.Endo/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Control_Category = require("../Control.Category/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Show = require("../Data.Show/index.js");

var Endo = function Endo(x) {
  return x;
};

var showEndo = function showEndo(dictShow) {
  return {
    show: function show(v) {
      return "(Endo " + (Data_Show.show(dictShow)(v) + ")");
    }
  };
};

var semigroupEndo = function semigroupEndo(dictSemigroupoid) {
  return {
    append: function append(v) {
      return function (v1) {
        return Control_Semigroupoid.compose(dictSemigroupoid)(v)(v1);
      };
    }
  };
};

var ordEndo = function ordEndo(dictOrd) {
  return dictOrd;
};

var monoidEndo = function monoidEndo(dictCategory) {
  return {
    mempty: Control_Category.identity(dictCategory),
    Semigroup0: function Semigroup0() {
      return semigroupEndo(dictCategory.Semigroupoid0());
    }
  };
};

var eqEndo = function eqEndo(dictEq) {
  return dictEq;
};

var boundedEndo = function boundedEndo(dictBounded) {
  return dictBounded;
};

module.exports = {
  Endo: Endo,
  eqEndo: eqEndo,
  ordEndo: ordEndo,
  boundedEndo: boundedEndo,
  showEndo: showEndo,
  semigroupEndo: semigroupEndo,
  monoidEndo: monoidEndo
};
},{"../Control.Category/index.js":"output/Control.Category/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Show/index.js":"output/Data.Show/index.js"}],"output/Data.Foldable/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Control_Alt = require("../Control.Alt/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor_Coproduct = require("../Data.Functor.Coproduct/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Maybe_First = require("../Data.Maybe.First/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Monoid_Conj = require("../Data.Monoid.Conj/index.js");

var Data_Monoid_Disj = require("../Data.Monoid.Disj/index.js");

var Data_Monoid_Dual = require("../Data.Monoid.Dual/index.js");

var Data_Monoid_Endo = require("../Data.Monoid.Endo/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var _foldr = function foldr(dict) {
  return dict.foldr;
};

var indexr = function indexr(dictFoldable) {
  return function (idx) {
    var go = function go(a) {
      return function (cursor) {
        if (cursor.elem instanceof Data_Maybe.Just) {
          return cursor;
        }

        ;
        var $153 = cursor.pos === idx;

        if ($153) {
          return {
            elem: new Data_Maybe.Just(a),
            pos: cursor.pos
          };
        }

        ;
        return {
          pos: cursor.pos + 1 | 0,
          elem: cursor.elem
        };
      };
    };

    var $312 = _foldr(dictFoldable)(go)({
      elem: Data_Maybe.Nothing.value,
      pos: 0
    });

    return function ($313) {
      return function (v) {
        return v.elem;
      }($312($313));
    };
  };
};

var $$null = function $$null(dictFoldable) {
  return _foldr(dictFoldable)(function (v) {
    return function (v1) {
      return false;
    };
  })(true);
};

var oneOf = function oneOf(dictFoldable) {
  return function (dictPlus) {
    return _foldr(dictFoldable)(Control_Alt.alt(dictPlus.Alt0()))(Control_Plus.empty(dictPlus));
  };
};

var oneOfMap = function oneOfMap(dictFoldable) {
  return function (dictPlus) {
    return function (f) {
      return _foldr(dictFoldable)(function () {
        var $314 = Control_Alt.alt(dictPlus.Alt0());
        return function ($315) {
          return $314(f($315));
        };
      }())(Control_Plus.empty(dictPlus));
    };
  };
};

var traverse_ = function traverse_(dictApplicative) {
  return function (dictFoldable) {
    return function (f) {
      return _foldr(dictFoldable)(function () {
        var $316 = Control_Apply.applySecond(dictApplicative.Apply0());
        return function ($317) {
          return $316(f($317));
        };
      }())(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
    };
  };
};

var for_ = function for_(dictApplicative) {
  return function (dictFoldable) {
    return Data_Function.flip(traverse_(dictApplicative)(dictFoldable));
  };
};

var sequence_ = function sequence_(dictApplicative) {
  return function (dictFoldable) {
    return traverse_(dictApplicative)(dictFoldable)(Control_Category.identity(Control_Category.categoryFn));
  };
};

var _foldl = function foldl(dict) {
  return dict.foldl;
};

var indexl = function indexl(dictFoldable) {
  return function (idx) {
    var go = function go(cursor) {
      return function (a) {
        if (cursor.elem instanceof Data_Maybe.Just) {
          return cursor;
        }

        ;
        var $157 = cursor.pos === idx;

        if ($157) {
          return {
            elem: new Data_Maybe.Just(a),
            pos: cursor.pos
          };
        }

        ;
        return {
          pos: cursor.pos + 1 | 0,
          elem: cursor.elem
        };
      };
    };

    var $318 = _foldl(dictFoldable)(go)({
      elem: Data_Maybe.Nothing.value,
      pos: 0
    });

    return function ($319) {
      return function (v) {
        return v.elem;
      }($318($319));
    };
  };
};

var intercalate = function intercalate(dictFoldable) {
  return function (dictMonoid) {
    return function (sep) {
      return function (xs) {
        var go = function go(v) {
          return function (x) {
            if (v.init) {
              return {
                init: false,
                acc: x
              };
            }

            ;
            return {
              init: false,
              acc: Data_Semigroup.append(dictMonoid.Semigroup0())(v.acc)(Data_Semigroup.append(dictMonoid.Semigroup0())(sep)(x))
            };
          };
        };

        return _foldl(dictFoldable)(go)({
          init: true,
          acc: Data_Monoid.mempty(dictMonoid)
        })(xs).acc;
      };
    };
  };
};

var length = function length(dictFoldable) {
  return function (dictSemiring) {
    return _foldl(dictFoldable)(function (c) {
      return function (v) {
        return Data_Semiring.add(dictSemiring)(Data_Semiring.one(dictSemiring))(c);
      };
    })(Data_Semiring.zero(dictSemiring));
  };
};

var maximumBy = function maximumBy(dictFoldable) {
  return function (cmp) {
    var max$prime = function max$prime(v) {
      return function (v1) {
        if (v instanceof Data_Maybe.Nothing) {
          return new Data_Maybe.Just(v1);
        }

        ;

        if (v instanceof Data_Maybe.Just) {
          return new Data_Maybe.Just(function () {
            var $164 = Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v1))(Data_Ordering.GT.value);

            if ($164) {
              return v.value0;
            }

            ;
            return v1;
          }());
        }

        ;
        throw new Error("Failed pattern match at Data.Foldable (line 441, column 3 - line 441, column 27): " + [v.constructor.name, v1.constructor.name]);
      };
    };

    return _foldl(dictFoldable)(max$prime)(Data_Maybe.Nothing.value);
  };
};

var maximum = function maximum(dictOrd) {
  return function (dictFoldable) {
    return maximumBy(dictFoldable)(Data_Ord.compare(dictOrd));
  };
};

var minimumBy = function minimumBy(dictFoldable) {
  return function (cmp) {
    var min$prime = function min$prime(v) {
      return function (v1) {
        if (v instanceof Data_Maybe.Nothing) {
          return new Data_Maybe.Just(v1);
        }

        ;

        if (v instanceof Data_Maybe.Just) {
          return new Data_Maybe.Just(function () {
            var $168 = Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v1))(Data_Ordering.LT.value);

            if ($168) {
              return v.value0;
            }

            ;
            return v1;
          }());
        }

        ;
        throw new Error("Failed pattern match at Data.Foldable (line 454, column 3 - line 454, column 27): " + [v.constructor.name, v1.constructor.name]);
      };
    };

    return _foldl(dictFoldable)(min$prime)(Data_Maybe.Nothing.value);
  };
};

var minimum = function minimum(dictOrd) {
  return function (dictFoldable) {
    return minimumBy(dictFoldable)(Data_Ord.compare(dictOrd));
  };
};

var product = function product(dictFoldable) {
  return function (dictSemiring) {
    return _foldl(dictFoldable)(Data_Semiring.mul(dictSemiring))(Data_Semiring.one(dictSemiring));
  };
};

var sum = function sum(dictFoldable) {
  return function (dictSemiring) {
    return _foldl(dictFoldable)(Data_Semiring.add(dictSemiring))(Data_Semiring.zero(dictSemiring));
  };
};

var foldableTuple = {
  foldr: function foldr(f) {
    return function (z) {
      return function (v) {
        return f(v.value1)(z);
      };
    };
  },
  foldl: function foldl(f) {
    return function (z) {
      return function (v) {
        return f(z)(v.value1);
      };
    };
  },
  foldMap: function foldMap(dictMonoid) {
    return function (f) {
      return function (v) {
        return f(v.value1);
      };
    };
  }
};
var foldableMultiplicative = {
  foldr: function foldr(f) {
    return function (z) {
      return function (v) {
        return f(v)(z);
      };
    };
  },
  foldl: function foldl(f) {
    return function (z) {
      return function (v) {
        return f(z)(v);
      };
    };
  },
  foldMap: function foldMap(dictMonoid) {
    return function (f) {
      return function (v) {
        return f(v);
      };
    };
  }
};
var foldableMaybe = {
  foldr: function foldr(v) {
    return function (z) {
      return function (v1) {
        if (v1 instanceof Data_Maybe.Nothing) {
          return z;
        }

        ;

        if (v1 instanceof Data_Maybe.Just) {
          return v(v1.value0)(z);
        }

        ;
        throw new Error("Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): " + [v.constructor.name, z.constructor.name, v1.constructor.name]);
      };
    };
  },
  foldl: function foldl(v) {
    return function (z) {
      return function (v1) {
        if (v1 instanceof Data_Maybe.Nothing) {
          return z;
        }

        ;

        if (v1 instanceof Data_Maybe.Just) {
          return v(z)(v1.value0);
        }

        ;
        throw new Error("Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): " + [v.constructor.name, z.constructor.name, v1.constructor.name]);
      };
    };
  },
  foldMap: function foldMap(dictMonoid) {
    return function (v) {
      return function (v1) {
        if (v1 instanceof Data_Maybe.Nothing) {
          return Data_Monoid.mempty(dictMonoid);
        }

        ;

        if (v1 instanceof Data_Maybe.Just) {
          return v(v1.value0);
        }

        ;
        throw new Error("Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): " + [v.constructor.name, v1.constructor.name]);
      };
    };
  }
};
var foldableIdentity = {
  foldr: function foldr(f) {
    return function (z) {
      return function (v) {
        return f(v)(z);
      };
    };
  },
  foldl: function foldl(f) {
    return function (z) {
      return function (v) {
        return f(z)(v);
      };
    };
  },
  foldMap: function foldMap(dictMonoid) {
    return function (f) {
      return function (v) {
        return f(v);
      };
    };
  }
};
var foldableEither = {
  foldr: function foldr(v) {
    return function (z) {
      return function (v1) {
        if (v1 instanceof Data_Either.Left) {
          return z;
        }

        ;

        if (v1 instanceof Data_Either.Right) {
          return v(v1.value0)(z);
        }

        ;
        throw new Error("Failed pattern match at Data.Foldable (line 181, column 1 - line 187, column 28): " + [v.constructor.name, z.constructor.name, v1.constructor.name]);
      };
    };
  },
  foldl: function foldl(v) {
    return function (z) {
      return function (v1) {
        if (v1 instanceof Data_Either.Left) {
          return z;
        }

        ;

        if (v1 instanceof Data_Either.Right) {
          return v(z)(v1.value0);
        }

        ;
        throw new Error("Failed pattern match at Data.Foldable (line 181, column 1 - line 187, column 28): " + [v.constructor.name, z.constructor.name, v1.constructor.name]);
      };
    };
  },
  foldMap: function foldMap(dictMonoid) {
    return function (v) {
      return function (v1) {
        if (v1 instanceof Data_Either.Left) {
          return Data_Monoid.mempty(dictMonoid);
        }

        ;

        if (v1 instanceof Data_Either.Right) {
          return v(v1.value0);
        }

        ;
        throw new Error("Failed pattern match at Data.Foldable (line 181, column 1 - line 187, column 28): " + [v.constructor.name, v1.constructor.name]);
      };
    };
  }
};
var foldableDual = {
  foldr: function foldr(f) {
    return function (z) {
      return function (v) {
        return f(v)(z);
      };
    };
  },
  foldl: function foldl(f) {
    return function (z) {
      return function (v) {
        return f(z)(v);
      };
    };
  },
  foldMap: function foldMap(dictMonoid) {
    return function (f) {
      return function (v) {
        return f(v);
      };
    };
  }
};
var foldableDisj = {
  foldr: function foldr(f) {
    return function (z) {
      return function (v) {
        return f(v)(z);
      };
    };
  },
  foldl: function foldl(f) {
    return function (z) {
      return function (v) {
        return f(z)(v);
      };
    };
  },
  foldMap: function foldMap(dictMonoid) {
    return function (f) {
      return function (v) {
        return f(v);
      };
    };
  }
};
var foldableConst = {
  foldr: function foldr(v) {
    return function (z) {
      return function (v1) {
        return z;
      };
    };
  },
  foldl: function foldl(v) {
    return function (z) {
      return function (v1) {
        return z;
      };
    };
  },
  foldMap: function foldMap(dictMonoid) {
    return function (v) {
      return function (v1) {
        return Data_Monoid.mempty(dictMonoid);
      };
    };
  }
};
var foldableConj = {
  foldr: function foldr(f) {
    return function (z) {
      return function (v) {
        return f(v)(z);
      };
    };
  },
  foldl: function foldl(f) {
    return function (z) {
      return function (v) {
        return f(z)(v);
      };
    };
  },
  foldMap: function foldMap(dictMonoid) {
    return function (f) {
      return function (v) {
        return f(v);
      };
    };
  }
};
var foldableAdditive = {
  foldr: function foldr(f) {
    return function (z) {
      return function (v) {
        return f(v)(z);
      };
    };
  },
  foldl: function foldl(f) {
    return function (z) {
      return function (v) {
        return f(z)(v);
      };
    };
  },
  foldMap: function foldMap(dictMonoid) {
    return function (f) {
      return function (v) {
        return f(v);
      };
    };
  }
};

var foldMapDefaultR = function foldMapDefaultR(dictFoldable) {
  return function (dictMonoid) {
    return function (f) {
      return _foldr(dictFoldable)(function (x) {
        return function (acc) {
          return Data_Semigroup.append(dictMonoid.Semigroup0())(f(x))(acc);
        };
      })(Data_Monoid.mempty(dictMonoid));
    };
  };
};

var foldableArray = {
  foldr: $foreign.foldrArray,
  foldl: $foreign.foldlArray,
  foldMap: function foldMap(dictMonoid) {
    return foldMapDefaultR(foldableArray)(dictMonoid);
  }
};

var foldMapDefaultL = function foldMapDefaultL(dictFoldable) {
  return function (dictMonoid) {
    return function (f) {
      return _foldl(dictFoldable)(function (acc) {
        return function (x) {
          return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f(x));
        };
      })(Data_Monoid.mempty(dictMonoid));
    };
  };
};

var _foldMap = function foldMap(dict) {
  return dict.foldMap;
};

var foldableApp = function foldableApp(dictFoldable) {
  return {
    foldr: function foldr(f) {
      return function (i) {
        return function (v) {
          return _foldr(dictFoldable)(f)(i)(v);
        };
      };
    },
    foldl: function foldl(f) {
      return function (i) {
        return function (v) {
          return _foldl(dictFoldable)(f)(i)(v);
        };
      };
    },
    foldMap: function foldMap(dictMonoid) {
      return function (f) {
        return function (v) {
          return _foldMap(dictFoldable)(dictMonoid)(f)(v);
        };
      };
    }
  };
};

var foldableCompose = function foldableCompose(dictFoldable) {
  return function (dictFoldable1) {
    return {
      foldr: function foldr(f) {
        return function (i) {
          return function (v) {
            return _foldr(dictFoldable)(Data_Function.flip(_foldr(dictFoldable1)(f)))(i)(v);
          };
        };
      },
      foldl: function foldl(f) {
        return function (i) {
          return function (v) {
            return _foldl(dictFoldable)(_foldl(dictFoldable1)(f))(i)(v);
          };
        };
      },
      foldMap: function foldMap(dictMonoid) {
        return function (f) {
          return function (v) {
            return _foldMap(dictFoldable)(dictMonoid)(_foldMap(dictFoldable1)(dictMonoid)(f))(v);
          };
        };
      }
    };
  };
};

var foldableCoproduct = function foldableCoproduct(dictFoldable) {
  return function (dictFoldable1) {
    return {
      foldr: function foldr(f) {
        return function (z) {
          return Data_Functor_Coproduct.coproduct(_foldr(dictFoldable)(f)(z))(_foldr(dictFoldable1)(f)(z));
        };
      },
      foldl: function foldl(f) {
        return function (z) {
          return Data_Functor_Coproduct.coproduct(_foldl(dictFoldable)(f)(z))(_foldl(dictFoldable1)(f)(z));
        };
      },
      foldMap: function foldMap(dictMonoid) {
        return function (f) {
          return Data_Functor_Coproduct.coproduct(_foldMap(dictFoldable)(dictMonoid)(f))(_foldMap(dictFoldable1)(dictMonoid)(f));
        };
      }
    };
  };
};

var foldableFirst = {
  foldr: function foldr(f) {
    return function (z) {
      return function (v) {
        return _foldr(foldableMaybe)(f)(z)(v);
      };
    };
  },
  foldl: function foldl(f) {
    return function (z) {
      return function (v) {
        return _foldl(foldableMaybe)(f)(z)(v);
      };
    };
  },
  foldMap: function foldMap(dictMonoid) {
    return function (f) {
      return function (v) {
        return _foldMap(foldableMaybe)(dictMonoid)(f)(v);
      };
    };
  }
};
var foldableLast = {
  foldr: function foldr(f) {
    return function (z) {
      return function (v) {
        return _foldr(foldableMaybe)(f)(z)(v);
      };
    };
  },
  foldl: function foldl(f) {
    return function (z) {
      return function (v) {
        return _foldl(foldableMaybe)(f)(z)(v);
      };
    };
  },
  foldMap: function foldMap(dictMonoid) {
    return function (f) {
      return function (v) {
        return _foldMap(foldableMaybe)(dictMonoid)(f)(v);
      };
    };
  }
};

var foldableProduct = function foldableProduct(dictFoldable) {
  return function (dictFoldable1) {
    return {
      foldr: function foldr(f) {
        return function (z) {
          return function (v) {
            return _foldr(dictFoldable)(f)(_foldr(dictFoldable1)(f)(z)(v.value1))(v.value0);
          };
        };
      },
      foldl: function foldl(f) {
        return function (z) {
          return function (v) {
            return _foldl(dictFoldable1)(f)(_foldl(dictFoldable)(f)(z)(v.value0))(v.value1);
          };
        };
      },
      foldMap: function foldMap(dictMonoid) {
        return function (f) {
          return function (v) {
            return Data_Semigroup.append(dictMonoid.Semigroup0())(_foldMap(dictFoldable)(dictMonoid)(f)(v.value0))(_foldMap(dictFoldable1)(dictMonoid)(f)(v.value1));
          };
        };
      }
    };
  };
};

var foldlDefault = function foldlDefault(dictFoldable) {
  return function (c) {
    return function (u) {
      return function (xs) {
        return Data_Newtype.unwrap()(Data_Newtype.unwrap()(_foldMap(dictFoldable)(Data_Monoid_Dual.monoidDual(Data_Monoid_Endo.monoidEndo(Control_Category.categoryFn)))(function () {
          var $320 = Data_Function.flip(c);
          return function ($321) {
            return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo($320($321)));
          };
        }())(xs)))(u);
      };
    };
  };
};

var foldrDefault = function foldrDefault(dictFoldable) {
  return function (c) {
    return function (u) {
      return function (xs) {
        return Data_Newtype.unwrap()(_foldMap(dictFoldable)(Data_Monoid_Endo.monoidEndo(Control_Category.categoryFn))(function ($322) {
          return Data_Monoid_Endo.Endo(c($322));
        })(xs))(u);
      };
    };
  };
};

var lookup = function lookup(dictFoldable) {
  return function (dictEq) {
    return function (a) {
      var $323 = Data_Newtype.unwrap();

      var $324 = _foldMap(dictFoldable)(Data_Maybe_First.monoidFirst)(function (v) {
        var $305 = Data_Eq.eq(dictEq)(a)(v.value0);

        if ($305) {
          return new Data_Maybe.Just(v.value1);
        }

        ;
        return Data_Maybe.Nothing.value;
      });

      return function ($325) {
        return $323($324($325));
      };
    };
  };
};

var surroundMap = function surroundMap(dictFoldable) {
  return function (dictSemigroup) {
    return function (d) {
      return function (t) {
        return function (f) {
          var joined = function joined(a) {
            return function (m) {
              return Data_Semigroup.append(dictSemigroup)(d)(Data_Semigroup.append(dictSemigroup)(t(a))(m));
            };
          };

          return Data_Newtype.unwrap()(_foldMap(dictFoldable)(Data_Monoid_Endo.monoidEndo(Control_Category.categoryFn))(joined)(f))(d);
        };
      };
    };
  };
};

var surround = function surround(dictFoldable) {
  return function (dictSemigroup) {
    return function (d) {
      return surroundMap(dictFoldable)(dictSemigroup)(d)(Control_Category.identity(Control_Category.categoryFn));
    };
  };
};

var foldM = function foldM(dictFoldable) {
  return function (dictMonad) {
    return function (f) {
      return function (b0) {
        return _foldl(dictFoldable)(function (b) {
          return function (a) {
            return Control_Bind.bind(dictMonad.Bind1())(b)(Data_Function.flip(f)(a));
          };
        })(Control_Applicative.pure(dictMonad.Applicative0())(b0));
      };
    };
  };
};

var fold = function fold(dictFoldable) {
  return function (dictMonoid) {
    return _foldMap(dictFoldable)(dictMonoid)(Control_Category.identity(Control_Category.categoryFn));
  };
};

var findMap = function findMap(dictFoldable) {
  return function (p) {
    var go = function go(v) {
      return function (v1) {
        if (v instanceof Data_Maybe.Nothing) {
          return p(v1);
        }

        ;
        return v;
      };
    };

    return _foldl(dictFoldable)(go)(Data_Maybe.Nothing.value);
  };
};

var find = function find(dictFoldable) {
  return function (p) {
    var go = function go(v) {
      return function (v1) {
        if (v instanceof Data_Maybe.Nothing && p(v1)) {
          return new Data_Maybe.Just(v1);
        }

        ;
        return v;
      };
    };

    return _foldl(dictFoldable)(go)(Data_Maybe.Nothing.value);
  };
};

var any = function any(dictFoldable) {
  return function (dictHeytingAlgebra) {
    return Data_Newtype.alaF()()()()(Data_Monoid_Disj.Disj)(_foldMap(dictFoldable)(Data_Monoid_Disj.monoidDisj(dictHeytingAlgebra)));
  };
};

var elem = function elem(dictFoldable) {
  return function (dictEq) {
    var $326 = any(dictFoldable)(Data_HeytingAlgebra.heytingAlgebraBoolean);
    var $327 = Data_Eq.eq(dictEq);
    return function ($328) {
      return $326($327($328));
    };
  };
};

var notElem = function notElem(dictFoldable) {
  return function (dictEq) {
    return function (x) {
      var $329 = Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean);
      var $330 = elem(dictFoldable)(dictEq)(x);
      return function ($331) {
        return $329($330($331));
      };
    };
  };
};

var or = function or(dictFoldable) {
  return function (dictHeytingAlgebra) {
    return any(dictFoldable)(dictHeytingAlgebra)(Control_Category.identity(Control_Category.categoryFn));
  };
};

var all = function all(dictFoldable) {
  return function (dictHeytingAlgebra) {
    return Data_Newtype.alaF()()()()(Data_Monoid_Conj.Conj)(_foldMap(dictFoldable)(Data_Monoid_Conj.monoidConj(dictHeytingAlgebra)));
  };
};

var and = function and(dictFoldable) {
  return function (dictHeytingAlgebra) {
    return all(dictFoldable)(dictHeytingAlgebra)(Control_Category.identity(Control_Category.categoryFn));
  };
};

module.exports = {
  foldr: _foldr,
  foldl: _foldl,
  foldMap: _foldMap,
  foldrDefault: foldrDefault,
  foldlDefault: foldlDefault,
  foldMapDefaultL: foldMapDefaultL,
  foldMapDefaultR: foldMapDefaultR,
  fold: fold,
  foldM: foldM,
  traverse_: traverse_,
  for_: for_,
  sequence_: sequence_,
  oneOf: oneOf,
  oneOfMap: oneOfMap,
  intercalate: intercalate,
  surroundMap: surroundMap,
  surround: surround,
  and: and,
  or: or,
  all: all,
  any: any,
  sum: sum,
  product: product,
  elem: elem,
  notElem: notElem,
  indexl: indexl,
  indexr: indexr,
  find: find,
  findMap: findMap,
  maximum: maximum,
  maximumBy: maximumBy,
  minimum: minimum,
  minimumBy: minimumBy,
  "null": $$null,
  length: length,
  lookup: lookup,
  foldableArray: foldableArray,
  foldableMaybe: foldableMaybe,
  foldableFirst: foldableFirst,
  foldableLast: foldableLast,
  foldableAdditive: foldableAdditive,
  foldableDual: foldableDual,
  foldableDisj: foldableDisj,
  foldableConj: foldableConj,
  foldableMultiplicative: foldableMultiplicative,
  foldableEither: foldableEither,
  foldableTuple: foldableTuple,
  foldableIdentity: foldableIdentity,
  foldableConst: foldableConst,
  foldableProduct: foldableProduct,
  foldableCoproduct: foldableCoproduct,
  foldableCompose: foldableCompose,
  foldableApp: foldableApp
};
},{"./foreign.js":"output/Data.Foldable/foreign.js","../Control.Alt/index.js":"output/Control.Alt/index.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Category/index.js":"output/Control.Category/index.js","../Control.Plus/index.js":"output/Control.Plus/index.js","../Data.Either/index.js":"output/Data.Either/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor.Coproduct/index.js":"output/Data.Functor.Coproduct/index.js","../Data.HeytingAlgebra/index.js":"output/Data.HeytingAlgebra/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Maybe.First/index.js":"output/Data.Maybe.First/index.js","../Data.Monoid/index.js":"output/Data.Monoid/index.js","../Data.Monoid.Conj/index.js":"output/Data.Monoid.Conj/index.js","../Data.Monoid.Disj/index.js":"output/Data.Monoid.Disj/index.js","../Data.Monoid.Dual/index.js":"output/Data.Monoid.Dual/index.js","../Data.Monoid.Endo/index.js":"output/Data.Monoid.Endo/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Semiring/index.js":"output/Data.Semiring/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js"}],"output/Data.Traversable/foreign.js":[function(require,module,exports) {
"use strict"; // jshint maxparams: 3

exports.traverseArrayImpl = function () {
  function array1(a) {
    return [a];
  }

  function array2(a) {
    return function (b) {
      return [a, b];
    };
  }

  function array3(a) {
    return function (b) {
      return function (c) {
        return [a, b, c];
      };
    };
  }

  function concat2(xs) {
    return function (ys) {
      return xs.concat(ys);
    };
  }

  return function (apply) {
    return function (map) {
      return function (pure) {
        return function (f) {
          return function (array) {
            function go(bot, top) {
              switch (top - bot) {
                case 0:
                  return pure([]);

                case 1:
                  return map(array1)(f(array[bot]));

                case 2:
                  return apply(map(array2)(f(array[bot])))(f(array[bot + 1]));

                case 3:
                  return apply(apply(map(array3)(f(array[bot])))(f(array[bot + 1])))(f(array[bot + 2]));

                default:
                  // This slightly tricky pivot selection aims to produce two
                  // even-length partitions where possible.
                  var pivot = bot + Math.floor((top - bot) / 4) * 2;
                  return apply(map(concat2)(go(bot, pivot)))(go(pivot, top));
              }
            }

            return go(0, array.length);
          };
        };
      };
    };
  };
}();
},{}],"output/Data.Const/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Data_Eq = require("../Data.Eq/index.js");

var Data_Functor_Invariant = require("../Data.Functor.Invariant/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Const = function Const(x) {
  return x;
};

var showConst = function showConst(dictShow) {
  return {
    show: function show(v) {
      return "(Const " + (Data_Show.show(dictShow)(v) + ")");
    }
  };
};

var semiringConst = function semiringConst(dictSemiring) {
  return dictSemiring;
};

var semigroupoidConst = {
  compose: function compose(v) {
    return function (v1) {
      return v1;
    };
  }
};

var semigroupConst = function semigroupConst(dictSemigroup) {
  return dictSemigroup;
};

var ringConst = function ringConst(dictRing) {
  return dictRing;
};

var ordConst = function ordConst(dictOrd) {
  return dictOrd;
};

var newtypeConst = {
  Coercible0: function Coercible0() {
    return undefined;
  }
};

var monoidConst = function monoidConst(dictMonoid) {
  return dictMonoid;
};

var heytingAlgebraConst = function heytingAlgebraConst(dictHeytingAlgebra) {
  return dictHeytingAlgebra;
};

var functorConst = {
  map: function map(f) {
    return function (m) {
      return m;
    };
  }
};
var invariantConst = {
  imap: Data_Functor_Invariant.imapF(functorConst)
};

var euclideanRingConst = function euclideanRingConst(dictEuclideanRing) {
  return dictEuclideanRing;
};

var eqConst = function eqConst(dictEq) {
  return dictEq;
};

var eq1Const = function eq1Const(dictEq) {
  return {
    eq1: function eq1(dictEq1) {
      return Data_Eq.eq(eqConst(dictEq));
    }
  };
};

var ord1Const = function ord1Const(dictOrd) {
  return {
    compare1: function compare1(dictOrd1) {
      return Data_Ord.compare(ordConst(dictOrd));
    },
    Eq10: function Eq10() {
      return eq1Const(dictOrd.Eq0());
    }
  };
};

var commutativeRingConst = function commutativeRingConst(dictCommutativeRing) {
  return dictCommutativeRing;
};

var boundedConst = function boundedConst(dictBounded) {
  return dictBounded;
};

var booleanAlgebraConst = function booleanAlgebraConst(dictBooleanAlgebra) {
  return dictBooleanAlgebra;
};

var applyConst = function applyConst(dictSemigroup) {
  return {
    apply: function apply(v) {
      return function (v1) {
        return Data_Semigroup.append(dictSemigroup)(v)(v1);
      };
    },
    Functor0: function Functor0() {
      return functorConst;
    }
  };
};

var applicativeConst = function applicativeConst(dictMonoid) {
  return {
    pure: function pure(v) {
      return Data_Monoid.mempty(dictMonoid);
    },
    Apply0: function Apply0() {
      return applyConst(dictMonoid.Semigroup0());
    }
  };
};

module.exports = {
  Const: Const,
  newtypeConst: newtypeConst,
  eqConst: eqConst,
  eq1Const: eq1Const,
  ordConst: ordConst,
  ord1Const: ord1Const,
  boundedConst: boundedConst,
  showConst: showConst,
  semigroupoidConst: semigroupoidConst,
  semigroupConst: semigroupConst,
  monoidConst: monoidConst,
  semiringConst: semiringConst,
  ringConst: ringConst,
  euclideanRingConst: euclideanRingConst,
  commutativeRingConst: commutativeRingConst,
  heytingAlgebraConst: heytingAlgebraConst,
  booleanAlgebraConst: booleanAlgebraConst,
  functorConst: functorConst,
  invariantConst: invariantConst,
  applyConst: applyConst,
  applicativeConst: applicativeConst
};
},{"../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Functor.Invariant/index.js":"output/Data.Functor.Invariant/index.js","../Data.Monoid/index.js":"output/Data.Monoid/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Show/index.js":"output/Data.Show/index.js"}],"output/Data.Functor.App/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var App = function App(x) {
  return x;
};

var showApp = function showApp(dictShow) {
  return {
    show: function show(v) {
      return "(App " + (Data_Show.show(dictShow)(v) + ")");
    }
  };
};

var semigroupApp = function semigroupApp(dictApply) {
  return function (dictSemigroup) {
    return {
      append: function append(v) {
        return function (v1) {
          return Control_Apply.lift2(dictApply)(Data_Semigroup.append(dictSemigroup))(v)(v1);
        };
      }
    };
  };
};

var plusApp = function plusApp(dictPlus) {
  return dictPlus;
};

var newtypeApp = {
  Coercible0: function Coercible0() {
    return undefined;
  }
};

var monoidApp = function monoidApp(dictApplicative) {
  return function (dictMonoid) {
    return {
      mempty: Control_Applicative.pure(dictApplicative)(Data_Monoid.mempty(dictMonoid)),
      Semigroup0: function Semigroup0() {
        return semigroupApp(dictApplicative.Apply0())(dictMonoid.Semigroup0());
      }
    };
  };
};

var monadPlusApp = function monadPlusApp(dictMonadPlus) {
  return dictMonadPlus;
};

var monadApp = function monadApp(dictMonad) {
  return dictMonad;
};

var lazyApp = function lazyApp(dictLazy) {
  return dictLazy;
};

var hoistLowerApp = Unsafe_Coerce.unsafeCoerce;
var hoistLiftApp = Unsafe_Coerce.unsafeCoerce;

var hoistApp = function hoistApp(f) {
  return function (v) {
    return f(v);
  };
};

var functorApp = function functorApp(dictFunctor) {
  return dictFunctor;
};

var extendApp = function extendApp(dictExtend) {
  return dictExtend;
};

var eqApp = function eqApp(dictEq1) {
  return function (dictEq) {
    return {
      eq: function eq(x) {
        return function (y) {
          return Data_Eq.eq1(dictEq1)(dictEq)(x)(y);
        };
      }
    };
  };
};

var ordApp = function ordApp(dictOrd1) {
  return function (dictOrd) {
    return {
      compare: function compare(x) {
        return function (y) {
          return Data_Ord.compare1(dictOrd1)(dictOrd)(x)(y);
        };
      },
      Eq0: function Eq0() {
        return eqApp(dictOrd1.Eq10())(dictOrd.Eq0());
      }
    };
  };
};

var eq1App = function eq1App(dictEq1) {
  return {
    eq1: function eq1(dictEq) {
      return Data_Eq.eq(eqApp(dictEq1)(dictEq));
    }
  };
};

var ord1App = function ord1App(dictOrd1) {
  return {
    compare1: function compare1(dictOrd) {
      return Data_Ord.compare(ordApp(dictOrd1)(dictOrd));
    },
    Eq10: function Eq10() {
      return eq1App(dictOrd1.Eq10());
    }
  };
};

var comonadApp = function comonadApp(dictComonad) {
  return dictComonad;
};

var bindApp = function bindApp(dictBind) {
  return dictBind;
};

var applyApp = function applyApp(dictApply) {
  return dictApply;
};

var applicativeApp = function applicativeApp(dictApplicative) {
  return dictApplicative;
};

var alternativeApp = function alternativeApp(dictAlternative) {
  return dictAlternative;
};

var monadZeroApp = function monadZeroApp(dictMonadZero) {
  return {
    Monad0: function Monad0() {
      return monadApp(dictMonadZero.Monad0());
    },
    Alternative1: function Alternative1() {
      return alternativeApp(dictMonadZero.Alternative1());
    },
    MonadZeroIsDeprecated2: function MonadZeroIsDeprecated2() {
      return undefined;
    }
  };
};

var altApp = function altApp(dictAlt) {
  return dictAlt;
};

module.exports = {
  App: App,
  hoistApp: hoistApp,
  hoistLiftApp: hoistLiftApp,
  hoistLowerApp: hoistLowerApp,
  newtypeApp: newtypeApp,
  eqApp: eqApp,
  eq1App: eq1App,
  ordApp: ordApp,
  ord1App: ord1App,
  showApp: showApp,
  semigroupApp: semigroupApp,
  monoidApp: monoidApp,
  monadZeroApp: monadZeroApp,
  functorApp: functorApp,
  applyApp: applyApp,
  applicativeApp: applicativeApp,
  bindApp: bindApp,
  monadApp: monadApp,
  altApp: altApp,
  plusApp: plusApp,
  alternativeApp: alternativeApp,
  monadPlusApp: monadPlusApp,
  lazyApp: lazyApp,
  extendApp: extendApp,
  comonadApp: comonadApp
};
},{"../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Monoid/index.js":"output/Data.Monoid/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js"}],"output/Data.Functor.Compose/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Functor_App = require("../Data.Functor.App/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Show = require("../Data.Show/index.js");

var Compose = function Compose(x) {
  return x;
};

var showCompose = function showCompose(dictShow) {
  return {
    show: function show(v) {
      return "(Compose " + (Data_Show.show(dictShow)(v) + ")");
    }
  };
};

var newtypeCompose = {
  Coercible0: function Coercible0() {
    return undefined;
  }
};

var functorCompose = function functorCompose(dictFunctor) {
  return function (dictFunctor1) {
    return {
      map: function map(f) {
        return function (v) {
          return Data_Functor.map(dictFunctor)(Data_Functor.map(dictFunctor1)(f))(v);
        };
      }
    };
  };
};

var eqCompose = function eqCompose(dictEq1) {
  return function (dictEq11) {
    return function (dictEq) {
      return {
        eq: function eq(v) {
          return function (v1) {
            return Data_Eq.eq1(dictEq1)(Data_Functor_App.eqApp(dictEq11)(dictEq))(Data_Functor_App.hoistLiftApp(v))(Data_Functor_App.hoistLiftApp(v1));
          };
        }
      };
    };
  };
};

var ordCompose = function ordCompose(dictOrd1) {
  return function (dictOrd11) {
    return function (dictOrd) {
      return {
        compare: function compare(v) {
          return function (v1) {
            return Data_Ord.compare1(dictOrd1)(Data_Functor_App.ordApp(dictOrd11)(dictOrd))(Data_Functor_App.hoistLiftApp(v))(Data_Functor_App.hoistLiftApp(v1));
          };
        },
        Eq0: function Eq0() {
          return eqCompose(dictOrd1.Eq10())(dictOrd11.Eq10())(dictOrd.Eq0());
        }
      };
    };
  };
};

var eq1Compose = function eq1Compose(dictEq1) {
  return function (dictEq11) {
    return {
      eq1: function eq1(dictEq) {
        return Data_Eq.eq(eqCompose(dictEq1)(dictEq11)(dictEq));
      }
    };
  };
};

var ord1Compose = function ord1Compose(dictOrd1) {
  return function (dictOrd11) {
    return {
      compare1: function compare1(dictOrd) {
        return Data_Ord.compare(ordCompose(dictOrd1)(dictOrd11)(dictOrd));
      },
      Eq10: function Eq10() {
        return eq1Compose(dictOrd1.Eq10())(dictOrd11.Eq10());
      }
    };
  };
};

var bihoistCompose = function bihoistCompose(dictFunctor) {
  return function (natF) {
    return function (natG) {
      return function (v) {
        return natF(Data_Functor.map(dictFunctor)(natG)(v));
      };
    };
  };
};

var applyCompose = function applyCompose(dictApply) {
  return function (dictApply1) {
    return {
      apply: function apply(v) {
        return function (v1) {
          return Control_Apply.apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Control_Apply.apply(dictApply1))(v))(v1);
        };
      },
      Functor0: function Functor0() {
        return functorCompose(dictApply.Functor0())(dictApply1.Functor0());
      }
    };
  };
};

var applicativeCompose = function applicativeCompose(dictApplicative) {
  return function (dictApplicative1) {
    return {
      pure: function () {
        var $51 = Control_Applicative.pure(dictApplicative);
        var $52 = Control_Applicative.pure(dictApplicative1);
        return function ($53) {
          return Compose($51($52($53)));
        };
      }(),
      Apply0: function Apply0() {
        return applyCompose(dictApplicative.Apply0())(dictApplicative1.Apply0());
      }
    };
  };
};

var altCompose = function altCompose(dictAlt) {
  return function (dictFunctor) {
    return {
      alt: function alt(v) {
        return function (v1) {
          return Control_Alt.alt(dictAlt)(v)(v1);
        };
      },
      Functor0: function Functor0() {
        return functorCompose(dictAlt.Functor0())(dictFunctor);
      }
    };
  };
};

var plusCompose = function plusCompose(dictPlus) {
  return function (dictFunctor) {
    return {
      empty: Control_Plus.empty(dictPlus),
      Alt0: function Alt0() {
        return altCompose(dictPlus.Alt0())(dictFunctor);
      }
    };
  };
};

var alternativeCompose = function alternativeCompose(dictAlternative) {
  return function (dictApplicative) {
    return {
      Applicative0: function Applicative0() {
        return applicativeCompose(dictAlternative.Applicative0())(dictApplicative);
      },
      Plus1: function Plus1() {
        return plusCompose(dictAlternative.Plus1())(dictApplicative.Apply0().Functor0());
      }
    };
  };
};

module.exports = {
  Compose: Compose,
  bihoistCompose: bihoistCompose,
  newtypeCompose: newtypeCompose,
  eqCompose: eqCompose,
  eq1Compose: eq1Compose,
  ordCompose: ordCompose,
  ord1Compose: ord1Compose,
  showCompose: showCompose,
  functorCompose: functorCompose,
  applyCompose: applyCompose,
  applicativeCompose: applicativeCompose,
  altCompose: altCompose,
  plusCompose: plusCompose,
  alternativeCompose: alternativeCompose
};
},{"../Control.Alt/index.js":"output/Control.Alt/index.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Plus/index.js":"output/Control.Plus/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Functor.App/index.js":"output/Data.Functor.App/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Show/index.js":"output/Data.Show/index.js"}],"output/Data.Functor.Product/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Data_Bifunctor = require("../Data.Bifunctor/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Product = function Product(x) {
  return x;
};

var showProduct = function showProduct(dictShow) {
  return function (dictShow1) {
    return {
      show: function show(v) {
        return "(product " + (Data_Show.show(dictShow)(v.value0) + (" " + (Data_Show.show(dictShow1)(v.value1) + ")")));
      }
    };
  };
};

var product = function product(fa) {
  return function (ga) {
    return new Data_Tuple.Tuple(fa, ga);
  };
};

var newtypeProduct = {
  Coercible0: function Coercible0() {
    return undefined;
  }
};

var functorProduct = function functorProduct(dictFunctor) {
  return function (dictFunctor1) {
    return {
      map: function map(f) {
        return function (v) {
          return Data_Bifunctor.bimap(Data_Bifunctor.bifunctorTuple)(Data_Functor.map(dictFunctor)(f))(Data_Functor.map(dictFunctor1)(f))(v);
        };
      }
    };
  };
};

var eq1Product = function eq1Product(dictEq1) {
  return function (dictEq11) {
    return {
      eq1: function eq1(dictEq) {
        return function (v) {
          return function (v1) {
            return Data_Eq.eq1(dictEq1)(dictEq)(v.value0)(v1.value0) && Data_Eq.eq1(dictEq11)(dictEq)(v.value1)(v1.value1);
          };
        };
      }
    };
  };
};

var eqProduct = function eqProduct(dictEq1) {
  return function (dictEq11) {
    return function (dictEq) {
      return {
        eq: Data_Eq.eq1(eq1Product(dictEq1)(dictEq11))(dictEq)
      };
    };
  };
};

var ord1Product = function ord1Product(dictOrd1) {
  return function (dictOrd11) {
    return {
      compare1: function compare1(dictOrd) {
        return function (v) {
          return function (v1) {
            var v2 = Data_Ord.compare1(dictOrd1)(dictOrd)(v.value0)(v1.value0);

            if (v2 instanceof Data_Ordering.EQ) {
              return Data_Ord.compare1(dictOrd11)(dictOrd)(v.value1)(v1.value1);
            }

            ;
            return v2;
          };
        };
      },
      Eq10: function Eq10() {
        return eq1Product(dictOrd1.Eq10())(dictOrd11.Eq10());
      }
    };
  };
};

var ordProduct = function ordProduct(dictOrd1) {
  return function (dictOrd11) {
    return function (dictOrd) {
      return {
        compare: Data_Ord.compare1(ord1Product(dictOrd1)(dictOrd11))(dictOrd),
        Eq0: function Eq0() {
          return eqProduct(dictOrd1.Eq10())(dictOrd11.Eq10())(dictOrd.Eq0());
        }
      };
    };
  };
};

var bihoistProduct = function bihoistProduct(natF) {
  return function (natG) {
    return function (v) {
      return Data_Bifunctor.bimap(Data_Bifunctor.bifunctorTuple)(natF)(natG)(v);
    };
  };
};

var applyProduct = function applyProduct(dictApply) {
  return function (dictApply1) {
    return {
      apply: function apply(v) {
        return function (v1) {
          return product(Control_Apply.apply(dictApply)(v.value0)(v1.value0))(Control_Apply.apply(dictApply1)(v.value1)(v1.value1));
        };
      },
      Functor0: function Functor0() {
        return functorProduct(dictApply.Functor0())(dictApply1.Functor0());
      }
    };
  };
};

var bindProduct = function bindProduct(dictBind) {
  return function (dictBind1) {
    return {
      bind: function bind(v) {
        return function (f) {
          return product(Control_Bind.bind(dictBind)(v.value0)(function () {
            var $67 = Data_Newtype.unwrap();
            return function ($68) {
              return Data_Tuple.fst($67(f($68)));
            };
          }()))(Control_Bind.bind(dictBind1)(v.value1)(function () {
            var $69 = Data_Newtype.unwrap();
            return function ($70) {
              return Data_Tuple.snd($69(f($70)));
            };
          }()));
        };
      },
      Apply0: function Apply0() {
        return applyProduct(dictBind.Apply0())(dictBind1.Apply0());
      }
    };
  };
};

var applicativeProduct = function applicativeProduct(dictApplicative) {
  return function (dictApplicative1) {
    return {
      pure: function pure(a) {
        return product(Control_Applicative.pure(dictApplicative)(a))(Control_Applicative.pure(dictApplicative1)(a));
      },
      Apply0: function Apply0() {
        return applyProduct(dictApplicative.Apply0())(dictApplicative1.Apply0());
      }
    };
  };
};

var monadProduct = function monadProduct(dictMonad) {
  return function (dictMonad1) {
    return {
      Applicative0: function Applicative0() {
        return applicativeProduct(dictMonad.Applicative0())(dictMonad1.Applicative0());
      },
      Bind1: function Bind1() {
        return bindProduct(dictMonad.Bind1())(dictMonad1.Bind1());
      }
    };
  };
};

module.exports = {
  Product: Product,
  product: product,
  bihoistProduct: bihoistProduct,
  newtypeProduct: newtypeProduct,
  eqProduct: eqProduct,
  eq1Product: eq1Product,
  ordProduct: ordProduct,
  ord1Product: ord1Product,
  showProduct: showProduct,
  functorProduct: functorProduct,
  applyProduct: applyProduct,
  applicativeProduct: applicativeProduct,
  bindProduct: bindProduct,
  monadProduct: monadProduct
};
},{"../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Data.Bifunctor/index.js":"output/Data.Bifunctor/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js"}],"output/Data.Maybe.Last/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Last = function Last(x) {
  return x;
};

var showLast = function showLast(dictShow) {
  return {
    show: function show(v) {
      return "(Last " + (Data_Show.show(Data_Maybe.showMaybe(dictShow))(v) + ")");
    }
  };
};

var semigroupLast = {
  append: function append(v) {
    return function (v1) {
      if (v1 instanceof Data_Maybe.Just) {
        return v1;
      }

      ;

      if (v1 instanceof Data_Maybe.Nothing) {
        return v;
      }

      ;
      throw new Error("Failed pattern match at Data.Maybe.Last (line 52, column 1 - line 54, column 36): " + [v.constructor.name, v1.constructor.name]);
    };
  }
};

var ordLast = function ordLast(dictOrd) {
  return Data_Maybe.ordMaybe(dictOrd);
};

var ord1Last = Data_Maybe.ord1Maybe;
var newtypeLast = {
  Coercible0: function Coercible0() {
    return undefined;
  }
};
var monoidLast = {
  mempty: Data_Maybe.Nothing.value,
  Semigroup0: function Semigroup0() {
    return semigroupLast;
  }
};
var monadLast = Data_Maybe.monadMaybe;
var invariantLast = Data_Maybe.invariantMaybe;
var functorLast = Data_Maybe.functorMaybe;
var extendLast = Data_Maybe.extendMaybe;

var eqLast = function eqLast(dictEq) {
  return Data_Maybe.eqMaybe(dictEq);
};

var eq1Last = Data_Maybe.eq1Maybe;

var boundedLast = function boundedLast(dictBounded) {
  return Data_Maybe.boundedMaybe(dictBounded);
};

var bindLast = Data_Maybe.bindMaybe;
var applyLast = Data_Maybe.applyMaybe;
var applicativeLast = Data_Maybe.applicativeMaybe;
var altLast = {
  alt: Data_Semigroup.append(semigroupLast),
  Functor0: function Functor0() {
    return functorLast;
  }
};
var plusLast = {
  empty: Data_Monoid.mempty(monoidLast),
  Alt0: function Alt0() {
    return altLast;
  }
};
var alternativeLast = {
  Applicative0: function Applicative0() {
    return applicativeLast;
  },
  Plus1: function Plus1() {
    return plusLast;
  }
};
var monadZeroLast = {
  Monad0: function Monad0() {
    return monadLast;
  },
  Alternative1: function Alternative1() {
    return alternativeLast;
  },
  MonadZeroIsDeprecated2: function MonadZeroIsDeprecated2() {
    return undefined;
  }
};
module.exports = {
  Last: Last,
  newtypeLast: newtypeLast,
  eqLast: eqLast,
  eq1Last: eq1Last,
  ordLast: ordLast,
  ord1Last: ord1Last,
  boundedLast: boundedLast,
  functorLast: functorLast,
  invariantLast: invariantLast,
  applyLast: applyLast,
  applicativeLast: applicativeLast,
  bindLast: bindLast,
  monadLast: monadLast,
  extendLast: extendLast,
  showLast: showLast,
  semigroupLast: semigroupLast,
  monoidLast: monoidLast,
  altLast: altLast,
  plusLast: plusLast,
  alternativeLast: alternativeLast,
  monadZeroLast: monadZeroLast
};
},{"../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Monoid/index.js":"output/Data.Monoid/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Show/index.js":"output/Data.Show/index.js"}],"output/Data.Monoid.Additive/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Data_Eq = require("../Data.Eq/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Show = require("../Data.Show/index.js");

var Additive = function Additive(x) {
  return x;
};

var showAdditive = function showAdditive(dictShow) {
  return {
    show: function show(v) {
      return "(Additive " + (Data_Show.show(dictShow)(v) + ")");
    }
  };
};

var semigroupAdditive = function semigroupAdditive(dictSemiring) {
  return {
    append: function append(v) {
      return function (v1) {
        return Data_Semiring.add(dictSemiring)(v)(v1);
      };
    }
  };
};

var ordAdditive = function ordAdditive(dictOrd) {
  return dictOrd;
};

var monoidAdditive = function monoidAdditive(dictSemiring) {
  return {
    mempty: Data_Semiring.zero(dictSemiring),
    Semigroup0: function Semigroup0() {
      return semigroupAdditive(dictSemiring);
    }
  };
};

var functorAdditive = {
  map: function map(f) {
    return function (m) {
      return f(m);
    };
  }
};

var eqAdditive = function eqAdditive(dictEq) {
  return dictEq;
};

var eq1Additive = {
  eq1: function eq1(dictEq) {
    return Data_Eq.eq(eqAdditive(dictEq));
  }
};
var ord1Additive = {
  compare1: function compare1(dictOrd) {
    return Data_Ord.compare(ordAdditive(dictOrd));
  },
  Eq10: function Eq10() {
    return eq1Additive;
  }
};

var boundedAdditive = function boundedAdditive(dictBounded) {
  return dictBounded;
};

var applyAdditive = {
  apply: function apply(v) {
    return function (v1) {
      return v(v1);
    };
  },
  Functor0: function Functor0() {
    return functorAdditive;
  }
};
var bindAdditive = {
  bind: function bind(v) {
    return function (f) {
      return f(v);
    };
  },
  Apply0: function Apply0() {
    return applyAdditive;
  }
};
var applicativeAdditive = {
  pure: Additive,
  Apply0: function Apply0() {
    return applyAdditive;
  }
};
var monadAdditive = {
  Applicative0: function Applicative0() {
    return applicativeAdditive;
  },
  Bind1: function Bind1() {
    return bindAdditive;
  }
};
module.exports = {
  Additive: Additive,
  eqAdditive: eqAdditive,
  eq1Additive: eq1Additive,
  ordAdditive: ordAdditive,
  ord1Additive: ord1Additive,
  boundedAdditive: boundedAdditive,
  showAdditive: showAdditive,
  functorAdditive: functorAdditive,
  applyAdditive: applyAdditive,
  applicativeAdditive: applicativeAdditive,
  bindAdditive: bindAdditive,
  monadAdditive: monadAdditive,
  semigroupAdditive: semigroupAdditive,
  monoidAdditive: monoidAdditive
};
},{"../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Semiring/index.js":"output/Data.Semiring/index.js","../Data.Show/index.js":"output/Data.Show/index.js"}],"output/Data.Monoid.Multiplicative/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Data_Eq = require("../Data.Eq/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Show = require("../Data.Show/index.js");

var Multiplicative = function Multiplicative(x) {
  return x;
};

var showMultiplicative = function showMultiplicative(dictShow) {
  return {
    show: function show(v) {
      return "(Multiplicative " + (Data_Show.show(dictShow)(v) + ")");
    }
  };
};

var semigroupMultiplicative = function semigroupMultiplicative(dictSemiring) {
  return {
    append: function append(v) {
      return function (v1) {
        return Data_Semiring.mul(dictSemiring)(v)(v1);
      };
    }
  };
};

var ordMultiplicative = function ordMultiplicative(dictOrd) {
  return dictOrd;
};

var monoidMultiplicative = function monoidMultiplicative(dictSemiring) {
  return {
    mempty: Data_Semiring.one(dictSemiring),
    Semigroup0: function Semigroup0() {
      return semigroupMultiplicative(dictSemiring);
    }
  };
};

var functorMultiplicative = {
  map: function map(f) {
    return function (m) {
      return f(m);
    };
  }
};

var eqMultiplicative = function eqMultiplicative(dictEq) {
  return dictEq;
};

var eq1Multiplicative = {
  eq1: function eq1(dictEq) {
    return Data_Eq.eq(eqMultiplicative(dictEq));
  }
};
var ord1Multiplicative = {
  compare1: function compare1(dictOrd) {
    return Data_Ord.compare(ordMultiplicative(dictOrd));
  },
  Eq10: function Eq10() {
    return eq1Multiplicative;
  }
};

var boundedMultiplicative = function boundedMultiplicative(dictBounded) {
  return dictBounded;
};

var applyMultiplicative = {
  apply: function apply(v) {
    return function (v1) {
      return v(v1);
    };
  },
  Functor0: function Functor0() {
    return functorMultiplicative;
  }
};
var bindMultiplicative = {
  bind: function bind(v) {
    return function (f) {
      return f(v);
    };
  },
  Apply0: function Apply0() {
    return applyMultiplicative;
  }
};
var applicativeMultiplicative = {
  pure: Multiplicative,
  Apply0: function Apply0() {
    return applyMultiplicative;
  }
};
var monadMultiplicative = {
  Applicative0: function Applicative0() {
    return applicativeMultiplicative;
  },
  Bind1: function Bind1() {
    return bindMultiplicative;
  }
};
module.exports = {
  Multiplicative: Multiplicative,
  eqMultiplicative: eqMultiplicative,
  eq1Multiplicative: eq1Multiplicative,
  ordMultiplicative: ordMultiplicative,
  ord1Multiplicative: ord1Multiplicative,
  boundedMultiplicative: boundedMultiplicative,
  showMultiplicative: showMultiplicative,
  functorMultiplicative: functorMultiplicative,
  applyMultiplicative: applyMultiplicative,
  applicativeMultiplicative: applicativeMultiplicative,
  bindMultiplicative: bindMultiplicative,
  monadMultiplicative: monadMultiplicative,
  semigroupMultiplicative: semigroupMultiplicative,
  monoidMultiplicative: monoidMultiplicative
};
},{"../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Semiring/index.js":"output/Data.Semiring/index.js","../Data.Show/index.js":"output/Data.Show/index.js"}],"output/Data.Traversable.Accum/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

module.exports = {};
},{}],"output/Data.Traversable.Accum.Internal/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var StateR = function StateR(x) {
  return x;
};

var StateL = function StateL(x) {
  return x;
};

var stateR = function stateR(v) {
  return v;
};

var stateL = function stateL(v) {
  return v;
};

var functorStateR = {
  map: function map(f) {
    return function (k) {
      return function (s) {
        var v = stateR(k)(s);
        return {
          accum: v.accum,
          value: f(v.value)
        };
      };
    };
  }
};
var functorStateL = {
  map: function map(f) {
    return function (k) {
      return function (s) {
        var v = stateL(k)(s);
        return {
          accum: v.accum,
          value: f(v.value)
        };
      };
    };
  }
};
var applyStateR = {
  apply: function apply(f) {
    return function (x) {
      return function (s) {
        var v = stateR(x)(s);
        var v1 = stateR(f)(v.accum);
        return {
          accum: v1.accum,
          value: v1.value(v.value)
        };
      };
    };
  },
  Functor0: function Functor0() {
    return functorStateR;
  }
};
var applyStateL = {
  apply: function apply(f) {
    return function (x) {
      return function (s) {
        var v = stateL(f)(s);
        var v1 = stateL(x)(v.accum);
        return {
          accum: v1.accum,
          value: v.value(v1.value)
        };
      };
    };
  },
  Functor0: function Functor0() {
    return functorStateL;
  }
};
var applicativeStateR = {
  pure: function pure(a) {
    return function (s) {
      return {
        accum: s,
        value: a
      };
    };
  },
  Apply0: function Apply0() {
    return applyStateR;
  }
};
var applicativeStateL = {
  pure: function pure(a) {
    return function (s) {
      return {
        accum: s,
        value: a
      };
    };
  },
  Apply0: function Apply0() {
    return applyStateL;
  }
};
module.exports = {
  StateL: StateL,
  stateL: stateL,
  StateR: StateR,
  stateR: stateR,
  functorStateL: functorStateL,
  applyStateL: applyStateL,
  applicativeStateL: applicativeStateL,
  functorStateR: functorStateR,
  applyStateR: applyStateR,
  applicativeStateR: applicativeStateR
};
},{}],"output/Data.Traversable/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Category = require("../Control.Category/index.js");

var Data_Const = require("../Data.Const/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Functor_App = require("../Data.Functor.App/index.js");

var Data_Functor_Compose = require("../Data.Functor.Compose/index.js");

var Data_Functor_Coproduct = require("../Data.Functor.Coproduct/index.js");

var Data_Functor_Product = require("../Data.Functor.Product/index.js");

var Data_Identity = require("../Data.Identity/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Maybe_First = require("../Data.Maybe.First/index.js");

var Data_Maybe_Last = require("../Data.Maybe.Last/index.js");

var Data_Monoid_Additive = require("../Data.Monoid.Additive/index.js");

var Data_Monoid_Conj = require("../Data.Monoid.Conj/index.js");

var Data_Monoid_Disj = require("../Data.Monoid.Disj/index.js");

var Data_Monoid_Dual = require("../Data.Monoid.Dual/index.js");

var Data_Monoid_Multiplicative = require("../Data.Monoid.Multiplicative/index.js");

var Data_Traversable_Accum = require("../Data.Traversable.Accum/index.js");

var Data_Traversable_Accum_Internal = require("../Data.Traversable.Accum.Internal/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var _traverse = function traverse(dict) {
  return dict.traverse;
};

var traversableTuple = {
  traverse: function traverse(dictApplicative) {
    return function (f) {
      return function (v) {
        return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Tuple.Tuple.create(v.value0))(f(v.value1));
      };
    };
  },
  sequence: function sequence(dictApplicative) {
    return function (v) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Tuple.Tuple.create(v.value0))(v.value1);
    };
  },
  Functor0: function Functor0() {
    return Data_Tuple.functorTuple;
  },
  Foldable1: function Foldable1() {
    return Data_Foldable.foldableTuple;
  }
};
var traversableMultiplicative = {
  traverse: function traverse(dictApplicative) {
    return function (f) {
      return function (v) {
        return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Monoid_Multiplicative.Multiplicative)(f(v));
      };
    };
  },
  sequence: function sequence(dictApplicative) {
    return function (v) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Monoid_Multiplicative.Multiplicative)(v);
    };
  },
  Functor0: function Functor0() {
    return Data_Monoid_Multiplicative.functorMultiplicative;
  },
  Foldable1: function Foldable1() {
    return Data_Foldable.foldableMultiplicative;
  }
};
var traversableMaybe = {
  traverse: function traverse(dictApplicative) {
    return function (v) {
      return function (v1) {
        if (v1 instanceof Data_Maybe.Nothing) {
          return Control_Applicative.pure(dictApplicative)(Data_Maybe.Nothing.value);
        }

        ;

        if (v1 instanceof Data_Maybe.Just) {
          return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Maybe.Just.create)(v(v1.value0));
        }

        ;
        throw new Error("Failed pattern match at Data.Traversable (line 115, column 1 - line 119, column 33): " + [v.constructor.name, v1.constructor.name]);
      };
    };
  },
  sequence: function sequence(dictApplicative) {
    return function (v) {
      if (v instanceof Data_Maybe.Nothing) {
        return Control_Applicative.pure(dictApplicative)(Data_Maybe.Nothing.value);
      }

      ;

      if (v instanceof Data_Maybe.Just) {
        return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Maybe.Just.create)(v.value0);
      }

      ;
      throw new Error("Failed pattern match at Data.Traversable (line 115, column 1 - line 119, column 33): " + [v.constructor.name]);
    };
  },
  Functor0: function Functor0() {
    return Data_Maybe.functorMaybe;
  },
  Foldable1: function Foldable1() {
    return Data_Foldable.foldableMaybe;
  }
};
var traversableIdentity = {
  traverse: function traverse(dictApplicative) {
    return function (f) {
      return function (v) {
        return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Identity.Identity)(f(v));
      };
    };
  },
  sequence: function sequence(dictApplicative) {
    return function (v) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Identity.Identity)(v);
    };
  },
  Functor0: function Functor0() {
    return Data_Identity.functorIdentity;
  },
  Foldable1: function Foldable1() {
    return Data_Foldable.foldableIdentity;
  }
};
var traversableEither = {
  traverse: function traverse(dictApplicative) {
    return function (v) {
      return function (v1) {
        if (v1 instanceof Data_Either.Left) {
          return Control_Applicative.pure(dictApplicative)(new Data_Either.Left(v1.value0));
        }

        ;

        if (v1 instanceof Data_Either.Right) {
          return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Either.Right.create)(v(v1.value0));
        }

        ;
        throw new Error("Failed pattern match at Data.Traversable (line 149, column 1 - line 153, column 36): " + [v.constructor.name, v1.constructor.name]);
      };
    };
  },
  sequence: function sequence(dictApplicative) {
    return function (v) {
      if (v instanceof Data_Either.Left) {
        return Control_Applicative.pure(dictApplicative)(new Data_Either.Left(v.value0));
      }

      ;

      if (v instanceof Data_Either.Right) {
        return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Either.Right.create)(v.value0);
      }

      ;
      throw new Error("Failed pattern match at Data.Traversable (line 149, column 1 - line 153, column 36): " + [v.constructor.name]);
    };
  },
  Functor0: function Functor0() {
    return Data_Either.functorEither;
  },
  Foldable1: function Foldable1() {
    return Data_Foldable.foldableEither;
  }
};
var traversableDual = {
  traverse: function traverse(dictApplicative) {
    return function (f) {
      return function (v) {
        return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Monoid_Dual.Dual)(f(v));
      };
    };
  },
  sequence: function sequence(dictApplicative) {
    return function (v) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Monoid_Dual.Dual)(v);
    };
  },
  Functor0: function Functor0() {
    return Data_Monoid_Dual.functorDual;
  },
  Foldable1: function Foldable1() {
    return Data_Foldable.foldableDual;
  }
};
var traversableDisj = {
  traverse: function traverse(dictApplicative) {
    return function (f) {
      return function (v) {
        return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Monoid_Disj.Disj)(f(v));
      };
    };
  },
  sequence: function sequence(dictApplicative) {
    return function (v) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Monoid_Disj.Disj)(v);
    };
  },
  Functor0: function Functor0() {
    return Data_Monoid_Disj.functorDisj;
  },
  Foldable1: function Foldable1() {
    return Data_Foldable.foldableDisj;
  }
};
var traversableConst = {
  traverse: function traverse(dictApplicative) {
    return function (v) {
      return function (v1) {
        return Control_Applicative.pure(dictApplicative)(v1);
      };
    };
  },
  sequence: function sequence(dictApplicative) {
    return function (v) {
      return Control_Applicative.pure(dictApplicative)(v);
    };
  },
  Functor0: function Functor0() {
    return Data_Const.functorConst;
  },
  Foldable1: function Foldable1() {
    return Data_Foldable.foldableConst;
  }
};
var traversableConj = {
  traverse: function traverse(dictApplicative) {
    return function (f) {
      return function (v) {
        return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Monoid_Conj.Conj)(f(v));
      };
    };
  },
  sequence: function sequence(dictApplicative) {
    return function (v) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Monoid_Conj.Conj)(v);
    };
  },
  Functor0: function Functor0() {
    return Data_Monoid_Conj.functorConj;
  },
  Foldable1: function Foldable1() {
    return Data_Foldable.foldableConj;
  }
};

var traversableCompose = function traversableCompose(dictTraversable) {
  return function (dictTraversable1) {
    return {
      traverse: function traverse(dictApplicative) {
        return function (f) {
          return function (v) {
            return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Functor_Compose.Compose)(_traverse(dictTraversable)(dictApplicative)(_traverse(dictTraversable1)(dictApplicative)(f))(v));
          };
        };
      },
      sequence: function sequence(dictApplicative) {
        return _traverse(traversableCompose(dictTraversable)(dictTraversable1))(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
      },
      Functor0: function Functor0() {
        return Data_Functor_Compose.functorCompose(dictTraversable.Functor0())(dictTraversable1.Functor0());
      },
      Foldable1: function Foldable1() {
        return Data_Foldable.foldableCompose(dictTraversable.Foldable1())(dictTraversable1.Foldable1());
      }
    };
  };
};

var traversableAdditive = {
  traverse: function traverse(dictApplicative) {
    return function (f) {
      return function (v) {
        return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Monoid_Additive.Additive)(f(v));
      };
    };
  },
  sequence: function sequence(dictApplicative) {
    return function (v) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Monoid_Additive.Additive)(v);
    };
  },
  Functor0: function Functor0() {
    return Data_Monoid_Additive.functorAdditive;
  },
  Foldable1: function Foldable1() {
    return Data_Foldable.foldableAdditive;
  }
};

var sequenceDefault = function sequenceDefault(dictTraversable) {
  return function (dictApplicative) {
    return _traverse(dictTraversable)(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
  };
};

var traversableArray = {
  traverse: function traverse(dictApplicative) {
    return $foreign.traverseArrayImpl(Control_Apply.apply(dictApplicative.Apply0()))(Data_Functor.map(dictApplicative.Apply0().Functor0()))(Control_Applicative.pure(dictApplicative));
  },
  sequence: function sequence(dictApplicative) {
    return sequenceDefault(traversableArray)(dictApplicative);
  },
  Functor0: function Functor0() {
    return Data_Functor.functorArray;
  },
  Foldable1: function Foldable1() {
    return Data_Foldable.foldableArray;
  }
};

var _sequence = function sequence(dict) {
  return dict.sequence;
};

var traversableApp = function traversableApp(dictTraversable) {
  return {
    traverse: function traverse(dictApplicative) {
      return function (f) {
        return function (v) {
          return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Functor_App.App)(_traverse(dictTraversable)(dictApplicative)(f)(v));
        };
      };
    },
    sequence: function sequence(dictApplicative) {
      return function (v) {
        return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Functor_App.App)(_sequence(dictTraversable)(dictApplicative)(v));
      };
    },
    Functor0: function Functor0() {
      return Data_Functor_App.functorApp(dictTraversable.Functor0());
    },
    Foldable1: function Foldable1() {
      return Data_Foldable.foldableApp(dictTraversable.Foldable1());
    }
  };
};

var traversableCoproduct = function traversableCoproduct(dictTraversable) {
  return function (dictTraversable1) {
    return {
      traverse: function traverse(dictApplicative) {
        return function (f) {
          return Data_Functor_Coproduct.coproduct(function () {
            var $143 = Data_Functor.map(dictApplicative.Apply0().Functor0())(function ($146) {
              return Data_Functor_Coproduct.Coproduct(Data_Either.Left.create($146));
            });

            var $144 = _traverse(dictTraversable)(dictApplicative)(f);

            return function ($145) {
              return $143($144($145));
            };
          }())(function () {
            var $147 = Data_Functor.map(dictApplicative.Apply0().Functor0())(function ($150) {
              return Data_Functor_Coproduct.Coproduct(Data_Either.Right.create($150));
            });

            var $148 = _traverse(dictTraversable1)(dictApplicative)(f);

            return function ($149) {
              return $147($148($149));
            };
          }());
        };
      },
      sequence: function sequence(dictApplicative) {
        return Data_Functor_Coproduct.coproduct(function () {
          var $151 = Data_Functor.map(dictApplicative.Apply0().Functor0())(function ($154) {
            return Data_Functor_Coproduct.Coproduct(Data_Either.Left.create($154));
          });

          var $152 = _sequence(dictTraversable)(dictApplicative);

          return function ($153) {
            return $151($152($153));
          };
        }())(function () {
          var $155 = Data_Functor.map(dictApplicative.Apply0().Functor0())(function ($158) {
            return Data_Functor_Coproduct.Coproduct(Data_Either.Right.create($158));
          });

          var $156 = _sequence(dictTraversable1)(dictApplicative);

          return function ($157) {
            return $155($156($157));
          };
        }());
      },
      Functor0: function Functor0() {
        return Data_Functor_Coproduct.functorCoproduct(dictTraversable.Functor0())(dictTraversable1.Functor0());
      },
      Foldable1: function Foldable1() {
        return Data_Foldable.foldableCoproduct(dictTraversable.Foldable1())(dictTraversable1.Foldable1());
      }
    };
  };
};

var traversableFirst = {
  traverse: function traverse(dictApplicative) {
    return function (f) {
      return function (v) {
        return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Maybe_First.First)(_traverse(traversableMaybe)(dictApplicative)(f)(v));
      };
    };
  },
  sequence: function sequence(dictApplicative) {
    return function (v) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Maybe_First.First)(_sequence(traversableMaybe)(dictApplicative)(v));
    };
  },
  Functor0: function Functor0() {
    return Data_Maybe_First.functorFirst;
  },
  Foldable1: function Foldable1() {
    return Data_Foldable.foldableFirst;
  }
};
var traversableLast = {
  traverse: function traverse(dictApplicative) {
    return function (f) {
      return function (v) {
        return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Maybe_Last.Last)(_traverse(traversableMaybe)(dictApplicative)(f)(v));
      };
    };
  },
  sequence: function sequence(dictApplicative) {
    return function (v) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Maybe_Last.Last)(_sequence(traversableMaybe)(dictApplicative)(v));
    };
  },
  Functor0: function Functor0() {
    return Data_Maybe_Last.functorLast;
  },
  Foldable1: function Foldable1() {
    return Data_Foldable.foldableLast;
  }
};

var traversableProduct = function traversableProduct(dictTraversable) {
  return function (dictTraversable1) {
    return {
      traverse: function traverse(dictApplicative) {
        return function (f) {
          return function (v) {
            return Control_Apply.lift2(dictApplicative.Apply0())(Data_Functor_Product.product)(_traverse(dictTraversable)(dictApplicative)(f)(v.value0))(_traverse(dictTraversable1)(dictApplicative)(f)(v.value1));
          };
        };
      },
      sequence: function sequence(dictApplicative) {
        return function (v) {
          return Control_Apply.lift2(dictApplicative.Apply0())(Data_Functor_Product.product)(_sequence(dictTraversable)(dictApplicative)(v.value0))(_sequence(dictTraversable1)(dictApplicative)(v.value1));
        };
      },
      Functor0: function Functor0() {
        return Data_Functor_Product.functorProduct(dictTraversable.Functor0())(dictTraversable1.Functor0());
      },
      Foldable1: function Foldable1() {
        return Data_Foldable.foldableProduct(dictTraversable.Foldable1())(dictTraversable1.Foldable1());
      }
    };
  };
};

var traverseDefault = function traverseDefault(dictTraversable) {
  return function (dictApplicative) {
    return function (f) {
      return function (ta) {
        return _sequence(dictTraversable)(dictApplicative)(Data_Functor.map(dictTraversable.Functor0())(f)(ta));
      };
    };
  };
};

var mapAccumR = function mapAccumR(dictTraversable) {
  return function (f) {
    return function (s0) {
      return function (xs) {
        return Data_Traversable_Accum_Internal.stateR(_traverse(dictTraversable)(Data_Traversable_Accum_Internal.applicativeStateR)(function (a) {
          return function (s) {
            return f(s)(a);
          };
        })(xs))(s0);
      };
    };
  };
};

var scanr = function scanr(dictTraversable) {
  return function (f) {
    return function (b0) {
      return function (xs) {
        return mapAccumR(dictTraversable)(function (b) {
          return function (a) {
            var b$prime = f(a)(b);
            return {
              accum: b$prime,
              value: b$prime
            };
          };
        })(b0)(xs).value;
      };
    };
  };
};

var mapAccumL = function mapAccumL(dictTraversable) {
  return function (f) {
    return function (s0) {
      return function (xs) {
        return Data_Traversable_Accum_Internal.stateL(_traverse(dictTraversable)(Data_Traversable_Accum_Internal.applicativeStateL)(function (a) {
          return function (s) {
            return f(s)(a);
          };
        })(xs))(s0);
      };
    };
  };
};

var scanl = function scanl(dictTraversable) {
  return function (f) {
    return function (b0) {
      return function (xs) {
        return mapAccumL(dictTraversable)(function (b) {
          return function (a) {
            var b$prime = f(b)(a);
            return {
              accum: b$prime,
              value: b$prime
            };
          };
        })(b0)(xs).value;
      };
    };
  };
};

var $$for = function $$for(dictApplicative) {
  return function (dictTraversable) {
    return function (x) {
      return function (f) {
        return _traverse(dictTraversable)(dictApplicative)(f)(x);
      };
    };
  };
};

module.exports = {
  traverse: _traverse,
  sequence: _sequence,
  traverseDefault: traverseDefault,
  sequenceDefault: sequenceDefault,
  "for": $$for,
  scanl: scanl,
  scanr: scanr,
  mapAccumL: mapAccumL,
  mapAccumR: mapAccumR,
  traversableArray: traversableArray,
  traversableMaybe: traversableMaybe,
  traversableFirst: traversableFirst,
  traversableLast: traversableLast,
  traversableAdditive: traversableAdditive,
  traversableDual: traversableDual,
  traversableConj: traversableConj,
  traversableDisj: traversableDisj,
  traversableMultiplicative: traversableMultiplicative,
  traversableEither: traversableEither,
  traversableTuple: traversableTuple,
  traversableIdentity: traversableIdentity,
  traversableConst: traversableConst,
  traversableProduct: traversableProduct,
  traversableCoproduct: traversableCoproduct,
  traversableCompose: traversableCompose,
  traversableApp: traversableApp,
  all: Data_Foldable.all,
  and: Data_Foldable.and,
  any: Data_Foldable.any,
  elem: Data_Foldable.elem,
  find: Data_Foldable.find,
  fold: Data_Foldable.fold,
  foldMap: Data_Foldable.foldMap,
  foldMapDefaultL: Data_Foldable.foldMapDefaultL,
  foldMapDefaultR: Data_Foldable.foldMapDefaultR,
  foldl: Data_Foldable.foldl,
  foldlDefault: Data_Foldable.foldlDefault,
  foldr: Data_Foldable.foldr,
  foldrDefault: Data_Foldable.foldrDefault,
  for_: Data_Foldable.for_,
  intercalate: Data_Foldable.intercalate,
  maximum: Data_Foldable.maximum,
  maximumBy: Data_Foldable.maximumBy,
  minimum: Data_Foldable.minimum,
  minimumBy: Data_Foldable.minimumBy,
  notElem: Data_Foldable.notElem,
  oneOf: Data_Foldable.oneOf,
  or: Data_Foldable.or,
  sequence_: Data_Foldable.sequence_,
  sum: Data_Foldable.sum,
  traverse_: Data_Foldable.traverse_
};
},{"./foreign.js":"output/Data.Traversable/foreign.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Category/index.js":"output/Control.Category/index.js","../Data.Const/index.js":"output/Data.Const/index.js","../Data.Either/index.js":"output/Data.Either/index.js","../Data.Foldable/index.js":"output/Data.Foldable/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Functor.App/index.js":"output/Data.Functor.App/index.js","../Data.Functor.Compose/index.js":"output/Data.Functor.Compose/index.js","../Data.Functor.Coproduct/index.js":"output/Data.Functor.Coproduct/index.js","../Data.Functor.Product/index.js":"output/Data.Functor.Product/index.js","../Data.Identity/index.js":"output/Data.Identity/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Maybe.First/index.js":"output/Data.Maybe.First/index.js","../Data.Maybe.Last/index.js":"output/Data.Maybe.Last/index.js","../Data.Monoid.Additive/index.js":"output/Data.Monoid.Additive/index.js","../Data.Monoid.Conj/index.js":"output/Data.Monoid.Conj/index.js","../Data.Monoid.Disj/index.js":"output/Data.Monoid.Disj/index.js","../Data.Monoid.Dual/index.js":"output/Data.Monoid.Dual/index.js","../Data.Monoid.Multiplicative/index.js":"output/Data.Monoid.Multiplicative/index.js","../Data.Traversable.Accum/index.js":"output/Data.Traversable.Accum/index.js","../Data.Traversable.Accum.Internal/index.js":"output/Data.Traversable.Accum.Internal/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js"}],"output/Data.Unfoldable/foreign.js":[function(require,module,exports) {
"use strict";

exports.unfoldrArrayImpl = function (isNothing) {
  return function (fromJust) {
    return function (fst) {
      return function (snd) {
        return function (f) {
          return function (b) {
            var result = [];
            var value = b;

            while (true) {
              // eslint-disable-line no-constant-condition
              var maybe = f(value);
              if (isNothing(maybe)) return result;
              var tuple = fromJust(maybe);
              result.push(fst(tuple));
              value = snd(tuple);
            }
          };
        };
      };
    };
  };
};
},{}],"output/Data.Unfoldable1/foreign.js":[function(require,module,exports) {
"use strict";

exports.unfoldr1ArrayImpl = function (isNothing) {
  return function (fromJust) {
    return function (fst) {
      return function (snd) {
        return function (f) {
          return function (b) {
            var result = [];
            var value = b;

            while (true) {
              // eslint-disable-line no-constant-condition
              var tuple = f(value);
              result.push(fst(tuple));
              var maybe = snd(tuple);
              if (isNothing(maybe)) return result;
              value = fromJust(maybe);
            }
          };
        };
      };
    };
  };
};
},{}],"output/Data.Ord.Max/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Data_Bounded = require("../Data.Bounded/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Show = require("../Data.Show/index.js");

var Max = function Max(x) {
  return x;
};

var showMax = function showMax(dictShow) {
  return {
    show: function show(v) {
      return "(Max " + (Data_Show.show(dictShow)(v) + ")");
    }
  };
};

var semigroupMax = function semigroupMax(dictOrd) {
  return {
    append: function append(v) {
      return function (v1) {
        return Data_Ord.max(dictOrd)(v)(v1);
      };
    }
  };
};

var newtypeMax = {
  Coercible0: function Coercible0() {
    return undefined;
  }
};

var monoidMax = function monoidMax(dictBounded) {
  return {
    mempty: Data_Bounded.bottom(dictBounded),
    Semigroup0: function Semigroup0() {
      return semigroupMax(dictBounded.Ord0());
    }
  };
};

var eqMax = function eqMax(dictEq) {
  return dictEq;
};

var ordMax = function ordMax(dictOrd) {
  return {
    compare: function compare(v) {
      return function (v1) {
        return Data_Ord.compare(dictOrd)(v)(v1);
      };
    },
    Eq0: function Eq0() {
      return eqMax(dictOrd.Eq0());
    }
  };
};

module.exports = {
  Max: Max,
  newtypeMax: newtypeMax,
  eqMax: eqMax,
  ordMax: ordMax,
  semigroupMax: semigroupMax,
  monoidMax: monoidMax,
  showMax: showMax
};
},{"../Data.Bounded/index.js":"output/Data.Bounded/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Show/index.js":"output/Data.Show/index.js"}],"output/Data.Ord.Min/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Data_Bounded = require("../Data.Bounded/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Show = require("../Data.Show/index.js");

var Min = function Min(x) {
  return x;
};

var showMin = function showMin(dictShow) {
  return {
    show: function show(v) {
      return "(Min " + (Data_Show.show(dictShow)(v) + ")");
    }
  };
};

var semigroupMin = function semigroupMin(dictOrd) {
  return {
    append: function append(v) {
      return function (v1) {
        return Data_Ord.min(dictOrd)(v)(v1);
      };
    }
  };
};

var newtypeMin = {
  Coercible0: function Coercible0() {
    return undefined;
  }
};

var monoidMin = function monoidMin(dictBounded) {
  return {
    mempty: Data_Bounded.top(dictBounded),
    Semigroup0: function Semigroup0() {
      return semigroupMin(dictBounded.Ord0());
    }
  };
};

var eqMin = function eqMin(dictEq) {
  return dictEq;
};

var ordMin = function ordMin(dictOrd) {
  return {
    compare: function compare(v) {
      return function (v1) {
        return Data_Ord.compare(dictOrd)(v)(v1);
      };
    },
    Eq0: function Eq0() {
      return eqMin(dictOrd.Eq0());
    }
  };
};

module.exports = {
  Min: Min,
  newtypeMin: newtypeMin,
  eqMin: eqMin,
  ordMin: ordMin,
  semigroupMin: semigroupMin,
  monoidMin: monoidMin,
  showMin: showMin
};
},{"../Data.Bounded/index.js":"output/Data.Bounded/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Show/index.js":"output/Data.Show/index.js"}],"output/Data.Semigroup.Foldable/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Control_Apply = require("../Control.Apply/index.js");

var Control_Category = require("../Control.Category/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Monoid_Dual = require("../Data.Monoid.Dual/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Ord_Max = require("../Data.Ord.Max/index.js");

var Data_Ord_Min = require("../Data.Ord.Min/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var JoinWith = function JoinWith(x) {
  return x;
};

var FoldRight1 = function () {
  function FoldRight1(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  FoldRight1.create = function (value0) {
    return function (value1) {
      return new FoldRight1(value0, value1);
    };
  };

  return FoldRight1;
}();

var Act = function Act(x) {
  return x;
};

var semigroupJoinWith = function semigroupJoinWith(dictSemigroup) {
  return {
    append: function append(v) {
      return function (v1) {
        return function (j) {
          return Data_Semigroup.append(dictSemigroup)(v(j))(Data_Semigroup.append(dictSemigroup)(j)(v1(j)));
        };
      };
    }
  };
};

var semigroupAct = function semigroupAct(dictApply) {
  return {
    append: function append(v) {
      return function (v1) {
        return Control_Apply.applySecond(dictApply)(v)(v1);
      };
    }
  };
};

var runFoldRight1 = function runFoldRight1(v) {
  return v.value0(v.value1);
};

var mkFoldRight1 = FoldRight1.create(Data_Function["const"]);

var joinee = function joinee(v) {
  return v;
};

var getAct = function getAct(v) {
  return v;
};

var foldr1 = function foldr1(dict) {
  return dict.foldr1;
};

var foldl1 = function foldl1(dict) {
  return dict.foldl1;
};

var maximumBy = function maximumBy(dictFoldable1) {
  return function (cmp) {
    return foldl1(dictFoldable1)(function (x) {
      return function (y) {
        var $75 = Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(x)(y))(Data_Ordering.GT.value);

        if ($75) {
          return x;
        }

        ;
        return y;
      };
    });
  };
};

var minimumBy = function minimumBy(dictFoldable1) {
  return function (cmp) {
    return foldl1(dictFoldable1)(function (x) {
      return function (y) {
        var $76 = Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(x)(y))(Data_Ordering.LT.value);

        if ($76) {
          return x;
        }

        ;
        return y;
      };
    });
  };
};

var foldableTuple = {
  foldMap1: function foldMap1(dictSemigroup) {
    return function (f) {
      return function (v) {
        return f(v.value1);
      };
    };
  },
  foldr1: function foldr1(v) {
    return function (v1) {
      return v1.value1;
    };
  },
  foldl1: function foldl1(v) {
    return function (v1) {
      return v1.value1;
    };
  },
  Foldable0: function Foldable0() {
    return Data_Foldable.foldableTuple;
  }
};
var foldableMultiplicative = {
  foldr1: function foldr1(v) {
    return function (v1) {
      return v1;
    };
  },
  foldl1: function foldl1(v) {
    return function (v1) {
      return v1;
    };
  },
  foldMap1: function foldMap1(dictSemigroup) {
    return function (f) {
      return function (v) {
        return f(v);
      };
    };
  },
  Foldable0: function Foldable0() {
    return Data_Foldable.foldableMultiplicative;
  }
};
var foldableIdentity = {
  foldMap1: function foldMap1(dictSemigroup) {
    return function (f) {
      return function (v) {
        return f(v);
      };
    };
  },
  foldl1: function foldl1(v) {
    return function (v1) {
      return v1;
    };
  },
  foldr1: function foldr1(v) {
    return function (v1) {
      return v1;
    };
  },
  Foldable0: function Foldable0() {
    return Data_Foldable.foldableIdentity;
  }
};
var foldableDual = {
  foldr1: function foldr1(v) {
    return function (v1) {
      return v1;
    };
  },
  foldl1: function foldl1(v) {
    return function (v1) {
      return v1;
    };
  },
  foldMap1: function foldMap1(dictSemigroup) {
    return function (f) {
      return function (v) {
        return f(v);
      };
    };
  },
  Foldable0: function Foldable0() {
    return Data_Foldable.foldableDual;
  }
};
var foldRight1Semigroup = {
  append: function append(v) {
    return function (v1) {
      return new FoldRight1(function (a) {
        return function (f) {
          return v.value0(f(v.value1)(v1.value0(a)(f)))(f);
        };
      }, v1.value1);
    };
  }
};

var foldMap1DefaultR = function foldMap1DefaultR(dictFoldable1) {
  return function (dictFunctor) {
    return function (dictSemigroup) {
      return function (f) {
        var $114 = foldr1(dictFoldable1)(Data_Semigroup.append(dictSemigroup));
        var $115 = Data_Functor.map(dictFunctor)(f);
        return function ($116) {
          return $114($115($116));
        };
      };
    };
  };
};

var foldMap1DefaultL = function foldMap1DefaultL(dictFoldable1) {
  return function (dictFunctor) {
    return function (dictSemigroup) {
      return function (f) {
        var $117 = foldl1(dictFoldable1)(Data_Semigroup.append(dictSemigroup));
        var $118 = Data_Functor.map(dictFunctor)(f);
        return function ($119) {
          return $117($118($119));
        };
      };
    };
  };
};

var foldMap1Default = function foldMap1Default() {
  return function (dictFoldable1) {
    return function (dictFunctor) {
      return function (dictSemigroup) {
        return foldMap1DefaultL(dictFoldable1)(dictFunctor)(dictSemigroup);
      };
    };
  };
};

var foldMap1 = function foldMap1(dict) {
  return dict.foldMap1;
};

var foldl1Default = function foldl1Default(dictFoldable1) {
  var $120 = Data_Function.flip(function () {
    var $122 = Data_Newtype.alaF()()()()(Data_Monoid_Dual.Dual)(foldMap1(dictFoldable1)(Data_Monoid_Dual.semigroupDual(foldRight1Semigroup)))(mkFoldRight1);
    return function ($123) {
      return runFoldRight1($122($123));
    };
  }());
  return function ($121) {
    return $120(Data_Function.flip($121));
  };
};

var foldr1Default = function foldr1Default(dictFoldable1) {
  return Data_Function.flip(function () {
    var $124 = foldMap1(dictFoldable1)(foldRight1Semigroup)(mkFoldRight1);
    return function ($125) {
      return runFoldRight1($124($125));
    };
  }());
};

var intercalateMap = function intercalateMap(dictFoldable1) {
  return function (dictSemigroup) {
    return function (j) {
      return function (f) {
        return function (foldable) {
          return joinee(foldMap1(dictFoldable1)(semigroupJoinWith(dictSemigroup))(function ($126) {
            return JoinWith(Data_Function["const"](f($126)));
          })(foldable))(j);
        };
      };
    };
  };
};

var intercalate = function intercalate(dictFoldable1) {
  return function (dictSemigroup) {
    return Data_Function.flip(intercalateMap(dictFoldable1)(dictSemigroup))(Control_Category.identity(Control_Category.categoryFn));
  };
};

var maximum = function maximum(dictOrd) {
  return function (dictFoldable1) {
    return Data_Newtype.ala()()()(Data_Ord_Max.Max)(foldMap1(dictFoldable1)(Data_Ord_Max.semigroupMax(dictOrd)));
  };
};

var minimum = function minimum(dictOrd) {
  return function (dictFoldable1) {
    return Data_Newtype.ala()()()(Data_Ord_Min.Min)(foldMap1(dictFoldable1)(Data_Ord_Min.semigroupMin(dictOrd)));
  };
};

var traverse1_ = function traverse1_(dictFoldable1) {
  return function (dictApply) {
    return function (f) {
      return function (t) {
        return Data_Functor.voidRight(dictApply.Functor0())(Data_Unit.unit)(getAct(foldMap1(dictFoldable1)(semigroupAct(dictApply))(function ($127) {
          return Act(f($127));
        })(t)));
      };
    };
  };
};

var for1_ = function for1_(dictFoldable1) {
  return function (dictApply) {
    return Data_Function.flip(traverse1_(dictFoldable1)(dictApply));
  };
};

var sequence1_ = function sequence1_(dictFoldable1) {
  return function (dictApply) {
    return traverse1_(dictFoldable1)(dictApply)(Control_Category.identity(Control_Category.categoryFn));
  };
};

var fold1 = function fold1(dictFoldable1) {
  return function (dictSemigroup) {
    return foldMap1(dictFoldable1)(dictSemigroup)(Control_Category.identity(Control_Category.categoryFn));
  };
};

module.exports = {
  foldMap1: foldMap1,
  fold1: fold1,
  foldr1: foldr1,
  foldl1: foldl1,
  traverse1_: traverse1_,
  for1_: for1_,
  sequence1_: sequence1_,
  foldr1Default: foldr1Default,
  foldl1Default: foldl1Default,
  foldMap1DefaultR: foldMap1DefaultR,
  foldMap1DefaultL: foldMap1DefaultL,
  foldMap1Default: foldMap1Default,
  intercalate: intercalate,
  intercalateMap: intercalateMap,
  maximum: maximum,
  maximumBy: maximumBy,
  minimum: minimum,
  minimumBy: minimumBy,
  foldableDual: foldableDual,
  foldableMultiplicative: foldableMultiplicative,
  foldableTuple: foldableTuple,
  foldableIdentity: foldableIdentity
};
},{"../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Category/index.js":"output/Control.Category/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Foldable/index.js":"output/Data.Foldable/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Monoid.Dual/index.js":"output/Data.Monoid.Dual/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Ord.Max/index.js":"output/Data.Ord.Max/index.js","../Data.Ord.Min/index.js":"output/Data.Ord.Min/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js"}],"output/Data.Semigroup.Traversable/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Control_Category = require("../Control.Category/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Identity = require("../Data.Identity/index.js");

var Data_Monoid_Dual = require("../Data.Monoid.Dual/index.js");

var Data_Monoid_Multiplicative = require("../Data.Monoid.Multiplicative/index.js");

var Data_Semigroup_Foldable = require("../Data.Semigroup.Foldable/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var traverse1 = function traverse1(dict) {
  return dict.traverse1;
};

var traversableTuple = {
  traverse1: function traverse1(dictApply) {
    return function (f) {
      return function (v) {
        return Data_Functor.map(dictApply.Functor0())(Data_Tuple.Tuple.create(v.value0))(f(v.value1));
      };
    };
  },
  sequence1: function sequence1(dictApply) {
    return function (v) {
      return Data_Functor.map(dictApply.Functor0())(Data_Tuple.Tuple.create(v.value0))(v.value1);
    };
  },
  Foldable10: function Foldable10() {
    return Data_Semigroup_Foldable.foldableTuple;
  },
  Traversable1: function Traversable1() {
    return Data_Traversable.traversableTuple;
  }
};
var traversableIdentity = {
  traverse1: function traverse1(dictApply) {
    return function (f) {
      return function (v) {
        return Data_Functor.map(dictApply.Functor0())(Data_Identity.Identity)(f(v));
      };
    };
  },
  sequence1: function sequence1(dictApply) {
    return function (v) {
      return Data_Functor.map(dictApply.Functor0())(Data_Identity.Identity)(v);
    };
  },
  Foldable10: function Foldable10() {
    return Data_Semigroup_Foldable.foldableIdentity;
  },
  Traversable1: function Traversable1() {
    return Data_Traversable.traversableIdentity;
  }
};

var sequence1Default = function sequence1Default(dictTraversable1) {
  return function (dictApply) {
    return traverse1(dictTraversable1)(dictApply)(Control_Category.identity(Control_Category.categoryFn));
  };
};

var traversableDual = {
  traverse1: function traverse1(dictApply) {
    return function (f) {
      return function (v) {
        return Data_Functor.map(dictApply.Functor0())(Data_Monoid_Dual.Dual)(f(v));
      };
    };
  },
  sequence1: function sequence1(dictApply) {
    return sequence1Default(traversableDual)(dictApply);
  },
  Foldable10: function Foldable10() {
    return Data_Semigroup_Foldable.foldableDual;
  },
  Traversable1: function Traversable1() {
    return Data_Traversable.traversableDual;
  }
};
var traversableMultiplicative = {
  traverse1: function traverse1(dictApply) {
    return function (f) {
      return function (v) {
        return Data_Functor.map(dictApply.Functor0())(Data_Monoid_Multiplicative.Multiplicative)(f(v));
      };
    };
  },
  sequence1: function sequence1(dictApply) {
    return sequence1Default(traversableMultiplicative)(dictApply);
  },
  Foldable10: function Foldable10() {
    return Data_Semigroup_Foldable.foldableMultiplicative;
  },
  Traversable1: function Traversable1() {
    return Data_Traversable.traversableMultiplicative;
  }
};

var sequence1 = function sequence1(dict) {
  return dict.sequence1;
};

var traverse1Default = function traverse1Default(dictTraversable1) {
  return function (dictApply) {
    return function (f) {
      return function (ta) {
        return sequence1(dictTraversable1)(dictApply)(Data_Functor.map(dictTraversable1.Traversable1().Functor0())(f)(ta));
      };
    };
  };
};

module.exports = {
  sequence1: sequence1,
  traverse1: traverse1,
  traverse1Default: traverse1Default,
  sequence1Default: sequence1Default,
  traversableDual: traversableDual,
  traversableMultiplicative: traversableMultiplicative,
  traversableTuple: traversableTuple,
  traversableIdentity: traversableIdentity
};
},{"../Control.Category/index.js":"output/Control.Category/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Identity/index.js":"output/Data.Identity/index.js","../Data.Monoid.Dual/index.js":"output/Data.Monoid.Dual/index.js","../Data.Monoid.Multiplicative/index.js":"output/Data.Monoid.Multiplicative/index.js","../Data.Semigroup.Foldable/index.js":"output/Data.Semigroup.Foldable/index.js","../Data.Traversable/index.js":"output/Data.Traversable/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js"}],"output/Data.Unfoldable1/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Data_Boolean = require("../Data.Boolean/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Semigroup_Traversable = require("../Data.Semigroup.Traversable/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var unfoldr1 = function unfoldr1(dict) {
  return dict.unfoldr1;
};

var unfoldable1Maybe = {
  unfoldr1: function unfoldr1(f) {
    return function (b) {
      return new Data_Maybe.Just(Data_Tuple.fst(f(b)));
    };
  }
};
var unfoldable1Array = {
  unfoldr1: $foreign.unfoldr1ArrayImpl(Data_Maybe.isNothing)(Data_Maybe.fromJust())(Data_Tuple.fst)(Data_Tuple.snd)
};

var replicate1 = function replicate1(dictUnfoldable1) {
  return function (n) {
    return function (v) {
      var step = function step(i) {
        if (i <= 0) {
          return new Data_Tuple.Tuple(v, Data_Maybe.Nothing.value);
        }

        ;

        if (Data_Boolean.otherwise) {
          return new Data_Tuple.Tuple(v, new Data_Maybe.Just(i - 1 | 0));
        }

        ;
        throw new Error("Failed pattern match at Data.Unfoldable1 (line 67, column 5 - line 67, column 39): " + [i.constructor.name]);
      };

      return unfoldr1(dictUnfoldable1)(step)(n - 1 | 0);
    };
  };
};

var replicate1A = function replicate1A(dictApply) {
  return function (dictUnfoldable1) {
    return function (dictTraversable1) {
      return function (n) {
        return function (m) {
          return Data_Semigroup_Traversable.sequence1(dictTraversable1)(dictApply)(replicate1(dictUnfoldable1)(n)(m));
        };
      };
    };
  };
};

var singleton = function singleton(dictUnfoldable1) {
  return replicate1(dictUnfoldable1)(1);
};

var range = function range(dictUnfoldable1) {
  return function (start) {
    return function (end) {
      var go = function go(delta) {
        return function (i) {
          var i$prime = i + delta | 0;
          return new Data_Tuple.Tuple(i, function () {
            var $8 = i === end;

            if ($8) {
              return Data_Maybe.Nothing.value;
            }

            ;
            return new Data_Maybe.Just(i$prime);
          }());
        };
      };

      var delta = function () {
        var $9 = end >= start;

        if ($9) {
          return 1;
        }

        ;
        return -1 | 0;
      }();

      return unfoldr1(dictUnfoldable1)(go(delta))(start);
    };
  };
};

module.exports = {
  unfoldr1: unfoldr1,
  replicate1: replicate1,
  replicate1A: replicate1A,
  singleton: singleton,
  range: range,
  unfoldable1Array: unfoldable1Array,
  unfoldable1Maybe: unfoldable1Maybe
};
},{"./foreign.js":"output/Data.Unfoldable1/foreign.js","../Data.Boolean/index.js":"output/Data.Boolean/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Semigroup.Traversable/index.js":"output/Data.Semigroup.Traversable/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js"}],"output/Data.Unfoldable/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unfoldable1 = require("../Data.Unfoldable1/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var unfoldr = function unfoldr(dict) {
  return dict.unfoldr;
};

var unfoldableMaybe = {
  unfoldr: function unfoldr(f) {
    return function (b) {
      return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Tuple.fst)(f(b));
    };
  },
  Unfoldable10: function Unfoldable10() {
    return Data_Unfoldable1.unfoldable1Maybe;
  }
};
var unfoldableArray = {
  unfoldr: $foreign.unfoldrArrayImpl(Data_Maybe.isNothing)(Data_Maybe.fromJust())(Data_Tuple.fst)(Data_Tuple.snd),
  Unfoldable10: function Unfoldable10() {
    return Data_Unfoldable1.unfoldable1Array;
  }
};

var replicate = function replicate(dictUnfoldable) {
  return function (n) {
    return function (v) {
      var step = function step(i) {
        var $7 = i <= 0;

        if ($7) {
          return Data_Maybe.Nothing.value;
        }

        ;
        return new Data_Maybe.Just(new Data_Tuple.Tuple(v, i - 1 | 0));
      };

      return unfoldr(dictUnfoldable)(step)(n);
    };
  };
};

var replicateA = function replicateA(dictApplicative) {
  return function (dictUnfoldable) {
    return function (dictTraversable) {
      return function (n) {
        return function (m) {
          return Data_Traversable.sequence(dictTraversable)(dictApplicative)(replicate(dictUnfoldable)(n)(m));
        };
      };
    };
  };
};

var none = function none(dictUnfoldable) {
  return unfoldr(dictUnfoldable)(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Unit.unit);
};

var fromMaybe = function fromMaybe(dictUnfoldable) {
  return unfoldr(dictUnfoldable)(function (b) {
    return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Function.flip(Data_Tuple.Tuple.create)(Data_Maybe.Nothing.value))(b);
  });
};

module.exports = {
  unfoldr: unfoldr,
  replicate: replicate,
  replicateA: replicateA,
  none: none,
  fromMaybe: fromMaybe,
  unfoldableArray: unfoldableArray,
  unfoldableMaybe: unfoldableMaybe,
  range: Data_Unfoldable1.range,
  replicate1: Data_Unfoldable1.replicate1,
  replicate1A: Data_Unfoldable1.replicate1A,
  singleton: Data_Unfoldable1.singleton,
  unfoldr1: Data_Unfoldable1.unfoldr1
};
},{"./foreign.js":"output/Data.Unfoldable/foreign.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Traversable/index.js":"output/Data.Traversable/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Data.Unfoldable1/index.js":"output/Data.Unfoldable1/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js"}],"output/Data.Array/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Control_Alt = require("../Control.Alt/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Lazy = require("../Control.Lazy/index.js");

var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");

var Control_Monad_ST_Internal = require("../Control.Monad.ST.Internal/index.js");

var Data_Array_ST = require("../Data.Array.ST/index.js");

var Data_Array_ST_Iterator = require("../Data.Array.ST.Iterator/index.js");

var Data_Boolean = require("../Data.Boolean/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unfoldable = require("../Data.Unfoldable/index.js");

var zipWithA = function zipWithA(dictApplicative) {
  return function (f) {
    return function (xs) {
      return function (ys) {
        return Data_Traversable.sequence(Data_Traversable.traversableArray)(dictApplicative)($foreign.zipWith(f)(xs)(ys));
      };
    };
  };
};

var zip = $foreign.zipWith(Data_Tuple.Tuple.create);

var updateAtIndices = function updateAtIndices(dictFoldable) {
  return function (us) {
    return function (xs) {
      return Data_Array_ST.withArray(function (res) {
        return Data_Foldable.traverse_(Control_Monad_ST_Internal.applicativeST)(dictFoldable)(function (v) {
          return Data_Array_ST.poke(v.value0)(v.value1)(res);
        })(us);
      })(xs)();
    };
  };
};

var updateAt = $foreign["_updateAt"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);

var unsafeIndex = function unsafeIndex() {
  return $foreign.unsafeIndexImpl;
};

var uncons = $foreign.unconsImpl(Data_Function["const"](Data_Maybe.Nothing.value))(function (x) {
  return function (xs) {
    return new Data_Maybe.Just({
      head: x,
      tail: xs
    });
  };
});

var toUnfoldable = function toUnfoldable(dictUnfoldable) {
  return function (xs) {
    var len = $foreign.length(xs);

    var f = function f(i) {
      if (i < len) {
        return new Data_Maybe.Just(new Data_Tuple.Tuple(unsafeIndex()(xs)(i), i + 1 | 0));
      }

      ;

      if (Data_Boolean.otherwise) {
        return Data_Maybe.Nothing.value;
      }

      ;
      throw new Error("Failed pattern match at Data.Array (line 158, column 3 - line 160, column 26): " + [i.constructor.name]);
    };

    return Data_Unfoldable.unfoldr(dictUnfoldable)(f)(0);
  };
};

var take = function take(n) {
  return function (xs) {
    var $58 = n < 1;

    if ($58) {
      return [];
    }

    ;
    return $foreign.slice(0)(n)(xs);
  };
};

var tail = $foreign.unconsImpl(Data_Function["const"](Data_Maybe.Nothing.value))(function (v) {
  return function (xs) {
    return new Data_Maybe.Just(xs);
  };
});

var splitAt = function splitAt(i) {
  return function (xs) {
    if (i <= 0) {
      return {
        before: [],
        after: xs
      };
    }

    ;
    return {
      before: $foreign.slice(0)(i)(xs),
      after: $foreign.slice(i)($foreign.length(xs))(xs)
    };
  };
};

var sortBy = function sortBy(comp) {
  return $foreign.sortByImpl(comp)(function (v) {
    if (v instanceof Data_Ordering.GT) {
      return 1;
    }

    ;

    if (v instanceof Data_Ordering.EQ) {
      return 0;
    }

    ;

    if (v instanceof Data_Ordering.LT) {
      return -1 | 0;
    }

    ;
    throw new Error("Failed pattern match at Data.Array (line 831, column 31 - line 834, column 11): " + [v.constructor.name]);
  });
};

var sortWith = function sortWith(dictOrd) {
  return function (f) {
    return sortBy(Data_Ord.comparing(dictOrd)(f));
  };
};

var sort = function sort(dictOrd) {
  return function (xs) {
    return sortBy(Data_Ord.compare(dictOrd))(xs);
  };
};

var snoc = function snoc(xs) {
  return function (x) {
    return Data_Array_ST.withArray(Data_Array_ST.push(x))(xs)();
  };
};

var singleton = function singleton(a) {
  return [a];
};

var $$null = function $$null(xs) {
  return $foreign.length(xs) === 0;
};

var nubByEq = function nubByEq(eq) {
  return function (xs) {
    return function __do() {
      var arr = Data_Array_ST["new"]();
      Control_Monad_ST_Internal.foreach(xs)(function (x) {
        return function __do() {
          var e = Data_Functor.map(Control_Monad_ST_Internal.functorST)(function () {
            var $90 = Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean);
            var $91 = $foreign.any(function (v) {
              return eq(v)(x);
            });
            return function ($92) {
              return $90($91($92));
            };
          }())(Data_Array_ST.unsafeFreeze(arr))();
          return Control_Applicative.when(Control_Monad_ST_Internal.applicativeST)(e)(Data_Functor["void"](Control_Monad_ST_Internal.functorST)(Data_Array_ST.push(x)(arr)))();
        };
      })();
      return Data_Array_ST.unsafeFreeze(arr)();
    }();
  };
};

var nubEq = function nubEq(dictEq) {
  return nubByEq(Data_Eq.eq(dictEq));
};

var modifyAtIndices = function modifyAtIndices(dictFoldable) {
  return function (is) {
    return function (f) {
      return function (xs) {
        return Data_Array_ST.withArray(function (res) {
          return Data_Foldable.traverse_(Control_Monad_ST_Internal.applicativeST)(dictFoldable)(function (i) {
            return Data_Array_ST.modify(i)(f)(res);
          })(is);
        })(xs)();
      };
    };
  };
};

var mapWithIndex = function mapWithIndex(f) {
  return function (xs) {
    return $foreign.zipWith(f)($foreign.range(0)($foreign.length(xs) - 1 | 0))(xs);
  };
};

var intersperse = function intersperse(a) {
  return function (arr) {
    var v = $foreign.length(arr);

    if (v < 2) {
      return arr;
    }

    ;

    if (Data_Boolean.otherwise) {
      return Data_Array_ST.run(function () {
        var unsafeGetElem = function unsafeGetElem(idx) {
          return unsafeIndex()(arr)(idx);
        };

        return function __do() {
          var out = Data_Array_ST["new"]();
          Data_Array_ST.push(unsafeGetElem(0))(out)();
          Control_Monad_ST_Internal["for"](1)(v)(function (idx) {
            return function __do() {
              Data_Array_ST.push(a)(out)();
              return Data_Functor["void"](Control_Monad_ST_Internal.functorST)(Data_Array_ST.push(unsafeGetElem(idx))(out))();
            };
          })();
          return out;
        };
      }());
    }

    ;
    throw new Error("Failed pattern match at Data.Array (line 613, column 21 - line 622, column 19): " + [v.constructor.name]);
  };
};

var intercalate = function intercalate(dictMonoid) {
  return Data_Foldable.intercalate(Data_Foldable.foldableArray)(dictMonoid);
};

var insertAt = $foreign["_insertAt"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);

var init = function init(xs) {
  if ($$null(xs)) {
    return Data_Maybe.Nothing.value;
  }

  ;

  if (Data_Boolean.otherwise) {
    return new Data_Maybe.Just($foreign.slice(0)($foreign.length(xs) - 1 | 0)(xs));
  }

  ;
  throw new Error("Failed pattern match at Data.Array (line 340, column 1 - line 340, column 45): " + [xs.constructor.name]);
};

var index = $foreign.indexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);

var last = function last(xs) {
  return index(xs)($foreign.length(xs) - 1 | 0);
};

var unsnoc = function unsnoc(xs) {
  return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
    return function (v1) {
      return {
        init: v,
        last: v1
      };
    };
  })(init(xs)))(last(xs));
};

var modifyAt = function modifyAt(i) {
  return function (f) {
    return function (xs) {
      var go = function go(x) {
        return updateAt(i)(f(x))(xs);
      };

      return Data_Maybe.maybe(Data_Maybe.Nothing.value)(go)(index(xs)(i));
    };
  };
};

var span = function span(p) {
  return function (arr) {
    var go = function go($copy_i) {
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(i) {
        var v = index(arr)(i);

        if (v instanceof Data_Maybe.Just) {
          var $65 = p(v.value0);

          if ($65) {
            $copy_i = i + 1 | 0;
            return;
          }

          ;
          $tco_done = true;
          return new Data_Maybe.Just(i);
        }

        ;

        if (v instanceof Data_Maybe.Nothing) {
          $tco_done = true;
          return Data_Maybe.Nothing.value;
        }

        ;
        throw new Error("Failed pattern match at Data.Array (line 966, column 5 - line 968, column 25): " + [v.constructor.name]);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($copy_i);
      }

      ;
      return $tco_result;
    };

    var breakIndex = go(0);

    if (breakIndex instanceof Data_Maybe.Just && breakIndex.value0 === 0) {
      return {
        init: [],
        rest: arr
      };
    }

    ;

    if (breakIndex instanceof Data_Maybe.Just) {
      return {
        init: $foreign.slice(0)(breakIndex.value0)(arr),
        rest: $foreign.slice(breakIndex.value0)($foreign.length(arr))(arr)
      };
    }

    ;

    if (breakIndex instanceof Data_Maybe.Nothing) {
      return {
        init: arr,
        rest: []
      };
    }

    ;
    throw new Error("Failed pattern match at Data.Array (line 953, column 3 - line 959, column 30): " + [breakIndex.constructor.name]);
  };
};

var takeWhile = function takeWhile(p) {
  return function (xs) {
    return span(p)(xs).init;
  };
};

var unzip = function unzip(xs) {
  return function __do() {
    var fsts = Data_Array_ST["new"]();
    var snds = Data_Array_ST["new"]();
    var iter = Data_Array_ST_Iterator.iterator(function (v) {
      return index(xs)(v);
    })();
    Data_Array_ST_Iterator.iterate(iter)(function (v) {
      return function __do() {
        Data_Functor["void"](Control_Monad_ST_Internal.functorST)(Data_Array_ST.push(v.value0)(fsts))();
        return Data_Functor["void"](Control_Monad_ST_Internal.functorST)(Data_Array_ST.push(v.value1)(snds))();
      };
    })();
    var fsts$prime = Data_Array_ST.unsafeFreeze(fsts)();
    var snds$prime = Data_Array_ST.unsafeFreeze(snds)();
    return new Data_Tuple.Tuple(fsts$prime, snds$prime);
  }();
};

var head = function head(xs) {
  return index(xs)(0);
};

var nubBy = function nubBy(comp) {
  return function (xs) {
    var indexedAndSorted = sortBy(function (x) {
      return function (y) {
        return comp(Data_Tuple.snd(x))(Data_Tuple.snd(y));
      };
    })(mapWithIndex(Data_Tuple.Tuple.create)(xs));
    var v = head(indexedAndSorted);

    if (v instanceof Data_Maybe.Nothing) {
      return [];
    }

    ;

    if (v instanceof Data_Maybe.Just) {
      return Data_Functor.map(Data_Functor.functorArray)(Data_Tuple.snd)(sortWith(Data_Ord.ordInt)(Data_Tuple.fst)(function __do() {
        var result = Data_Array_ST.unsafeThaw(singleton(v.value0))();
        Control_Monad_ST_Internal.foreach(indexedAndSorted)(function (v1) {
          return function __do() {
            var lst = Data_Functor.map(Control_Monad_ST_Internal.functorST)(function () {
              var $93 = function () {
                var $95 = Data_Maybe.fromJust();
                return function ($96) {
                  return $95(last($96));
                };
              }();

              return function ($94) {
                return Data_Tuple.snd($93($94));
              };
            }())(Data_Array_ST.unsafeFreeze(result))();
            return Control_Applicative.when(Control_Monad_ST_Internal.applicativeST)(Data_Eq.notEq(Data_Ordering.eqOrdering)(comp(lst)(v1.value1))(Data_Ordering.EQ.value))(Data_Functor["void"](Control_Monad_ST_Internal.functorST)(Data_Array_ST.push(v1)(result)))();
          };
        })();
        return Data_Array_ST.unsafeFreeze(result)();
      }()));
    }

    ;
    throw new Error("Failed pattern match at Data.Array (line 1050, column 17 - line 1058, column 29): " + [v.constructor.name]);
  };
};

var nub = function nub(dictOrd) {
  return nubBy(Data_Ord.compare(dictOrd));
};

var groupBy = function groupBy(op) {
  return function (xs) {
    return function __do() {
      var result = Data_Array_ST["new"]();
      var iter = Data_Array_ST_Iterator.iterator(function (v) {
        return index(xs)(v);
      })();
      Data_Array_ST_Iterator.iterate(iter)(function (x) {
        return Data_Functor["void"](Control_Monad_ST_Internal.functorST)(function __do() {
          var sub = Data_Array_ST["new"]();
          Data_Array_ST.push(x)(sub)();
          Data_Array_ST_Iterator.pushWhile(op(x))(iter)(sub)();
          var grp = Data_Array_ST.unsafeFreeze(sub)();
          return Data_Array_ST.push(grp)(result)();
        });
      })();
      return Data_Array_ST.unsafeFreeze(result)();
    }();
  };
};

var groupAllBy = function groupAllBy(cmp) {
  var $97 = groupBy(function (x) {
    return function (y) {
      return Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(x)(y))(Data_Ordering.EQ.value);
    };
  });
  var $98 = sortBy(cmp);
  return function ($99) {
    return $97($98($99));
  };
};

var groupAll = function groupAll(dictOrd) {
  return groupAllBy(Data_Ord.compare(dictOrd));
};

var group$prime = function group$prime() {
  return function (dictOrd) {
    return groupAll(dictOrd);
  };
};

var group = function group(dictEq) {
  return function (xs) {
    return groupBy(Data_Eq.eq(dictEq))(xs);
  };
};

var fromFoldable = function fromFoldable(dictFoldable) {
  return $foreign.fromFoldableImpl(Data_Foldable.foldr(dictFoldable));
};

var foldr = Data_Foldable.foldr(Data_Foldable.foldableArray);
var foldl = Data_Foldable.foldl(Data_Foldable.foldableArray);

var foldRecM = function foldRecM(dictMonadRec) {
  return function (f) {
    return function (b) {
      return function (array) {
        var go = function go(res) {
          return function (i) {
            if (i >= $foreign.length(array)) {
              return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(new Control_Monad_Rec_Class.Done(res));
            }

            ;

            if (Data_Boolean.otherwise) {
              return Control_Bind.bind(dictMonadRec.Monad0().Bind1())(f(res)(unsafeIndex()(array)(i)))(function (res$prime) {
                return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(new Control_Monad_Rec_Class.Loop({
                  a: res$prime,
                  b: i + 1 | 0
                }));
              });
            }

            ;
            throw new Error("Failed pattern match at Data.Array (line 1269, column 3 - line 1273, column 42): " + [res.constructor.name, i.constructor.name]);
          };
        };

        return Control_Monad_Rec_Class.tailRecM2(dictMonadRec)(go)(b)(0);
      };
    };
  };
};

var foldMap = function foldMap(dictMonoid) {
  return Data_Foldable.foldMap(Data_Foldable.foldableArray)(dictMonoid);
};

var foldM = function foldM(dictMonad) {
  return function (f) {
    return function (b) {
      return $foreign.unconsImpl(function (v) {
        return Control_Applicative.pure(dictMonad.Applicative0())(b);
      })(function (a) {
        return function (as) {
          return Control_Bind.bind(dictMonad.Bind1())(f(b)(a))(function (b$prime) {
            return foldM(dictMonad)(f)(b$prime)(as);
          });
        };
      });
    };
  };
};

var fold = function fold(dictMonoid) {
  return Data_Foldable.fold(Data_Foldable.foldableArray)(dictMonoid);
};

var findMap = $foreign.findMapImpl(Data_Maybe.Nothing.value)(Data_Maybe.isJust);
var findLastIndex = $foreign.findLastIndexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);

var insertBy = function insertBy(cmp) {
  return function (x) {
    return function (ys) {
      var i = Data_Maybe.maybe(0)(function (v) {
        return v + 1 | 0;
      })(findLastIndex(function (y) {
        return Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(x)(y))(Data_Ordering.GT.value);
      })(ys));
      return Data_Maybe.fromJust()(insertAt(i)(x)(ys));
    };
  };
};

var insert = function insert(dictOrd) {
  return insertBy(Data_Ord.compare(dictOrd));
};

var findIndex = $foreign.findIndexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);

var intersectBy = function intersectBy(eq) {
  return function (xs) {
    return function (ys) {
      return $foreign.filter(function (x) {
        return Data_Maybe.isJust(findIndex(eq(x))(ys));
      })(xs);
    };
  };
};

var intersect = function intersect(dictEq) {
  return intersectBy(Data_Eq.eq(dictEq));
};

var find = function find(f) {
  return function (xs) {
    return Data_Functor.map(Data_Maybe.functorMaybe)(unsafeIndex()(xs))(findIndex(f)(xs));
  };
};

var elemLastIndex = function elemLastIndex(dictEq) {
  return function (x) {
    return findLastIndex(function (v) {
      return Data_Eq.eq(dictEq)(v)(x);
    });
  };
};

var elemIndex = function elemIndex(dictEq) {
  return function (x) {
    return findIndex(function (v) {
      return Data_Eq.eq(dictEq)(v)(x);
    });
  };
};

var notElem = function notElem(dictEq) {
  return function (a) {
    return function (arr) {
      return Data_Maybe.isNothing(elemIndex(dictEq)(a)(arr));
    };
  };
};

var elem = function elem(dictEq) {
  return function (a) {
    return function (arr) {
      return Data_Maybe.isJust(elemIndex(dictEq)(a)(arr));
    };
  };
};

var dropWhile = function dropWhile(p) {
  return function (xs) {
    return span(p)(xs).rest;
  };
};

var dropEnd = function dropEnd(n) {
  return function (xs) {
    return take($foreign.length(xs) - n | 0)(xs);
  };
};

var drop = function drop(n) {
  return function (xs) {
    var $80 = n < 1;

    if ($80) {
      return xs;
    }

    ;
    return $foreign.slice(n)($foreign.length(xs))(xs);
  };
};

var takeEnd = function takeEnd(n) {
  return function (xs) {
    return drop($foreign.length(xs) - n | 0)(xs);
  };
};

var deleteAt = $foreign["_deleteAt"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);

var deleteBy = function deleteBy(v) {
  return function (v1) {
    return function (v2) {
      if (v2.length === 0) {
        return [];
      }

      ;
      return Data_Maybe.maybe(v2)(function (i) {
        return Data_Maybe.fromJust()(deleteAt(i)(v2));
      })(findIndex(v(v1))(v2));
    };
  };
};

var unionBy = function unionBy(eq) {
  return function (xs) {
    return function (ys) {
      return Data_Semigroup.append(Data_Semigroup.semigroupArray)(xs)(foldl(Data_Function.flip(deleteBy(eq)))(nubByEq(eq)(ys))(xs));
    };
  };
};

var union = function union(dictEq) {
  return unionBy(Data_Eq.eq(dictEq));
};

var $$delete = function $$delete(dictEq) {
  return deleteBy(Data_Eq.eq(dictEq));
};

var difference = function difference(dictEq) {
  return foldr($$delete(dictEq));
};

var cons = function cons(x) {
  return function (xs) {
    return Data_Semigroup.append(Data_Semigroup.semigroupArray)([x])(xs);
  };
};

var some = function some(dictAlternative) {
  return function (dictLazy) {
    return function (v) {
      return Control_Apply.apply(dictAlternative.Applicative0().Apply0())(Data_Functor.map(dictAlternative.Plus1().Alt0().Functor0())(cons)(v))(Control_Lazy.defer(dictLazy)(function (v1) {
        return many(dictAlternative)(dictLazy)(v);
      }));
    };
  };
};

var many = function many(dictAlternative) {
  return function (dictLazy) {
    return function (v) {
      return Control_Alt.alt(dictAlternative.Plus1().Alt0())(some(dictAlternative)(dictLazy)(v))(Control_Applicative.pure(dictAlternative.Applicative0())([]));
    };
  };
};

var concatMap = Data_Function.flip(Control_Bind.bind(Control_Bind.bindArray));

var mapMaybe = function mapMaybe(f) {
  return concatMap(function () {
    var $100 = Data_Maybe.maybe([])(singleton);
    return function ($101) {
      return $100(f($101));
    };
  }());
};

var filterA = function filterA(dictApplicative) {
  return function (p) {
    var $102 = Data_Functor.map(dictApplicative.Apply0().Functor0())(mapMaybe(function (v) {
      if (v.value1) {
        return new Data_Maybe.Just(v.value0);
      }

      ;
      return Data_Maybe.Nothing.value;
    }));
    var $103 = Data_Traversable.traverse(Data_Traversable.traversableArray)(dictApplicative)(function (x) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Tuple.Tuple.create(x))(p(x));
    });
    return function ($104) {
      return $102($103($104));
    };
  };
};

var catMaybes = mapMaybe(Control_Category.identity(Control_Category.categoryFn));

var alterAt = function alterAt(i) {
  return function (f) {
    return function (xs) {
      var go = function go(x) {
        var v = f(x);

        if (v instanceof Data_Maybe.Nothing) {
          return deleteAt(i)(xs);
        }

        ;

        if (v instanceof Data_Maybe.Just) {
          return updateAt(i)(v.value0)(xs);
        }

        ;
        throw new Error("Failed pattern match at Data.Array (line 591, column 10 - line 593, column 32): " + [v.constructor.name]);
      };

      return Data_Maybe.maybe(Data_Maybe.Nothing.value)(go)(index(xs)(i));
    };
  };
};

module.exports = {
  fromFoldable: fromFoldable,
  toUnfoldable: toUnfoldable,
  singleton: singleton,
  some: some,
  many: many,
  "null": $$null,
  cons: cons,
  snoc: snoc,
  insert: insert,
  insertBy: insertBy,
  head: head,
  last: last,
  tail: tail,
  init: init,
  uncons: uncons,
  unsnoc: unsnoc,
  index: index,
  elem: elem,
  notElem: notElem,
  elemIndex: elemIndex,
  elemLastIndex: elemLastIndex,
  find: find,
  findMap: findMap,
  findIndex: findIndex,
  findLastIndex: findLastIndex,
  insertAt: insertAt,
  deleteAt: deleteAt,
  updateAt: updateAt,
  updateAtIndices: updateAtIndices,
  modifyAt: modifyAt,
  modifyAtIndices: modifyAtIndices,
  alterAt: alterAt,
  intersperse: intersperse,
  concatMap: concatMap,
  splitAt: splitAt,
  filterA: filterA,
  mapMaybe: mapMaybe,
  catMaybes: catMaybes,
  mapWithIndex: mapWithIndex,
  foldl: foldl,
  foldr: foldr,
  foldMap: foldMap,
  fold: fold,
  intercalate: intercalate,
  sort: sort,
  sortBy: sortBy,
  sortWith: sortWith,
  take: take,
  takeEnd: takeEnd,
  takeWhile: takeWhile,
  drop: drop,
  dropEnd: dropEnd,
  dropWhile: dropWhile,
  span: span,
  group: group,
  groupAll: groupAll,
  "group'": group$prime,
  groupBy: groupBy,
  groupAllBy: groupAllBy,
  nub: nub,
  nubEq: nubEq,
  nubBy: nubBy,
  nubByEq: nubByEq,
  union: union,
  unionBy: unionBy,
  "delete": $$delete,
  deleteBy: deleteBy,
  difference: difference,
  intersect: intersect,
  intersectBy: intersectBy,
  zipWithA: zipWithA,
  zip: zip,
  unzip: unzip,
  foldM: foldM,
  foldRecM: foldRecM,
  unsafeIndex: unsafeIndex,
  range: $foreign.range,
  replicate: $foreign.replicate,
  length: $foreign.length,
  reverse: $foreign.reverse,
  concat: $foreign.concat,
  filter: $foreign.filter,
  partition: $foreign.partition,
  scanl: $foreign.scanl,
  scanr: $foreign.scanr,
  slice: $foreign.slice,
  zipWith: $foreign.zipWith,
  any: $foreign.any,
  all: $foreign.all
};
},{"./foreign.js":"output/Data.Array/foreign.js","../Control.Alt/index.js":"output/Control.Alt/index.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Category/index.js":"output/Control.Category/index.js","../Control.Lazy/index.js":"output/Control.Lazy/index.js","../Control.Monad.Rec.Class/index.js":"output/Control.Monad.Rec.Class/index.js","../Control.Monad.ST.Internal/index.js":"output/Control.Monad.ST.Internal/index.js","../Data.Array.ST/index.js":"output/Data.Array.ST/index.js","../Data.Array.ST.Iterator/index.js":"output/Data.Array.ST.Iterator/index.js","../Data.Boolean/index.js":"output/Data.Boolean/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Foldable/index.js":"output/Data.Foldable/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.HeytingAlgebra/index.js":"output/Data.HeytingAlgebra/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Traversable/index.js":"output/Data.Traversable/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Data.Unfoldable/index.js":"output/Data.Unfoldable/index.js"}],"output/Data.Function.Uncurried/foreign.js":[function(require,module,exports) {
"use strict"; // module Data.Function.Uncurried

exports.mkFn0 = function (fn) {
  return function () {
    return fn();
  };
};

exports.mkFn2 = function (fn) {
  /* jshint maxparams: 2 */
  return function (a, b) {
    return fn(a)(b);
  };
};

exports.mkFn3 = function (fn) {
  /* jshint maxparams: 3 */
  return function (a, b, c) {
    return fn(a)(b)(c);
  };
};

exports.mkFn4 = function (fn) {
  /* jshint maxparams: 4 */
  return function (a, b, c, d) {
    return fn(a)(b)(c)(d);
  };
};

exports.mkFn5 = function (fn) {
  /* jshint maxparams: 5 */
  return function (a, b, c, d, e) {
    return fn(a)(b)(c)(d)(e);
  };
};

exports.mkFn6 = function (fn) {
  /* jshint maxparams: 6 */
  return function (a, b, c, d, e, f) {
    return fn(a)(b)(c)(d)(e)(f);
  };
};

exports.mkFn7 = function (fn) {
  /* jshint maxparams: 7 */
  return function (a, b, c, d, e, f, g) {
    return fn(a)(b)(c)(d)(e)(f)(g);
  };
};

exports.mkFn8 = function (fn) {
  /* jshint maxparams: 8 */
  return function (a, b, c, d, e, f, g, h) {
    return fn(a)(b)(c)(d)(e)(f)(g)(h);
  };
};

exports.mkFn9 = function (fn) {
  /* jshint maxparams: 9 */
  return function (a, b, c, d, e, f, g, h, i) {
    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i);
  };
};

exports.mkFn10 = function (fn) {
  /* jshint maxparams: 10 */
  return function (a, b, c, d, e, f, g, h, i, j) {
    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i)(j);
  };
};

exports.runFn0 = function (fn) {
  return fn();
};

exports.runFn2 = function (fn) {
  return function (a) {
    return function (b) {
      return fn(a, b);
    };
  };
};

exports.runFn3 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return fn(a, b, c);
      };
    };
  };
};

exports.runFn4 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return fn(a, b, c, d);
        };
      };
    };
  };
};

exports.runFn5 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return fn(a, b, c, d, e);
          };
        };
      };
    };
  };
};

exports.runFn6 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return fn(a, b, c, d, e, f);
            };
          };
        };
      };
    };
  };
};

exports.runFn7 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return fn(a, b, c, d, e, f, g);
              };
            };
          };
        };
      };
    };
  };
};

exports.runFn8 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return function (h) {
                  return fn(a, b, c, d, e, f, g, h);
                };
              };
            };
          };
        };
      };
    };
  };
};

exports.runFn9 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return function (h) {
                  return function (i) {
                    return fn(a, b, c, d, e, f, g, h, i);
                  };
                };
              };
            };
          };
        };
      };
    };
  };
};

exports.runFn10 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return function (h) {
                  return function (i) {
                    return function (j) {
                      return fn(a, b, c, d, e, f, g, h, i, j);
                    };
                  };
                };
              };
            };
          };
        };
      };
    };
  };
};
},{}],"output/Data.Function.Uncurried/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var runFn1 = function runFn1(f) {
  return f;
};

var mkFn1 = function mkFn1(f) {
  return f;
};

module.exports = {
  mkFn1: mkFn1,
  runFn1: runFn1,
  mkFn0: $foreign.mkFn0,
  mkFn2: $foreign.mkFn2,
  mkFn3: $foreign.mkFn3,
  mkFn4: $foreign.mkFn4,
  mkFn5: $foreign.mkFn5,
  mkFn6: $foreign.mkFn6,
  mkFn7: $foreign.mkFn7,
  mkFn8: $foreign.mkFn8,
  mkFn9: $foreign.mkFn9,
  mkFn10: $foreign.mkFn10,
  runFn0: $foreign.runFn0,
  runFn2: $foreign.runFn2,
  runFn3: $foreign.runFn3,
  runFn4: $foreign.runFn4,
  runFn5: $foreign.runFn5,
  runFn6: $foreign.runFn6,
  runFn7: $foreign.runFn7,
  runFn8: $foreign.runFn8,
  runFn9: $foreign.runFn9,
  runFn10: $foreign.runFn10
};
},{"./foreign.js":"output/Data.Function.Uncurried/foreign.js"}],"output/Data.FunctorWithIndex/foreign.js":[function(require,module,exports) {
"use strict";

exports.mapWithIndexArray = function (f) {
  return function (xs) {
    var l = xs.length;
    var result = Array(l);

    for (var i = 0; i < l; i++) {
      result[i] = f(i)(xs[i]);
    }

    return result;
  };
};
},{}],"output/Data.FunctorWithIndex/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Data_Bifunctor = require("../Data.Bifunctor/index.js");

var Data_Const = require("../Data.Const/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Functor_App = require("../Data.Functor.App/index.js");

var Data_Functor_Compose = require("../Data.Functor.Compose/index.js");

var Data_Functor_Coproduct = require("../Data.Functor.Coproduct/index.js");

var Data_Functor_Product = require("../Data.Functor.Product/index.js");

var Data_Identity = require("../Data.Identity/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Maybe_First = require("../Data.Maybe.First/index.js");

var Data_Maybe_Last = require("../Data.Maybe.Last/index.js");

var Data_Monoid_Additive = require("../Data.Monoid.Additive/index.js");

var Data_Monoid_Conj = require("../Data.Monoid.Conj/index.js");

var Data_Monoid_Disj = require("../Data.Monoid.Disj/index.js");

var Data_Monoid_Dual = require("../Data.Monoid.Dual/index.js");

var Data_Monoid_Multiplicative = require("../Data.Monoid.Multiplicative/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var _mapWithIndex = function mapWithIndex(dict) {
  return dict.mapWithIndex;
};

var mapDefault = function mapDefault(dictFunctorWithIndex) {
  return function (f) {
    return _mapWithIndex(dictFunctorWithIndex)(Data_Function["const"](f));
  };
};

var functorWithIndexTuple = {
  mapWithIndex: function mapWithIndex(f) {
    return Data_Functor.map(Data_Tuple.functorTuple)(f(Data_Unit.unit));
  },
  Functor0: function Functor0() {
    return Data_Tuple.functorTuple;
  }
};

var functorWithIndexProduct = function functorWithIndexProduct(dictFunctorWithIndex) {
  return function (dictFunctorWithIndex1) {
    return {
      mapWithIndex: function mapWithIndex(f) {
        return function (v) {
          return Data_Bifunctor.bimap(Data_Bifunctor.bifunctorTuple)(_mapWithIndex(dictFunctorWithIndex)(function ($28) {
            return f(Data_Either.Left.create($28));
          }))(_mapWithIndex(dictFunctorWithIndex1)(function ($29) {
            return f(Data_Either.Right.create($29));
          }))(v);
        };
      },
      Functor0: function Functor0() {
        return Data_Functor_Product.functorProduct(dictFunctorWithIndex.Functor0())(dictFunctorWithIndex1.Functor0());
      }
    };
  };
};

var functorWithIndexMultiplicative = {
  mapWithIndex: function mapWithIndex(f) {
    return Data_Functor.map(Data_Monoid_Multiplicative.functorMultiplicative)(f(Data_Unit.unit));
  },
  Functor0: function Functor0() {
    return Data_Monoid_Multiplicative.functorMultiplicative;
  }
};
var functorWithIndexMaybe = {
  mapWithIndex: function mapWithIndex(f) {
    return Data_Functor.map(Data_Maybe.functorMaybe)(f(Data_Unit.unit));
  },
  Functor0: function Functor0() {
    return Data_Maybe.functorMaybe;
  }
};
var functorWithIndexLast = {
  mapWithIndex: function mapWithIndex(f) {
    return Data_Functor.map(Data_Maybe_Last.functorLast)(f(Data_Unit.unit));
  },
  Functor0: function Functor0() {
    return Data_Maybe_Last.functorLast;
  }
};
var functorWithIndexIdentity = {
  mapWithIndex: function mapWithIndex(f) {
    return function (v) {
      return f(Data_Unit.unit)(v);
    };
  },
  Functor0: function Functor0() {
    return Data_Identity.functorIdentity;
  }
};
var functorWithIndexFirst = {
  mapWithIndex: function mapWithIndex(f) {
    return Data_Functor.map(Data_Maybe_First.functorFirst)(f(Data_Unit.unit));
  },
  Functor0: function Functor0() {
    return Data_Maybe_First.functorFirst;
  }
};
var functorWithIndexEither = {
  mapWithIndex: function mapWithIndex(f) {
    return Data_Functor.map(Data_Either.functorEither)(f(Data_Unit.unit));
  },
  Functor0: function Functor0() {
    return Data_Either.functorEither;
  }
};
var functorWithIndexDual = {
  mapWithIndex: function mapWithIndex(f) {
    return Data_Functor.map(Data_Monoid_Dual.functorDual)(f(Data_Unit.unit));
  },
  Functor0: function Functor0() {
    return Data_Monoid_Dual.functorDual;
  }
};
var functorWithIndexDisj = {
  mapWithIndex: function mapWithIndex(f) {
    return Data_Functor.map(Data_Monoid_Disj.functorDisj)(f(Data_Unit.unit));
  },
  Functor0: function Functor0() {
    return Data_Monoid_Disj.functorDisj;
  }
};

var functorWithIndexCoproduct = function functorWithIndexCoproduct(dictFunctorWithIndex) {
  return function (dictFunctorWithIndex1) {
    return {
      mapWithIndex: function mapWithIndex(f) {
        return function (v) {
          return Data_Bifunctor.bimap(Data_Bifunctor.bifunctorEither)(_mapWithIndex(dictFunctorWithIndex)(function ($30) {
            return f(Data_Either.Left.create($30));
          }))(_mapWithIndex(dictFunctorWithIndex1)(function ($31) {
            return f(Data_Either.Right.create($31));
          }))(v);
        };
      },
      Functor0: function Functor0() {
        return Data_Functor_Coproduct.functorCoproduct(dictFunctorWithIndex.Functor0())(dictFunctorWithIndex1.Functor0());
      }
    };
  };
};

var functorWithIndexConst = {
  mapWithIndex: function mapWithIndex(v) {
    return function (v1) {
      return v1;
    };
  },
  Functor0: function Functor0() {
    return Data_Const.functorConst;
  }
};
var functorWithIndexConj = {
  mapWithIndex: function mapWithIndex(f) {
    return Data_Functor.map(Data_Monoid_Conj.functorConj)(f(Data_Unit.unit));
  },
  Functor0: function Functor0() {
    return Data_Monoid_Conj.functorConj;
  }
};

var functorWithIndexCompose = function functorWithIndexCompose(dictFunctorWithIndex) {
  return function (dictFunctorWithIndex1) {
    return {
      mapWithIndex: function mapWithIndex(f) {
        return function (v) {
          return _mapWithIndex(dictFunctorWithIndex)(function () {
            var $32 = _mapWithIndex(dictFunctorWithIndex1);

            var $33 = Data_Tuple.curry(f);
            return function ($34) {
              return $32($33($34));
            };
          }())(v);
        };
      },
      Functor0: function Functor0() {
        return Data_Functor_Compose.functorCompose(dictFunctorWithIndex.Functor0())(dictFunctorWithIndex1.Functor0());
      }
    };
  };
};

var functorWithIndexArray = {
  mapWithIndex: $foreign.mapWithIndexArray,
  Functor0: function Functor0() {
    return Data_Functor.functorArray;
  }
};

var functorWithIndexApp = function functorWithIndexApp(dictFunctorWithIndex) {
  return {
    mapWithIndex: function mapWithIndex(f) {
      return function (v) {
        return _mapWithIndex(dictFunctorWithIndex)(f)(v);
      };
    },
    Functor0: function Functor0() {
      return Data_Functor_App.functorApp(dictFunctorWithIndex.Functor0());
    }
  };
};

var functorWithIndexAdditive = {
  mapWithIndex: function mapWithIndex(f) {
    return Data_Functor.map(Data_Monoid_Additive.functorAdditive)(f(Data_Unit.unit));
  },
  Functor0: function Functor0() {
    return Data_Monoid_Additive.functorAdditive;
  }
};
module.exports = {
  mapWithIndex: _mapWithIndex,
  mapDefault: mapDefault,
  functorWithIndexArray: functorWithIndexArray,
  functorWithIndexMaybe: functorWithIndexMaybe,
  functorWithIndexFirst: functorWithIndexFirst,
  functorWithIndexLast: functorWithIndexLast,
  functorWithIndexAdditive: functorWithIndexAdditive,
  functorWithIndexDual: functorWithIndexDual,
  functorWithIndexConj: functorWithIndexConj,
  functorWithIndexDisj: functorWithIndexDisj,
  functorWithIndexMultiplicative: functorWithIndexMultiplicative,
  functorWithIndexEither: functorWithIndexEither,
  functorWithIndexTuple: functorWithIndexTuple,
  functorWithIndexIdentity: functorWithIndexIdentity,
  functorWithIndexConst: functorWithIndexConst,
  functorWithIndexProduct: functorWithIndexProduct,
  functorWithIndexCoproduct: functorWithIndexCoproduct,
  functorWithIndexCompose: functorWithIndexCompose,
  functorWithIndexApp: functorWithIndexApp
};
},{"./foreign.js":"output/Data.FunctorWithIndex/foreign.js","../Data.Bifunctor/index.js":"output/Data.Bifunctor/index.js","../Data.Const/index.js":"output/Data.Const/index.js","../Data.Either/index.js":"output/Data.Either/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Functor.App/index.js":"output/Data.Functor.App/index.js","../Data.Functor.Compose/index.js":"output/Data.Functor.Compose/index.js","../Data.Functor.Coproduct/index.js":"output/Data.Functor.Coproduct/index.js","../Data.Functor.Product/index.js":"output/Data.Functor.Product/index.js","../Data.Identity/index.js":"output/Data.Identity/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Maybe.First/index.js":"output/Data.Maybe.First/index.js","../Data.Maybe.Last/index.js":"output/Data.Maybe.Last/index.js","../Data.Monoid.Additive/index.js":"output/Data.Monoid.Additive/index.js","../Data.Monoid.Conj/index.js":"output/Data.Monoid.Conj/index.js","../Data.Monoid.Disj/index.js":"output/Data.Monoid.Disj/index.js","../Data.Monoid.Dual/index.js":"output/Data.Monoid.Dual/index.js","../Data.Monoid.Multiplicative/index.js":"output/Data.Monoid.Multiplicative/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js"}],"output/Data.FoldableWithIndex/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor_Coproduct = require("../Data.Functor.Coproduct/index.js");

var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Monoid_Conj = require("../Data.Monoid.Conj/index.js");

var Data_Monoid_Disj = require("../Data.Monoid.Disj/index.js");

var Data_Monoid_Dual = require("../Data.Monoid.Dual/index.js");

var Data_Monoid_Endo = require("../Data.Monoid.Endo/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var _foldrWithIndex = function foldrWithIndex(dict) {
  return dict.foldrWithIndex;
};

var traverseWithIndex_ = function traverseWithIndex_(dictApplicative) {
  return function (dictFoldableWithIndex) {
    return function (f) {
      return _foldrWithIndex(dictFoldableWithIndex)(function (i) {
        var $164 = Control_Apply.applySecond(dictApplicative.Apply0());
        var $165 = f(i);
        return function ($166) {
          return $164($165($166));
        };
      })(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
    };
  };
};

var forWithIndex_ = function forWithIndex_(dictApplicative) {
  return function (dictFoldableWithIndex) {
    return Data_Function.flip(traverseWithIndex_(dictApplicative)(dictFoldableWithIndex));
  };
};

var foldrDefault = function foldrDefault(dictFoldableWithIndex) {
  return function (f) {
    return _foldrWithIndex(dictFoldableWithIndex)(Data_Function["const"](f));
  };
};

var _foldlWithIndex = function foldlWithIndex(dict) {
  return dict.foldlWithIndex;
};

var foldlDefault = function foldlDefault(dictFoldableWithIndex) {
  return function (f) {
    return _foldlWithIndex(dictFoldableWithIndex)(Data_Function["const"](f));
  };
};

var foldableWithIndexTuple = {
  foldrWithIndex: function foldrWithIndex(f) {
    return function (z) {
      return function (v) {
        return f(Data_Unit.unit)(v.value1)(z);
      };
    };
  },
  foldlWithIndex: function foldlWithIndex(f) {
    return function (z) {
      return function (v) {
        return f(Data_Unit.unit)(z)(v.value1);
      };
    };
  },
  foldMapWithIndex: function foldMapWithIndex(dictMonoid) {
    return function (f) {
      return function (v) {
        return f(Data_Unit.unit)(v.value1);
      };
    };
  },
  Foldable0: function Foldable0() {
    return Data_Foldable.foldableTuple;
  }
};
var foldableWithIndexMultiplicative = {
  foldrWithIndex: function foldrWithIndex(f) {
    return Data_Foldable.foldr(Data_Foldable.foldableMultiplicative)(f(Data_Unit.unit));
  },
  foldlWithIndex: function foldlWithIndex(f) {
    return Data_Foldable.foldl(Data_Foldable.foldableMultiplicative)(f(Data_Unit.unit));
  },
  foldMapWithIndex: function foldMapWithIndex(dictMonoid) {
    return function (f) {
      return Data_Foldable.foldMap(Data_Foldable.foldableMultiplicative)(dictMonoid)(f(Data_Unit.unit));
    };
  },
  Foldable0: function Foldable0() {
    return Data_Foldable.foldableMultiplicative;
  }
};
var foldableWithIndexMaybe = {
  foldrWithIndex: function foldrWithIndex(f) {
    return Data_Foldable.foldr(Data_Foldable.foldableMaybe)(f(Data_Unit.unit));
  },
  foldlWithIndex: function foldlWithIndex(f) {
    return Data_Foldable.foldl(Data_Foldable.foldableMaybe)(f(Data_Unit.unit));
  },
  foldMapWithIndex: function foldMapWithIndex(dictMonoid) {
    return function (f) {
      return Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(dictMonoid)(f(Data_Unit.unit));
    };
  },
  Foldable0: function Foldable0() {
    return Data_Foldable.foldableMaybe;
  }
};
var foldableWithIndexLast = {
  foldrWithIndex: function foldrWithIndex(f) {
    return Data_Foldable.foldr(Data_Foldable.foldableLast)(f(Data_Unit.unit));
  },
  foldlWithIndex: function foldlWithIndex(f) {
    return Data_Foldable.foldl(Data_Foldable.foldableLast)(f(Data_Unit.unit));
  },
  foldMapWithIndex: function foldMapWithIndex(dictMonoid) {
    return function (f) {
      return Data_Foldable.foldMap(Data_Foldable.foldableLast)(dictMonoid)(f(Data_Unit.unit));
    };
  },
  Foldable0: function Foldable0() {
    return Data_Foldable.foldableLast;
  }
};
var foldableWithIndexIdentity = {
  foldrWithIndex: function foldrWithIndex(f) {
    return function (z) {
      return function (v) {
        return f(Data_Unit.unit)(v)(z);
      };
    };
  },
  foldlWithIndex: function foldlWithIndex(f) {
    return function (z) {
      return function (v) {
        return f(Data_Unit.unit)(z)(v);
      };
    };
  },
  foldMapWithIndex: function foldMapWithIndex(dictMonoid) {
    return function (f) {
      return function (v) {
        return f(Data_Unit.unit)(v);
      };
    };
  },
  Foldable0: function Foldable0() {
    return Data_Foldable.foldableIdentity;
  }
};
var foldableWithIndexFirst = {
  foldrWithIndex: function foldrWithIndex(f) {
    return Data_Foldable.foldr(Data_Foldable.foldableFirst)(f(Data_Unit.unit));
  },
  foldlWithIndex: function foldlWithIndex(f) {
    return Data_Foldable.foldl(Data_Foldable.foldableFirst)(f(Data_Unit.unit));
  },
  foldMapWithIndex: function foldMapWithIndex(dictMonoid) {
    return function (f) {
      return Data_Foldable.foldMap(Data_Foldable.foldableFirst)(dictMonoid)(f(Data_Unit.unit));
    };
  },
  Foldable0: function Foldable0() {
    return Data_Foldable.foldableFirst;
  }
};
var foldableWithIndexEither = {
  foldrWithIndex: function foldrWithIndex(v) {
    return function (z) {
      return function (v1) {
        if (v1 instanceof Data_Either.Left) {
          return z;
        }

        ;

        if (v1 instanceof Data_Either.Right) {
          return v(Data_Unit.unit)(v1.value0)(z);
        }

        ;
        throw new Error("Failed pattern match at Data.FoldableWithIndex (line 164, column 1 - line 170, column 42): " + [v.constructor.name, z.constructor.name, v1.constructor.name]);
      };
    };
  },
  foldlWithIndex: function foldlWithIndex(v) {
    return function (z) {
      return function (v1) {
        if (v1 instanceof Data_Either.Left) {
          return z;
        }

        ;

        if (v1 instanceof Data_Either.Right) {
          return v(Data_Unit.unit)(z)(v1.value0);
        }

        ;
        throw new Error("Failed pattern match at Data.FoldableWithIndex (line 164, column 1 - line 170, column 42): " + [v.constructor.name, z.constructor.name, v1.constructor.name]);
      };
    };
  },
  foldMapWithIndex: function foldMapWithIndex(dictMonoid) {
    return function (v) {
      return function (v1) {
        if (v1 instanceof Data_Either.Left) {
          return Data_Monoid.mempty(dictMonoid);
        }

        ;

        if (v1 instanceof Data_Either.Right) {
          return v(Data_Unit.unit)(v1.value0);
        }

        ;
        throw new Error("Failed pattern match at Data.FoldableWithIndex (line 164, column 1 - line 170, column 42): " + [v.constructor.name, v1.constructor.name]);
      };
    };
  },
  Foldable0: function Foldable0() {
    return Data_Foldable.foldableEither;
  }
};
var foldableWithIndexDual = {
  foldrWithIndex: function foldrWithIndex(f) {
    return Data_Foldable.foldr(Data_Foldable.foldableDual)(f(Data_Unit.unit));
  },
  foldlWithIndex: function foldlWithIndex(f) {
    return Data_Foldable.foldl(Data_Foldable.foldableDual)(f(Data_Unit.unit));
  },
  foldMapWithIndex: function foldMapWithIndex(dictMonoid) {
    return function (f) {
      return Data_Foldable.foldMap(Data_Foldable.foldableDual)(dictMonoid)(f(Data_Unit.unit));
    };
  },
  Foldable0: function Foldable0() {
    return Data_Foldable.foldableDual;
  }
};
var foldableWithIndexDisj = {
  foldrWithIndex: function foldrWithIndex(f) {
    return Data_Foldable.foldr(Data_Foldable.foldableDisj)(f(Data_Unit.unit));
  },
  foldlWithIndex: function foldlWithIndex(f) {
    return Data_Foldable.foldl(Data_Foldable.foldableDisj)(f(Data_Unit.unit));
  },
  foldMapWithIndex: function foldMapWithIndex(dictMonoid) {
    return function (f) {
      return Data_Foldable.foldMap(Data_Foldable.foldableDisj)(dictMonoid)(f(Data_Unit.unit));
    };
  },
  Foldable0: function Foldable0() {
    return Data_Foldable.foldableDisj;
  }
};
var foldableWithIndexConst = {
  foldrWithIndex: function foldrWithIndex(v) {
    return function (z) {
      return function (v1) {
        return z;
      };
    };
  },
  foldlWithIndex: function foldlWithIndex(v) {
    return function (z) {
      return function (v1) {
        return z;
      };
    };
  },
  foldMapWithIndex: function foldMapWithIndex(dictMonoid) {
    return function (v) {
      return function (v1) {
        return Data_Monoid.mempty(dictMonoid);
      };
    };
  },
  Foldable0: function Foldable0() {
    return Data_Foldable.foldableConst;
  }
};
var foldableWithIndexConj = {
  foldrWithIndex: function foldrWithIndex(f) {
    return Data_Foldable.foldr(Data_Foldable.foldableConj)(f(Data_Unit.unit));
  },
  foldlWithIndex: function foldlWithIndex(f) {
    return Data_Foldable.foldl(Data_Foldable.foldableConj)(f(Data_Unit.unit));
  },
  foldMapWithIndex: function foldMapWithIndex(dictMonoid) {
    return function (f) {
      return Data_Foldable.foldMap(Data_Foldable.foldableConj)(dictMonoid)(f(Data_Unit.unit));
    };
  },
  Foldable0: function Foldable0() {
    return Data_Foldable.foldableConj;
  }
};
var foldableWithIndexAdditive = {
  foldrWithIndex: function foldrWithIndex(f) {
    return Data_Foldable.foldr(Data_Foldable.foldableAdditive)(f(Data_Unit.unit));
  },
  foldlWithIndex: function foldlWithIndex(f) {
    return Data_Foldable.foldl(Data_Foldable.foldableAdditive)(f(Data_Unit.unit));
  },
  foldMapWithIndex: function foldMapWithIndex(dictMonoid) {
    return function (f) {
      return Data_Foldable.foldMap(Data_Foldable.foldableAdditive)(dictMonoid)(f(Data_Unit.unit));
    };
  },
  Foldable0: function Foldable0() {
    return Data_Foldable.foldableAdditive;
  }
};

var foldWithIndexM = function foldWithIndexM(dictFoldableWithIndex) {
  return function (dictMonad) {
    return function (f) {
      return function (a0) {
        return _foldlWithIndex(dictFoldableWithIndex)(function (i) {
          return function (ma) {
            return function (b) {
              return Control_Bind.bind(dictMonad.Bind1())(ma)(Data_Function.flip(f(i))(b));
            };
          };
        })(Control_Applicative.pure(dictMonad.Applicative0())(a0));
      };
    };
  };
};

var foldMapWithIndexDefaultR = function foldMapWithIndexDefaultR(dictFoldableWithIndex) {
  return function (dictMonoid) {
    return function (f) {
      return _foldrWithIndex(dictFoldableWithIndex)(function (i) {
        return function (x) {
          return function (acc) {
            return Data_Semigroup.append(dictMonoid.Semigroup0())(f(i)(x))(acc);
          };
        };
      })(Data_Monoid.mempty(dictMonoid));
    };
  };
};

var foldableWithIndexArray = {
  foldrWithIndex: function foldrWithIndex(f) {
    return function (z) {
      var $167 = Data_Foldable.foldr(Data_Foldable.foldableArray)(function (v) {
        return function (y) {
          return f(v.value0)(v.value1)(y);
        };
      })(z);
      var $168 = Data_FunctorWithIndex.mapWithIndex(Data_FunctorWithIndex.functorWithIndexArray)(Data_Tuple.Tuple.create);
      return function ($169) {
        return $167($168($169));
      };
    };
  },
  foldlWithIndex: function foldlWithIndex(f) {
    return function (z) {
      var $170 = Data_Foldable.foldl(Data_Foldable.foldableArray)(function (y) {
        return function (v) {
          return f(v.value0)(y)(v.value1);
        };
      })(z);
      var $171 = Data_FunctorWithIndex.mapWithIndex(Data_FunctorWithIndex.functorWithIndexArray)(Data_Tuple.Tuple.create);
      return function ($172) {
        return $170($171($172));
      };
    };
  },
  foldMapWithIndex: function foldMapWithIndex(dictMonoid) {
    return foldMapWithIndexDefaultR(foldableWithIndexArray)(dictMonoid);
  },
  Foldable0: function Foldable0() {
    return Data_Foldable.foldableArray;
  }
};

var foldMapWithIndexDefaultL = function foldMapWithIndexDefaultL(dictFoldableWithIndex) {
  return function (dictMonoid) {
    return function (f) {
      return _foldlWithIndex(dictFoldableWithIndex)(function (i) {
        return function (acc) {
          return function (x) {
            return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f(i)(x));
          };
        };
      })(Data_Monoid.mempty(dictMonoid));
    };
  };
};

var _foldMapWithIndex = function foldMapWithIndex(dict) {
  return dict.foldMapWithIndex;
};

var foldableWithIndexApp = function foldableWithIndexApp(dictFoldableWithIndex) {
  return {
    foldrWithIndex: function foldrWithIndex(f) {
      return function (z) {
        return function (v) {
          return _foldrWithIndex(dictFoldableWithIndex)(f)(z)(v);
        };
      };
    },
    foldlWithIndex: function foldlWithIndex(f) {
      return function (z) {
        return function (v) {
          return _foldlWithIndex(dictFoldableWithIndex)(f)(z)(v);
        };
      };
    },
    foldMapWithIndex: function foldMapWithIndex(dictMonoid) {
      return function (f) {
        return function (v) {
          return _foldMapWithIndex(dictFoldableWithIndex)(dictMonoid)(f)(v);
        };
      };
    },
    Foldable0: function Foldable0() {
      return Data_Foldable.foldableApp(dictFoldableWithIndex.Foldable0());
    }
  };
};

var foldableWithIndexCompose = function foldableWithIndexCompose(dictFoldableWithIndex) {
  return function (dictFoldableWithIndex1) {
    return {
      foldrWithIndex: function foldrWithIndex(f) {
        return function (i) {
          return function (v) {
            return _foldrWithIndex(dictFoldableWithIndex)(function (a) {
              return Data_Function.flip(_foldrWithIndex(dictFoldableWithIndex1)(Data_Tuple.curry(f)(a)));
            })(i)(v);
          };
        };
      },
      foldlWithIndex: function foldlWithIndex(f) {
        return function (i) {
          return function (v) {
            return _foldlWithIndex(dictFoldableWithIndex)(function () {
              var $173 = _foldlWithIndex(dictFoldableWithIndex1);

              var $174 = Data_Tuple.curry(f);
              return function ($175) {
                return $173($174($175));
              };
            }())(i)(v);
          };
        };
      },
      foldMapWithIndex: function foldMapWithIndex(dictMonoid) {
        return function (f) {
          return function (v) {
            return _foldMapWithIndex(dictFoldableWithIndex)(dictMonoid)(function () {
              var $176 = _foldMapWithIndex(dictFoldableWithIndex1)(dictMonoid);

              var $177 = Data_Tuple.curry(f);
              return function ($178) {
                return $176($177($178));
              };
            }())(v);
          };
        };
      },
      Foldable0: function Foldable0() {
        return Data_Foldable.foldableCompose(dictFoldableWithIndex.Foldable0())(dictFoldableWithIndex1.Foldable0());
      }
    };
  };
};

var foldableWithIndexCoproduct = function foldableWithIndexCoproduct(dictFoldableWithIndex) {
  return function (dictFoldableWithIndex1) {
    return {
      foldrWithIndex: function foldrWithIndex(f) {
        return function (z) {
          return Data_Functor_Coproduct.coproduct(_foldrWithIndex(dictFoldableWithIndex)(function ($179) {
            return f(Data_Either.Left.create($179));
          })(z))(_foldrWithIndex(dictFoldableWithIndex1)(function ($180) {
            return f(Data_Either.Right.create($180));
          })(z));
        };
      },
      foldlWithIndex: function foldlWithIndex(f) {
        return function (z) {
          return Data_Functor_Coproduct.coproduct(_foldlWithIndex(dictFoldableWithIndex)(function ($181) {
            return f(Data_Either.Left.create($181));
          })(z))(_foldlWithIndex(dictFoldableWithIndex1)(function ($182) {
            return f(Data_Either.Right.create($182));
          })(z));
        };
      },
      foldMapWithIndex: function foldMapWithIndex(dictMonoid) {
        return function (f) {
          return Data_Functor_Coproduct.coproduct(_foldMapWithIndex(dictFoldableWithIndex)(dictMonoid)(function ($183) {
            return f(Data_Either.Left.create($183));
          }))(_foldMapWithIndex(dictFoldableWithIndex1)(dictMonoid)(function ($184) {
            return f(Data_Either.Right.create($184));
          }));
        };
      },
      Foldable0: function Foldable0() {
        return Data_Foldable.foldableCoproduct(dictFoldableWithIndex.Foldable0())(dictFoldableWithIndex1.Foldable0());
      }
    };
  };
};

var foldableWithIndexProduct = function foldableWithIndexProduct(dictFoldableWithIndex) {
  return function (dictFoldableWithIndex1) {
    return {
      foldrWithIndex: function foldrWithIndex(f) {
        return function (z) {
          return function (v) {
            return _foldrWithIndex(dictFoldableWithIndex)(function ($185) {
              return f(Data_Either.Left.create($185));
            })(_foldrWithIndex(dictFoldableWithIndex1)(function ($186) {
              return f(Data_Either.Right.create($186));
            })(z)(v.value1))(v.value0);
          };
        };
      },
      foldlWithIndex: function foldlWithIndex(f) {
        return function (z) {
          return function (v) {
            return _foldlWithIndex(dictFoldableWithIndex1)(function ($187) {
              return f(Data_Either.Right.create($187));
            })(_foldlWithIndex(dictFoldableWithIndex)(function ($188) {
              return f(Data_Either.Left.create($188));
            })(z)(v.value0))(v.value1);
          };
        };
      },
      foldMapWithIndex: function foldMapWithIndex(dictMonoid) {
        return function (f) {
          return function (v) {
            return Data_Semigroup.append(dictMonoid.Semigroup0())(_foldMapWithIndex(dictFoldableWithIndex)(dictMonoid)(function ($189) {
              return f(Data_Either.Left.create($189));
            })(v.value0))(_foldMapWithIndex(dictFoldableWithIndex1)(dictMonoid)(function ($190) {
              return f(Data_Either.Right.create($190));
            })(v.value1));
          };
        };
      },
      Foldable0: function Foldable0() {
        return Data_Foldable.foldableProduct(dictFoldableWithIndex.Foldable0())(dictFoldableWithIndex1.Foldable0());
      }
    };
  };
};

var foldlWithIndexDefault = function foldlWithIndexDefault(dictFoldableWithIndex) {
  return function (c) {
    return function (u) {
      return function (xs) {
        return Data_Newtype.unwrap()(Data_Newtype.unwrap()(_foldMapWithIndex(dictFoldableWithIndex)(Data_Monoid_Dual.monoidDual(Data_Monoid_Endo.monoidEndo(Control_Category.categoryFn)))(function (i) {
          var $191 = Data_Function.flip(c(i));
          return function ($192) {
            return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo($191($192)));
          };
        })(xs)))(u);
      };
    };
  };
};

var foldrWithIndexDefault = function foldrWithIndexDefault(dictFoldableWithIndex) {
  return function (c) {
    return function (u) {
      return function (xs) {
        return Data_Newtype.unwrap()(_foldMapWithIndex(dictFoldableWithIndex)(Data_Monoid_Endo.monoidEndo(Control_Category.categoryFn))(function (i) {
          var $193 = c(i);
          return function ($194) {
            return Data_Monoid_Endo.Endo($193($194));
          };
        })(xs))(u);
      };
    };
  };
};

var surroundMapWithIndex = function surroundMapWithIndex(dictFoldableWithIndex) {
  return function (dictSemigroup) {
    return function (d) {
      return function (t) {
        return function (f) {
          var joined = function joined(i) {
            return function (a) {
              return function (m) {
                return Data_Semigroup.append(dictSemigroup)(d)(Data_Semigroup.append(dictSemigroup)(t(i)(a))(m));
              };
            };
          };

          return Data_Newtype.unwrap()(_foldMapWithIndex(dictFoldableWithIndex)(Data_Monoid_Endo.monoidEndo(Control_Category.categoryFn))(joined)(f))(d);
        };
      };
    };
  };
};

var foldMapDefault = function foldMapDefault(dictFoldableWithIndex) {
  return function (dictMonoid) {
    return function (f) {
      return _foldMapWithIndex(dictFoldableWithIndex)(dictMonoid)(Data_Function["const"](f));
    };
  };
};

var findWithIndex = function findWithIndex(dictFoldableWithIndex) {
  return function (p) {
    var go = function go(v) {
      return function (v1) {
        return function (v2) {
          if (v1 instanceof Data_Maybe.Nothing && p(v)(v2)) {
            return new Data_Maybe.Just({
              index: v,
              value: v2
            });
          }

          ;
          return v1;
        };
      };
    };

    return _foldlWithIndex(dictFoldableWithIndex)(go)(Data_Maybe.Nothing.value);
  };
};

var findMapWithIndex = function findMapWithIndex(dictFoldableWithIndex) {
  return function (f) {
    var go = function go(v) {
      return function (v1) {
        return function (v2) {
          if (v1 instanceof Data_Maybe.Nothing) {
            return f(v)(v2);
          }

          ;
          return v1;
        };
      };
    };

    return _foldlWithIndex(dictFoldableWithIndex)(go)(Data_Maybe.Nothing.value);
  };
};

var anyWithIndex = function anyWithIndex(dictFoldableWithIndex) {
  return function (dictHeytingAlgebra) {
    return function (t) {
      var $195 = Data_Newtype.unwrap();

      var $196 = _foldMapWithIndex(dictFoldableWithIndex)(Data_Monoid_Disj.monoidDisj(dictHeytingAlgebra))(function (i) {
        var $198 = t(i);
        return function ($199) {
          return Data_Monoid_Disj.Disj($198($199));
        };
      });

      return function ($197) {
        return $195($196($197));
      };
    };
  };
};

var allWithIndex = function allWithIndex(dictFoldableWithIndex) {
  return function (dictHeytingAlgebra) {
    return function (t) {
      var $200 = Data_Newtype.unwrap();

      var $201 = _foldMapWithIndex(dictFoldableWithIndex)(Data_Monoid_Conj.monoidConj(dictHeytingAlgebra))(function (i) {
        var $203 = t(i);
        return function ($204) {
          return Data_Monoid_Conj.Conj($203($204));
        };
      });

      return function ($202) {
        return $200($201($202));
      };
    };
  };
};

module.exports = {
  foldrWithIndex: _foldrWithIndex,
  foldlWithIndex: _foldlWithIndex,
  foldMapWithIndex: _foldMapWithIndex,
  foldrWithIndexDefault: foldrWithIndexDefault,
  foldlWithIndexDefault: foldlWithIndexDefault,
  foldMapWithIndexDefaultR: foldMapWithIndexDefaultR,
  foldMapWithIndexDefaultL: foldMapWithIndexDefaultL,
  foldWithIndexM: foldWithIndexM,
  traverseWithIndex_: traverseWithIndex_,
  forWithIndex_: forWithIndex_,
  surroundMapWithIndex: surroundMapWithIndex,
  allWithIndex: allWithIndex,
  anyWithIndex: anyWithIndex,
  findWithIndex: findWithIndex,
  findMapWithIndex: findMapWithIndex,
  foldrDefault: foldrDefault,
  foldlDefault: foldlDefault,
  foldMapDefault: foldMapDefault,
  foldableWithIndexArray: foldableWithIndexArray,
  foldableWithIndexMaybe: foldableWithIndexMaybe,
  foldableWithIndexFirst: foldableWithIndexFirst,
  foldableWithIndexLast: foldableWithIndexLast,
  foldableWithIndexAdditive: foldableWithIndexAdditive,
  foldableWithIndexDual: foldableWithIndexDual,
  foldableWithIndexDisj: foldableWithIndexDisj,
  foldableWithIndexConj: foldableWithIndexConj,
  foldableWithIndexMultiplicative: foldableWithIndexMultiplicative,
  foldableWithIndexEither: foldableWithIndexEither,
  foldableWithIndexTuple: foldableWithIndexTuple,
  foldableWithIndexIdentity: foldableWithIndexIdentity,
  foldableWithIndexConst: foldableWithIndexConst,
  foldableWithIndexProduct: foldableWithIndexProduct,
  foldableWithIndexCoproduct: foldableWithIndexCoproduct,
  foldableWithIndexCompose: foldableWithIndexCompose,
  foldableWithIndexApp: foldableWithIndexApp
};
},{"../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Category/index.js":"output/Control.Category/index.js","../Data.Either/index.js":"output/Data.Either/index.js","../Data.Foldable/index.js":"output/Data.Foldable/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor.Coproduct/index.js":"output/Data.Functor.Coproduct/index.js","../Data.FunctorWithIndex/index.js":"output/Data.FunctorWithIndex/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Monoid/index.js":"output/Data.Monoid/index.js","../Data.Monoid.Conj/index.js":"output/Data.Monoid.Conj/index.js","../Data.Monoid.Disj/index.js":"output/Data.Monoid.Disj/index.js","../Data.Monoid.Dual/index.js":"output/Data.Monoid.Dual/index.js","../Data.Monoid.Endo/index.js":"output/Data.Monoid.Endo/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js"}],"output/Data.TraversableWithIndex/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_FoldableWithIndex = require("../Data.FoldableWithIndex/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Functor_App = require("../Data.Functor.App/index.js");

var Data_Functor_Compose = require("../Data.Functor.Compose/index.js");

var Data_Functor_Coproduct = require("../Data.Functor.Coproduct/index.js");

var Data_Functor_Product = require("../Data.Functor.Product/index.js");

var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");

var Data_Identity = require("../Data.Identity/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_Traversable_Accum = require("../Data.Traversable.Accum/index.js");

var Data_Traversable_Accum_Internal = require("../Data.Traversable.Accum.Internal/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var traverseWithIndexDefault = function traverseWithIndexDefault(dictTraversableWithIndex) {
  return function (dictApplicative) {
    return function (f) {
      var $64 = Data_Traversable.sequence(dictTraversableWithIndex.Traversable2())(dictApplicative);
      var $65 = Data_FunctorWithIndex.mapWithIndex(dictTraversableWithIndex.FunctorWithIndex0())(f);
      return function ($66) {
        return $64($65($66));
      };
    };
  };
};

var _traverseWithIndex = function traverseWithIndex(dict) {
  return dict.traverseWithIndex;
};

var traverseDefault = function traverseDefault(dictTraversableWithIndex) {
  return function (dictApplicative) {
    return function (f) {
      return _traverseWithIndex(dictTraversableWithIndex)(dictApplicative)(Data_Function["const"](f));
    };
  };
};

var traversableWithIndexTuple = {
  traverseWithIndex: function traverseWithIndex(dictApplicative) {
    return function (f) {
      return function (v) {
        return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Tuple.Tuple.create(v.value0))(f(Data_Unit.unit)(v.value1));
      };
    };
  },
  FunctorWithIndex0: function FunctorWithIndex0() {
    return Data_FunctorWithIndex.functorWithIndexTuple;
  },
  FoldableWithIndex1: function FoldableWithIndex1() {
    return Data_FoldableWithIndex.foldableWithIndexTuple;
  },
  Traversable2: function Traversable2() {
    return Data_Traversable.traversableTuple;
  }
};

var traversableWithIndexProduct = function traversableWithIndexProduct(dictTraversableWithIndex) {
  return function (dictTraversableWithIndex1) {
    return {
      traverseWithIndex: function traverseWithIndex(dictApplicative) {
        return function (f) {
          return function (v) {
            return Control_Apply.lift2(dictApplicative.Apply0())(Data_Functor_Product.product)(_traverseWithIndex(dictTraversableWithIndex)(dictApplicative)(function ($67) {
              return f(Data_Either.Left.create($67));
            })(v.value0))(_traverseWithIndex(dictTraversableWithIndex1)(dictApplicative)(function ($68) {
              return f(Data_Either.Right.create($68));
            })(v.value1));
          };
        };
      },
      FunctorWithIndex0: function FunctorWithIndex0() {
        return Data_FunctorWithIndex.functorWithIndexProduct(dictTraversableWithIndex.FunctorWithIndex0())(dictTraversableWithIndex1.FunctorWithIndex0());
      },
      FoldableWithIndex1: function FoldableWithIndex1() {
        return Data_FoldableWithIndex.foldableWithIndexProduct(dictTraversableWithIndex.FoldableWithIndex1())(dictTraversableWithIndex1.FoldableWithIndex1());
      },
      Traversable2: function Traversable2() {
        return Data_Traversable.traversableProduct(dictTraversableWithIndex.Traversable2())(dictTraversableWithIndex1.Traversable2());
      }
    };
  };
};

var traversableWithIndexMultiplicative = {
  traverseWithIndex: function traverseWithIndex(dictApplicative) {
    return function (f) {
      return Data_Traversable.traverse(Data_Traversable.traversableMultiplicative)(dictApplicative)(f(Data_Unit.unit));
    };
  },
  FunctorWithIndex0: function FunctorWithIndex0() {
    return Data_FunctorWithIndex.functorWithIndexMultiplicative;
  },
  FoldableWithIndex1: function FoldableWithIndex1() {
    return Data_FoldableWithIndex.foldableWithIndexMultiplicative;
  },
  Traversable2: function Traversable2() {
    return Data_Traversable.traversableMultiplicative;
  }
};
var traversableWithIndexMaybe = {
  traverseWithIndex: function traverseWithIndex(dictApplicative) {
    return function (f) {
      return Data_Traversable.traverse(Data_Traversable.traversableMaybe)(dictApplicative)(f(Data_Unit.unit));
    };
  },
  FunctorWithIndex0: function FunctorWithIndex0() {
    return Data_FunctorWithIndex.functorWithIndexMaybe;
  },
  FoldableWithIndex1: function FoldableWithIndex1() {
    return Data_FoldableWithIndex.foldableWithIndexMaybe;
  },
  Traversable2: function Traversable2() {
    return Data_Traversable.traversableMaybe;
  }
};
var traversableWithIndexLast = {
  traverseWithIndex: function traverseWithIndex(dictApplicative) {
    return function (f) {
      return Data_Traversable.traverse(Data_Traversable.traversableLast)(dictApplicative)(f(Data_Unit.unit));
    };
  },
  FunctorWithIndex0: function FunctorWithIndex0() {
    return Data_FunctorWithIndex.functorWithIndexLast;
  },
  FoldableWithIndex1: function FoldableWithIndex1() {
    return Data_FoldableWithIndex.foldableWithIndexLast;
  },
  Traversable2: function Traversable2() {
    return Data_Traversable.traversableLast;
  }
};
var traversableWithIndexIdentity = {
  traverseWithIndex: function traverseWithIndex(dictApplicative) {
    return function (f) {
      return function (v) {
        return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Identity.Identity)(f(Data_Unit.unit)(v));
      };
    };
  },
  FunctorWithIndex0: function FunctorWithIndex0() {
    return Data_FunctorWithIndex.functorWithIndexIdentity;
  },
  FoldableWithIndex1: function FoldableWithIndex1() {
    return Data_FoldableWithIndex.foldableWithIndexIdentity;
  },
  Traversable2: function Traversable2() {
    return Data_Traversable.traversableIdentity;
  }
};
var traversableWithIndexFirst = {
  traverseWithIndex: function traverseWithIndex(dictApplicative) {
    return function (f) {
      return Data_Traversable.traverse(Data_Traversable.traversableFirst)(dictApplicative)(f(Data_Unit.unit));
    };
  },
  FunctorWithIndex0: function FunctorWithIndex0() {
    return Data_FunctorWithIndex.functorWithIndexFirst;
  },
  FoldableWithIndex1: function FoldableWithIndex1() {
    return Data_FoldableWithIndex.foldableWithIndexFirst;
  },
  Traversable2: function Traversable2() {
    return Data_Traversable.traversableFirst;
  }
};
var traversableWithIndexEither = {
  traverseWithIndex: function traverseWithIndex(dictApplicative) {
    return function (v) {
      return function (v1) {
        if (v1 instanceof Data_Either.Left) {
          return Control_Applicative.pure(dictApplicative)(new Data_Either.Left(v1.value0));
        }

        ;

        if (v1 instanceof Data_Either.Right) {
          return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Either.Right.create)(v(Data_Unit.unit)(v1.value0));
        }

        ;
        throw new Error("Failed pattern match at Data.TraversableWithIndex (line 95, column 1 - line 97, column 53): " + [v.constructor.name, v1.constructor.name]);
      };
    };
  },
  FunctorWithIndex0: function FunctorWithIndex0() {
    return Data_FunctorWithIndex.functorWithIndexEither;
  },
  FoldableWithIndex1: function FoldableWithIndex1() {
    return Data_FoldableWithIndex.foldableWithIndexEither;
  },
  Traversable2: function Traversable2() {
    return Data_Traversable.traversableEither;
  }
};
var traversableWithIndexDual = {
  traverseWithIndex: function traverseWithIndex(dictApplicative) {
    return function (f) {
      return Data_Traversable.traverse(Data_Traversable.traversableDual)(dictApplicative)(f(Data_Unit.unit));
    };
  },
  FunctorWithIndex0: function FunctorWithIndex0() {
    return Data_FunctorWithIndex.functorWithIndexDual;
  },
  FoldableWithIndex1: function FoldableWithIndex1() {
    return Data_FoldableWithIndex.foldableWithIndexDual;
  },
  Traversable2: function Traversable2() {
    return Data_Traversable.traversableDual;
  }
};
var traversableWithIndexDisj = {
  traverseWithIndex: function traverseWithIndex(dictApplicative) {
    return function (f) {
      return Data_Traversable.traverse(Data_Traversable.traversableDisj)(dictApplicative)(f(Data_Unit.unit));
    };
  },
  FunctorWithIndex0: function FunctorWithIndex0() {
    return Data_FunctorWithIndex.functorWithIndexDisj;
  },
  FoldableWithIndex1: function FoldableWithIndex1() {
    return Data_FoldableWithIndex.foldableWithIndexDisj;
  },
  Traversable2: function Traversable2() {
    return Data_Traversable.traversableDisj;
  }
};

var traversableWithIndexCoproduct = function traversableWithIndexCoproduct(dictTraversableWithIndex) {
  return function (dictTraversableWithIndex1) {
    return {
      traverseWithIndex: function traverseWithIndex(dictApplicative) {
        return function (f) {
          return Data_Functor_Coproduct.coproduct(function () {
            var $69 = Data_Functor.map(dictApplicative.Apply0().Functor0())(function ($72) {
              return Data_Functor_Coproduct.Coproduct(Data_Either.Left.create($72));
            });

            var $70 = _traverseWithIndex(dictTraversableWithIndex)(dictApplicative)(function ($73) {
              return f(Data_Either.Left.create($73));
            });

            return function ($71) {
              return $69($70($71));
            };
          }())(function () {
            var $74 = Data_Functor.map(dictApplicative.Apply0().Functor0())(function ($77) {
              return Data_Functor_Coproduct.Coproduct(Data_Either.Right.create($77));
            });

            var $75 = _traverseWithIndex(dictTraversableWithIndex1)(dictApplicative)(function ($78) {
              return f(Data_Either.Right.create($78));
            });

            return function ($76) {
              return $74($75($76));
            };
          }());
        };
      },
      FunctorWithIndex0: function FunctorWithIndex0() {
        return Data_FunctorWithIndex.functorWithIndexCoproduct(dictTraversableWithIndex.FunctorWithIndex0())(dictTraversableWithIndex1.FunctorWithIndex0());
      },
      FoldableWithIndex1: function FoldableWithIndex1() {
        return Data_FoldableWithIndex.foldableWithIndexCoproduct(dictTraversableWithIndex.FoldableWithIndex1())(dictTraversableWithIndex1.FoldableWithIndex1());
      },
      Traversable2: function Traversable2() {
        return Data_Traversable.traversableCoproduct(dictTraversableWithIndex.Traversable2())(dictTraversableWithIndex1.Traversable2());
      }
    };
  };
};

var traversableWithIndexConst = {
  traverseWithIndex: function traverseWithIndex(dictApplicative) {
    return function (v) {
      return function (v1) {
        return Control_Applicative.pure(dictApplicative)(v1);
      };
    };
  },
  FunctorWithIndex0: function FunctorWithIndex0() {
    return Data_FunctorWithIndex.functorWithIndexConst;
  },
  FoldableWithIndex1: function FoldableWithIndex1() {
    return Data_FoldableWithIndex.foldableWithIndexConst;
  },
  Traversable2: function Traversable2() {
    return Data_Traversable.traversableConst;
  }
};
var traversableWithIndexConj = {
  traverseWithIndex: function traverseWithIndex(dictApplicative) {
    return function (f) {
      return Data_Traversable.traverse(Data_Traversable.traversableConj)(dictApplicative)(f(Data_Unit.unit));
    };
  },
  FunctorWithIndex0: function FunctorWithIndex0() {
    return Data_FunctorWithIndex.functorWithIndexConj;
  },
  FoldableWithIndex1: function FoldableWithIndex1() {
    return Data_FoldableWithIndex.foldableWithIndexConj;
  },
  Traversable2: function Traversable2() {
    return Data_Traversable.traversableConj;
  }
};

var traversableWithIndexCompose = function traversableWithIndexCompose(dictTraversableWithIndex) {
  return function (dictTraversableWithIndex1) {
    return {
      traverseWithIndex: function traverseWithIndex(dictApplicative) {
        return function (f) {
          return function (v) {
            return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Functor_Compose.Compose)(_traverseWithIndex(dictTraversableWithIndex)(dictApplicative)(function () {
              var $79 = _traverseWithIndex(dictTraversableWithIndex1)(dictApplicative);

              var $80 = Data_Tuple.curry(f);
              return function ($81) {
                return $79($80($81));
              };
            }())(v));
          };
        };
      },
      FunctorWithIndex0: function FunctorWithIndex0() {
        return Data_FunctorWithIndex.functorWithIndexCompose(dictTraversableWithIndex.FunctorWithIndex0())(dictTraversableWithIndex1.FunctorWithIndex0());
      },
      FoldableWithIndex1: function FoldableWithIndex1() {
        return Data_FoldableWithIndex.foldableWithIndexCompose(dictTraversableWithIndex.FoldableWithIndex1())(dictTraversableWithIndex1.FoldableWithIndex1());
      },
      Traversable2: function Traversable2() {
        return Data_Traversable.traversableCompose(dictTraversableWithIndex.Traversable2())(dictTraversableWithIndex1.Traversable2());
      }
    };
  };
};

var traversableWithIndexArray = {
  traverseWithIndex: function traverseWithIndex(dictApplicative) {
    return traverseWithIndexDefault(traversableWithIndexArray)(dictApplicative);
  },
  FunctorWithIndex0: function FunctorWithIndex0() {
    return Data_FunctorWithIndex.functorWithIndexArray;
  },
  FoldableWithIndex1: function FoldableWithIndex1() {
    return Data_FoldableWithIndex.foldableWithIndexArray;
  },
  Traversable2: function Traversable2() {
    return Data_Traversable.traversableArray;
  }
};

var traversableWithIndexApp = function traversableWithIndexApp(dictTraversableWithIndex) {
  return {
    traverseWithIndex: function traverseWithIndex(dictApplicative) {
      return function (f) {
        return function (v) {
          return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Functor_App.App)(_traverseWithIndex(dictTraversableWithIndex)(dictApplicative)(f)(v));
        };
      };
    },
    FunctorWithIndex0: function FunctorWithIndex0() {
      return Data_FunctorWithIndex.functorWithIndexApp(dictTraversableWithIndex.FunctorWithIndex0());
    },
    FoldableWithIndex1: function FoldableWithIndex1() {
      return Data_FoldableWithIndex.foldableWithIndexApp(dictTraversableWithIndex.FoldableWithIndex1());
    },
    Traversable2: function Traversable2() {
      return Data_Traversable.traversableApp(dictTraversableWithIndex.Traversable2());
    }
  };
};

var traversableWithIndexAdditive = {
  traverseWithIndex: function traverseWithIndex(dictApplicative) {
    return function (f) {
      return Data_Traversable.traverse(Data_Traversable.traversableAdditive)(dictApplicative)(f(Data_Unit.unit));
    };
  },
  FunctorWithIndex0: function FunctorWithIndex0() {
    return Data_FunctorWithIndex.functorWithIndexAdditive;
  },
  FoldableWithIndex1: function FoldableWithIndex1() {
    return Data_FoldableWithIndex.foldableWithIndexAdditive;
  },
  Traversable2: function Traversable2() {
    return Data_Traversable.traversableAdditive;
  }
};

var mapAccumRWithIndex = function mapAccumRWithIndex(dictTraversableWithIndex) {
  return function (f) {
    return function (s0) {
      return function (xs) {
        return Data_Traversable_Accum_Internal.stateR(_traverseWithIndex(dictTraversableWithIndex)(Data_Traversable_Accum_Internal.applicativeStateR)(function (i) {
          return function (a) {
            return function (s) {
              return f(i)(s)(a);
            };
          };
        })(xs))(s0);
      };
    };
  };
};

var scanrWithIndex = function scanrWithIndex(dictTraversableWithIndex) {
  return function (f) {
    return function (b0) {
      return function (xs) {
        return mapAccumRWithIndex(dictTraversableWithIndex)(function (i) {
          return function (b) {
            return function (a) {
              var b$prime = f(i)(a)(b);
              return {
                accum: b$prime,
                value: b$prime
              };
            };
          };
        })(b0)(xs).value;
      };
    };
  };
};

var mapAccumLWithIndex = function mapAccumLWithIndex(dictTraversableWithIndex) {
  return function (f) {
    return function (s0) {
      return function (xs) {
        return Data_Traversable_Accum_Internal.stateL(_traverseWithIndex(dictTraversableWithIndex)(Data_Traversable_Accum_Internal.applicativeStateL)(function (i) {
          return function (a) {
            return function (s) {
              return f(i)(s)(a);
            };
          };
        })(xs))(s0);
      };
    };
  };
};

var scanlWithIndex = function scanlWithIndex(dictTraversableWithIndex) {
  return function (f) {
    return function (b0) {
      return function (xs) {
        return mapAccumLWithIndex(dictTraversableWithIndex)(function (i) {
          return function (b) {
            return function (a) {
              var b$prime = f(i)(b)(a);
              return {
                accum: b$prime,
                value: b$prime
              };
            };
          };
        })(b0)(xs).value;
      };
    };
  };
};

var forWithIndex = function forWithIndex(dictApplicative) {
  return function (dictTraversableWithIndex) {
    return Data_Function.flip(_traverseWithIndex(dictTraversableWithIndex)(dictApplicative));
  };
};

module.exports = {
  traverseWithIndex: _traverseWithIndex,
  traverseWithIndexDefault: traverseWithIndexDefault,
  forWithIndex: forWithIndex,
  scanlWithIndex: scanlWithIndex,
  mapAccumLWithIndex: mapAccumLWithIndex,
  scanrWithIndex: scanrWithIndex,
  mapAccumRWithIndex: mapAccumRWithIndex,
  traverseDefault: traverseDefault,
  traversableWithIndexArray: traversableWithIndexArray,
  traversableWithIndexMaybe: traversableWithIndexMaybe,
  traversableWithIndexFirst: traversableWithIndexFirst,
  traversableWithIndexLast: traversableWithIndexLast,
  traversableWithIndexAdditive: traversableWithIndexAdditive,
  traversableWithIndexDual: traversableWithIndexDual,
  traversableWithIndexConj: traversableWithIndexConj,
  traversableWithIndexDisj: traversableWithIndexDisj,
  traversableWithIndexMultiplicative: traversableWithIndexMultiplicative,
  traversableWithIndexEither: traversableWithIndexEither,
  traversableWithIndexTuple: traversableWithIndexTuple,
  traversableWithIndexIdentity: traversableWithIndexIdentity,
  traversableWithIndexConst: traversableWithIndexConst,
  traversableWithIndexProduct: traversableWithIndexProduct,
  traversableWithIndexCoproduct: traversableWithIndexCoproduct,
  traversableWithIndexCompose: traversableWithIndexCompose,
  traversableWithIndexApp: traversableWithIndexApp
};
},{"../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Data.Either/index.js":"output/Data.Either/index.js","../Data.FoldableWithIndex/index.js":"output/Data.FoldableWithIndex/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Functor.App/index.js":"output/Data.Functor.App/index.js","../Data.Functor.Compose/index.js":"output/Data.Functor.Compose/index.js","../Data.Functor.Coproduct/index.js":"output/Data.Functor.Coproduct/index.js","../Data.Functor.Product/index.js":"output/Data.Functor.Product/index.js","../Data.FunctorWithIndex/index.js":"output/Data.FunctorWithIndex/index.js","../Data.Identity/index.js":"output/Data.Identity/index.js","../Data.Traversable/index.js":"output/Data.Traversable/index.js","../Data.Traversable.Accum/index.js":"output/Data.Traversable.Accum/index.js","../Data.Traversable.Accum.Internal/index.js":"output/Data.Traversable.Accum.Internal/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js"}],"output/Foreign.Object.ST/foreign.js":[function(require,module,exports) {
"use strict";

exports["new"] = function () {
  return {};
};

exports.peekImpl = function (just) {
  return function (nothing) {
    return function (k) {
      return function (m) {
        return function () {
          return {}.hasOwnProperty.call(m, k) ? just(m[k]) : nothing;
        };
      };
    };
  };
};

exports.poke = function (k) {
  return function (v) {
    return function (m) {
      return function () {
        m[k] = v;
        return m;
      };
    };
  };
};

exports["delete"] = function (k) {
  return function (m) {
    return function () {
      delete m[k];
      return m;
    };
  };
};
},{}],"output/Foreign.Object.ST/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var peek = $foreign.peekImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
module.exports = {
  peek: peek,
  "new": $foreign["new"],
  poke: $foreign.poke,
  "delete": $foreign["delete"]
};
},{"./foreign.js":"output/Foreign.Object.ST/foreign.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js"}],"output/Foreign.Object/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Monad_ST_Internal = require("../Control.Monad.ST.Internal/index.js");

var Data_Array = require("../Data.Array/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Function_Uncurried = require("../Data.Function.Uncurried/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_TraversableWithIndex = require("../Data.TraversableWithIndex/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unfoldable = require("../Data.Unfoldable/index.js");

var Foreign_Object_ST = require("../Foreign.Object.ST/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var values = $foreign.toArrayWithKey(function (v) {
  return function (v1) {
    return v1;
  };
});

var toUnfoldable = function toUnfoldable(dictUnfoldable) {
  var $35 = Data_Array.toUnfoldable(dictUnfoldable);
  var $36 = $foreign.toArrayWithKey(Data_Tuple.Tuple.create);
  return function ($37) {
    return $35($36($37));
  };
};

var toAscUnfoldable = function toAscUnfoldable(dictUnfoldable) {
  var $38 = Data_Array.toUnfoldable(dictUnfoldable);
  var $39 = Data_Array.sortWith(Data_Ord.ordString)(Data_Tuple.fst);
  var $40 = $foreign.toArrayWithKey(Data_Tuple.Tuple.create);
  return function ($41) {
    return $38($39($40($41)));
  };
};

var toAscArray = toAscUnfoldable(Data_Unfoldable.unfoldableArray);
var toArray = $foreign.toArrayWithKey(Data_Tuple.Tuple.create);
var thawST = $foreign["_copyST"];

var singleton = function singleton(k) {
  return function (v) {
    return $foreign.runST(Control_Bind.bindFlipped(Control_Monad_ST_Internal.bindST)(Foreign_Object_ST.poke(k)(v))(Foreign_Object_ST["new"]));
  };
};

var showObject = function showObject(dictShow) {
  return {
    show: function show(m) {
      return "(fromFoldable " + (Data_Show.show(Data_Show.showArray(Data_Tuple.showTuple(Data_Show.showString)(dictShow)))(toArray(m)) + ")");
    }
  };
};

var mutate = function mutate(f) {
  return function (m) {
    return $foreign.runST(function __do() {
      var s = thawST(m)();
      f(s)();
      return s;
    });
  };
};

var member = Data_Function_Uncurried.runFn4($foreign["_lookup"])(false)(Data_Function["const"](true));

var mapWithKey = function mapWithKey(f) {
  return function (m) {
    return $foreign["_mapWithKey"](m, f);
  };
};

var lookup = Data_Function_Uncurried.runFn4($foreign["_lookup"])(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);

var isSubmap = function isSubmap(dictEq) {
  return function (m1) {
    return function (m2) {
      var f = function f(k) {
        return function (v) {
          return $foreign["_lookup"](false, Data_Eq.eq(dictEq)(v), k, m2);
        };
      };

      return $foreign.all(f)(m1);
    };
  };
};

var isEmpty = $foreign.all(function (v) {
  return function (v1) {
    return false;
  };
});

var insert = function insert(k) {
  return function (v) {
    return mutate(Foreign_Object_ST.poke(k)(v));
  };
};

var functorObject = {
  map: function map(f) {
    return function (m) {
      return $foreign["_fmapObject"](m, f);
    };
  }
};
var functorWithIndexObject = {
  mapWithIndex: mapWithKey,
  Functor0: function Functor0() {
    return functorObject;
  }
};

var fromHomogeneous = function fromHomogeneous() {
  return Unsafe_Coerce.unsafeCoerce;
};

var fromFoldableWith = function fromFoldableWith(dictFoldable) {
  return function (f) {
    return function (l) {
      return $foreign.runST(function __do() {
        var s = Foreign_Object_ST["new"]();
        Data_Foldable.for_(Control_Monad_ST_Internal.applicativeST)(dictFoldable)(l)(function (v) {
          return function __do() {
            var v$prime = $foreign["_lookupST"](v.value1, f(v.value1), v.value0, s)();
            return Foreign_Object_ST.poke(v.value0)(v$prime)(s)();
          };
        })();
        return s;
      });
    };
  };
};

var fromFoldable = function fromFoldable(dictFoldable) {
  return function (l) {
    return $foreign.runST(function __do() {
      var s = Foreign_Object_ST["new"]();
      Control_Monad_ST_Internal.foreach(Data_Array.fromFoldable(dictFoldable)(l))(function (v) {
        return Data_Functor["void"](Control_Monad_ST_Internal.functorST)(Foreign_Object_ST.poke(v.value0)(v.value1)(s));
      })();
      return s;
    });
  };
};

var freezeST = $foreign["_copyST"];

var foldMaybe = function foldMaybe(f) {
  return function (z) {
    return function (m) {
      return $foreign["_foldSCObject"](m, z, f, Data_Maybe.fromMaybe);
    };
  };
};

var foldM = function foldM(dictMonad) {
  return function (f) {
    return function (z) {
      return $foreign["_foldM"](Control_Bind.bind(dictMonad.Bind1()))(f)(Control_Applicative.pure(dictMonad.Applicative0())(z));
    };
  };
};

var union = function union(m) {
  return mutate(function (s) {
    return foldM(Control_Monad_ST_Internal.monadST)(function (s$prime) {
      return function (k) {
        return function (v) {
          return Foreign_Object_ST.poke(k)(v)(s$prime);
        };
      };
    })(s)(m);
  });
};

var unions = function unions(dictFoldable) {
  return Data_Foldable.foldl(dictFoldable)(union)($foreign.empty);
};

var unionWith = function unionWith(f) {
  return function (m1) {
    return function (m2) {
      return mutate(function (s1) {
        return foldM(Control_Monad_ST_Internal.monadST)(function (s2) {
          return function (k) {
            return function (v1) {
              return Foreign_Object_ST.poke(k)($foreign["_lookup"](v1, function (v2) {
                return f(v1)(v2);
              }, k, m2))(s2);
            };
          };
        })(s1)(m1);
      })(m2);
    };
  };
};

var semigroupObject = function semigroupObject(dictSemigroup) {
  return {
    append: unionWith(Data_Semigroup.append(dictSemigroup))
  };
};

var monoidObject = function monoidObject(dictSemigroup) {
  return {
    mempty: $foreign.empty,
    Semigroup0: function Semigroup0() {
      return semigroupObject(dictSemigroup);
    }
  };
};

var fold = $foreign["_foldM"](Data_Function.applyFlipped);

var _foldMap = function foldMap(dictMonoid) {
  return function (f) {
    return fold(function (acc) {
      return function (k) {
        return function (v) {
          return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f(k)(v));
        };
      };
    })(Data_Monoid.mempty(dictMonoid));
  };
};

var foldableObject = {
  foldl: function foldl(f) {
    return fold(function (z) {
      return function (v) {
        return f(z);
      };
    });
  },
  foldr: function foldr(f) {
    return function (z) {
      return function (m) {
        return Data_Foldable.foldr(Data_Foldable.foldableArray)(f)(z)(values(m));
      };
    };
  },
  foldMap: function foldMap(dictMonoid) {
    return function (f) {
      return _foldMap(dictMonoid)(Data_Function["const"](f));
    };
  }
};
var foldableWithIndexObject = {
  foldlWithIndex: function foldlWithIndex(f) {
    return fold(Data_Function.flip(f));
  },
  foldrWithIndex: function foldrWithIndex(f) {
    return function (z) {
      return function (m) {
        return Data_Foldable.foldr(Data_Foldable.foldableArray)(Data_Tuple.uncurry(f))(z)($foreign.toArrayWithKey(Data_Tuple.Tuple.create)(m));
      };
    };
  },
  foldMapWithIndex: function foldMapWithIndex(dictMonoid) {
    return _foldMap(dictMonoid);
  },
  Foldable0: function Foldable0() {
    return foldableObject;
  }
};
var traversableWithIndexObject = {
  traverseWithIndex: function traverseWithIndex(dictApplicative) {
    return function (f) {
      return function (ms) {
        return fold(function (acc) {
          return function (k) {
            return function (v) {
              return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Function.flip(insert(k)))(acc))(f(k)(v));
            };
          };
        })(Control_Applicative.pure(dictApplicative)($foreign.empty))(ms);
      };
    };
  },
  FunctorWithIndex0: function FunctorWithIndex0() {
    return functorWithIndexObject;
  },
  FoldableWithIndex1: function FoldableWithIndex1() {
    return foldableWithIndexObject;
  },
  Traversable2: function Traversable2() {
    return traversableObject;
  }
};
var traversableObject = {
  traverse: function traverse(dictApplicative) {
    var $42 = Data_TraversableWithIndex.traverseWithIndex(traversableWithIndexObject)(dictApplicative);
    return function ($43) {
      return $42(Data_Function["const"]($43));
    };
  },
  sequence: function sequence(dictApplicative) {
    return Data_Traversable.traverse(traversableObject)(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
  },
  Functor0: function Functor0() {
    return functorObject;
  },
  Foldable1: function Foldable1() {
    return foldableObject;
  }
};

var filterWithKey = function filterWithKey(predicate) {
  return function (m) {
    var go = function () {
      var step = function step(acc) {
        return function (k) {
          return function (v) {
            var $32 = predicate(k)(v);

            if ($32) {
              return Foreign_Object_ST.poke(k)(v)(acc);
            }

            ;
            return Control_Applicative.pure(Control_Monad_ST_Internal.applicativeST)(acc);
          };
        };
      };

      return function __do() {
        var m$prime = Foreign_Object_ST["new"]();
        return foldM(Control_Monad_ST_Internal.monadST)(step)(m$prime)(m)();
      };
    }();

    return $foreign.runST(go);
  };
};

var filterKeys = function filterKeys(predicate) {
  return filterWithKey(function ($44) {
    return Data_Function["const"](predicate($44));
  });
};

var filter = function filter(predicate) {
  return filterWithKey(Data_Function["const"](predicate));
};

var eqObject = function eqObject(dictEq) {
  return {
    eq: function eq(m1) {
      return function (m2) {
        return isSubmap(dictEq)(m1)(m2) && isSubmap(dictEq)(m2)(m1);
      };
    }
  };
};

var ordObject = function ordObject(dictOrd) {
  return {
    compare: function compare(m1) {
      return function (m2) {
        return Data_Ord.compare(Data_Ord.ordArray(Data_Tuple.ordTuple(Data_Ord.ordString)(dictOrd)))(toAscArray(m1))(toAscArray(m2));
      };
    },
    Eq0: function Eq0() {
      return eqObject(dictOrd.Eq0());
    }
  };
};

var eq1Object = {
  eq1: function eq1(dictEq) {
    return Data_Eq.eq(eqObject(dictEq));
  }
};

var $$delete = function $$delete(k) {
  return mutate(Foreign_Object_ST["delete"](k));
};

var pop = function pop(k) {
  return function (m) {
    return Data_Functor.mapFlipped(Data_Maybe.functorMaybe)(lookup(k)(m))(function (a) {
      return new Data_Tuple.Tuple(a, $$delete(k)(m));
    });
  };
};

var alter = function alter(f) {
  return function (k) {
    return function (m) {
      var v = f(lookup(k)(m));

      if (v instanceof Data_Maybe.Nothing) {
        return $$delete(k)(m);
      }

      ;

      if (v instanceof Data_Maybe.Just) {
        return insert(k)(v.value0)(m);
      }

      ;
      throw new Error("Failed pattern match at Foreign.Object (line 209, column 15 - line 211, column 25): " + [v.constructor.name]);
    };
  };
};

var update = function update(f) {
  return function (k) {
    return function (m) {
      return alter(Data_Maybe.maybe(Data_Maybe.Nothing.value)(f))(k)(m);
    };
  };
};

module.exports = {
  isEmpty: isEmpty,
  singleton: singleton,
  insert: insert,
  lookup: lookup,
  toUnfoldable: toUnfoldable,
  toAscUnfoldable: toAscUnfoldable,
  fromFoldable: fromFoldable,
  fromFoldableWith: fromFoldableWith,
  fromHomogeneous: fromHomogeneous,
  "delete": $$delete,
  pop: pop,
  member: member,
  alter: alter,
  update: update,
  mapWithKey: mapWithKey,
  filterWithKey: filterWithKey,
  filterKeys: filterKeys,
  filter: filter,
  values: values,
  union: union,
  unionWith: unionWith,
  unions: unions,
  isSubmap: isSubmap,
  fold: fold,
  foldMap: _foldMap,
  foldM: foldM,
  foldMaybe: foldMaybe,
  thawST: thawST,
  freezeST: freezeST,
  functorObject: functorObject,
  functorWithIndexObject: functorWithIndexObject,
  foldableObject: foldableObject,
  foldableWithIndexObject: foldableWithIndexObject,
  traversableObject: traversableObject,
  traversableWithIndexObject: traversableWithIndexObject,
  eqObject: eqObject,
  eq1Object: eq1Object,
  ordObject: ordObject,
  showObject: showObject,
  semigroupObject: semigroupObject,
  monoidObject: monoidObject,
  empty: $foreign.empty,
  size: $foreign.size,
  keys: $foreign.keys,
  all: $foreign.all,
  runST: $foreign.runST,
  toArrayWithKey: $foreign.toArrayWithKey
};
},{"./foreign.js":"output/Foreign.Object/foreign.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Category/index.js":"output/Control.Category/index.js","../Control.Monad.ST.Internal/index.js":"output/Control.Monad.ST.Internal/index.js","../Data.Array/index.js":"output/Data.Array/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Foldable/index.js":"output/Data.Foldable/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Function.Uncurried/index.js":"output/Data.Function.Uncurried/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Monoid/index.js":"output/Data.Monoid/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Data.Traversable/index.js":"output/Data.Traversable/index.js","../Data.TraversableWithIndex/index.js":"output/Data.TraversableWithIndex/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Data.Unfoldable/index.js":"output/Data.Unfoldable/index.js","../Foreign.Object.ST/index.js":"output/Foreign.Object.ST/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js"}],"output/Data.Argonaut.Core/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Foreign_Object = require("../Foreign.Object/index.js");

var verbJsonType = function verbJsonType(def) {
  return function (f) {
    return function (g) {
      return g(def)(f);
    };
  };
};

var toJsonType = verbJsonType(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
var jsonZero = $foreign.fromNumber(0.0);
var jsonTrue = $foreign.fromBoolean(true);

var jsonSingletonObject = function jsonSingletonObject(key) {
  return function (val) {
    return $foreign.fromObject(Foreign_Object.singleton(key)(val));
  };
};

var jsonSingletonArray = function jsonSingletonArray(j) {
  return $foreign.fromArray([j]);
};

var jsonFalse = $foreign.fromBoolean(false);
var jsonEmptyString = $foreign.fromString("");
var jsonEmptyObject = $foreign.fromObject(Foreign_Object.empty);
var jsonEmptyArray = $foreign.fromArray([]);
var isJsonType = verbJsonType(false)(Data_Function["const"](true));
var ordJson = {
  compare: function compare(a) {
    return function (b) {
      return $foreign["_compare"](Data_Ordering.EQ.value, Data_Ordering.GT.value, Data_Ordering.LT.value, a, b);
    };
  },
  Eq0: function Eq0() {
    return eqJson;
  }
};
var eqJson = {
  eq: function eq(j1) {
    return function (j2) {
      return Data_Eq.eq(Data_Ordering.eqOrdering)(Data_Ord.compare(ordJson)(j1)(j2))(Data_Ordering.EQ.value);
    };
  }
};
var eqJNull = {
  eq: function eq(v) {
    return function (v1) {
      return true;
    };
  }
};
var ordJNull = {
  compare: function compare(v) {
    return function (v1) {
      return Data_Ordering.EQ.value;
    };
  },
  Eq0: function Eq0() {
    return eqJNull;
  }
};

var caseJsonString = function caseJsonString(d) {
  return function (f) {
    return function (j) {
      return $foreign["_caseJson"](Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), f, Data_Function["const"](d), Data_Function["const"](d), j);
    };
  };
};

var isString = isJsonType(caseJsonString);
var toString = toJsonType(caseJsonString);

var caseJsonObject = function caseJsonObject(d) {
  return function (f) {
    return function (j) {
      return $foreign["_caseJson"](Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), f, j);
    };
  };
};

var isObject = isJsonType(caseJsonObject);
var toObject = toJsonType(caseJsonObject);

var caseJsonNumber = function caseJsonNumber(d) {
  return function (f) {
    return function (j) {
      return $foreign["_caseJson"](Data_Function["const"](d), Data_Function["const"](d), f, Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), j);
    };
  };
};

var isNumber = isJsonType(caseJsonNumber);
var toNumber = toJsonType(caseJsonNumber);

var caseJsonNull = function caseJsonNull(d) {
  return function (f) {
    return function (j) {
      return $foreign["_caseJson"](f, Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), j);
    };
  };
};

var isNull = isJsonType(caseJsonNull);
var toNull = toJsonType(caseJsonNull);

var caseJsonBoolean = function caseJsonBoolean(d) {
  return function (f) {
    return function (j) {
      return $foreign["_caseJson"](Data_Function["const"](d), f, Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), j);
    };
  };
};

var isBoolean = isJsonType(caseJsonBoolean);
var toBoolean = toJsonType(caseJsonBoolean);

var caseJsonArray = function caseJsonArray(d) {
  return function (f) {
    return function (j) {
      return $foreign["_caseJson"](Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), f, Data_Function["const"](d), j);
    };
  };
};

var isArray = isJsonType(caseJsonArray);
var toArray = toJsonType(caseJsonArray);

var caseJson = function caseJson(a) {
  return function (b) {
    return function (c) {
      return function (d) {
        return function (e) {
          return function (f) {
            return function (json) {
              return $foreign["_caseJson"](a, b, c, d, e, f, json);
            };
          };
        };
      };
    };
  };
};

module.exports = {
  caseJson: caseJson,
  caseJsonNull: caseJsonNull,
  caseJsonBoolean: caseJsonBoolean,
  caseJsonNumber: caseJsonNumber,
  caseJsonString: caseJsonString,
  caseJsonArray: caseJsonArray,
  caseJsonObject: caseJsonObject,
  isNull: isNull,
  isBoolean: isBoolean,
  isNumber: isNumber,
  isString: isString,
  isArray: isArray,
  isObject: isObject,
  toNull: toNull,
  toBoolean: toBoolean,
  toNumber: toNumber,
  toString: toString,
  toArray: toArray,
  toObject: toObject,
  jsonTrue: jsonTrue,
  jsonFalse: jsonFalse,
  jsonZero: jsonZero,
  jsonEmptyString: jsonEmptyString,
  jsonEmptyArray: jsonEmptyArray,
  jsonSingletonArray: jsonSingletonArray,
  jsonEmptyObject: jsonEmptyObject,
  jsonSingletonObject: jsonSingletonObject,
  eqJson: eqJson,
  ordJson: ordJson,
  fromBoolean: $foreign.fromBoolean,
  fromNumber: $foreign.fromNumber,
  fromString: $foreign.fromString,
  fromArray: $foreign.fromArray,
  fromObject: $foreign.fromObject,
  jsonNull: $foreign.jsonNull,
  stringify: $foreign.stringify,
  stringifyWithIndent: $foreign.stringifyWithIndent
};
},{"./foreign.js":"output/Data.Argonaut.Core/foreign.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Foreign.Object/index.js":"output/Foreign.Object/index.js"}],"output/Data.Argonaut.Parser/foreign.js":[function(require,module,exports) {
"use strict";

exports._jsonParser = function (fail, succ, s) {
  try {
    return succ(JSON.parse(s));
  } catch (e) {
    return fail(e.message);
  }
};
},{}],"output/Data.Argonaut.Parser/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Data_Either = require("../Data.Either/index.js");

var jsonParser = function jsonParser(j) {
  return $foreign["_jsonParser"](Data_Either.Left.create, Data_Either.Right.create, j);
};

module.exports = {
  jsonParser: jsonParser
};
},{"./foreign.js":"output/Data.Argonaut.Parser/foreign.js","../Data.Either/index.js":"output/Data.Either/index.js"}],"output/Data.String.Common/foreign.js":[function(require,module,exports) {
"use strict";

exports._localeCompare = function (lt) {
  return function (eq) {
    return function (gt) {
      return function (s1) {
        return function (s2) {
          var result = s1.localeCompare(s2);
          return result < 0 ? lt : result > 0 ? gt : eq;
        };
      };
    };
  };
};

exports.replace = function (s1) {
  return function (s2) {
    return function (s3) {
      return s3.replace(s1, s2);
    };
  };
};

exports.replaceAll = function (s1) {
  return function (s2) {
    return function (s3) {
      return s3.replace(new RegExp(s1.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&"), "g"), s2); // eslint-disable-line no-useless-escape
    };
  };
};

exports.split = function (sep) {
  return function (s) {
    return s.split(sep);
  };
};

exports.toLower = function (s) {
  return s.toLowerCase();
};

exports.toUpper = function (s) {
  return s.toUpperCase();
};

exports.trim = function (s) {
  return s.trim();
};

exports.joinWith = function (s) {
  return function (xs) {
    return xs.join(s);
  };
};
},{}],"output/Data.String.Common/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var $$null = function $$null(s) {
  return s === "";
};

var localeCompare = $foreign["_localeCompare"](Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value);
module.exports = {
  "null": $$null,
  localeCompare: localeCompare,
  replace: $foreign.replace,
  replaceAll: $foreign.replaceAll,
  split: $foreign.split,
  toLower: $foreign.toLower,
  toUpper: $foreign.toUpper,
  trim: $foreign.trim,
  joinWith: $foreign.joinWith
};
},{"./foreign.js":"output/Data.String.Common/foreign.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js"}],"output/JSURI/foreign.js":[function(require,module,exports) {
"use strict"; // A helper which transforms the result ofencodeURIComponent to be compliant
// with RFC3896, as described in the MDN documentation here:
//
// https://web.archive.org/web/20201206001047/https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent

function toRFC3896(input) {
  return input.replace(/[!'()*]/g, function (c) {
    return "%" + c.charCodeAt(0).toString(16);
  });
}

exports._encodeURIComponent = function encode(fail, succeed, input) {
  try {
    return succeed(toRFC3896(encodeURIComponent(input)));
  } catch (err) {
    return fail(err);
  }
};

exports._encodeFormURLComponent = function encode(fail, succeed, input) {
  try {
    return succeed(toRFC3896(encodeURIComponent(input)).replace(/%20/g, "+"));
  } catch (err) {
    return fail(err);
  }
};

function _decodeURIComponent(fail, succeed, input) {
  try {
    return succeed(decodeURIComponent(input));
  } catch (err) {
    return fail(err);
  }
}

exports._decodeURIComponent = _decodeURIComponent;

exports._decodeFormURLComponent = function encode(fail, succeed, input) {
  return _decodeURIComponent(fail, succeed, input.replace(/\+/g, " "));
};
},{}],"output/JSURI/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Function_Uncurried = require("../Data.Function.Uncurried/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var $$encodeURIComponent = Data_Function_Uncurried.runFn3($foreign["_encodeURIComponent"])(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create);
var encodeFormURLComponent = Data_Function_Uncurried.runFn3($foreign["_encodeFormURLComponent"])(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create);
var $$decodeURIComponent = Data_Function_Uncurried.runFn3($foreign["_decodeURIComponent"])(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create);
var decodeFormURLComponent = Data_Function_Uncurried.runFn3($foreign["_decodeFormURLComponent"])(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create);
module.exports = {
  "encodeURIComponent": $$encodeURIComponent,
  encodeFormURLComponent: encodeFormURLComponent,
  "decodeURIComponent": $$decodeURIComponent,
  decodeFormURLComponent: decodeFormURLComponent
};
},{"./foreign.js":"output/JSURI/foreign.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Function.Uncurried/index.js":"output/Data.Function.Uncurried/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js"}],"output/Data.FormURLEncoded/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_String_Common = require("../Data.String.Common/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var JSURI = require("../JSURI/index.js");

var FormURLEncoded = function FormURLEncoded(x) {
  return x;
};

var toArray = function toArray(v) {
  return v;
};

var showFormUrlEncoded = {
  show: function show(v) {
    return "(FormURLEncoded " + (Data_Show.show(Data_Show.showArray(Data_Tuple.showTuple(Data_Show.showString)(Data_Maybe.showMaybe(Data_Show.showString))))(v) + ")");
  }
};
var semigroupFormUrlEncoded = Data_Semigroup.semigroupArray;
var ordFormUrlEncoded = Data_Ord.ordArray(Data_Tuple.ordTuple(Data_Ord.ordString)(Data_Maybe.ordMaybe(Data_Ord.ordString)));
var newtypeFormUrlEncoded = {
  Coercible0: function Coercible0() {
    return undefined;
  }
};
var monoidFormUrlEncoded = Data_Monoid.monoidArray;
var fromArray = FormURLEncoded;
var eqFormUrlEncoded = Data_Eq.eqArray(Data_Tuple.eqTuple(Data_Eq.eqString)(Data_Maybe.eqMaybe(Data_Eq.eqString)));

var encode = function () {
  var encodePart = function encodePart(v) {
    if (v.value1 instanceof Data_Maybe.Nothing) {
      return JSURI.encodeFormURLComponent(v.value0);
    }

    ;

    if (v.value1 instanceof Data_Maybe.Just) {
      return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(function (key) {
        return function (val) {
          return key + ("=" + val);
        };
      })(JSURI.encodeFormURLComponent(v.value0)))(JSURI.encodeFormURLComponent(v.value1.value0));
    }

    ;
    throw new Error("Failed pattern match at Data.FormURLEncoded (line 37, column 18 - line 39, column 116): " + [v.constructor.name]);
  };

  var $16 = Data_Functor.map(Data_Maybe.functorMaybe)(Data_String_Common.joinWith("&"));
  var $17 = Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Maybe.applicativeMaybe)(encodePart);
  return function ($18) {
    return $16($17(toArray($18)));
  };
}();

var decode = function () {
  var decodePart = function () {
    var $19 = Data_String_Common.split("=");
    return function ($20) {
      return function (v) {
        if (v.length === 2) {
          return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(function (key) {
            return function (val) {
              return new Data_Tuple.Tuple(key, new Data_Maybe.Just(val));
            };
          })(JSURI.decodeFormURLComponent(v[0])))(JSURI.decodeFormURLComponent(v[1]));
        }

        ;

        if (v.length === 1) {
          return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Tuple.Tuple.create)(JSURI.decodeFormURLComponent(v[0])))(Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Data_Maybe.Nothing.value));
        }

        ;
        return Data_Maybe.Nothing.value;
      }($19($20));
    };
  }();

  var $21 = Data_Functor.map(Data_Maybe.functorMaybe)(FormURLEncoded);
  var $22 = Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Maybe.applicativeMaybe)(decodePart);
  var $23 = Data_String_Common.split("&");
  return function ($24) {
    return $21($22($23($24)));
  };
}();

module.exports = {
  FormURLEncoded: FormURLEncoded,
  fromArray: fromArray,
  toArray: toArray,
  encode: encode,
  decode: decode,
  newtypeFormUrlEncoded: newtypeFormUrlEncoded,
  eqFormUrlEncoded: eqFormUrlEncoded,
  ordFormUrlEncoded: ordFormUrlEncoded,
  semigroupFormUrlEncoded: semigroupFormUrlEncoded,
  monoidFormUrlEncoded: monoidFormUrlEncoded,
  showFormUrlEncoded: showFormUrlEncoded
};
},{"../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Monoid/index.js":"output/Data.Monoid/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Data.String.Common/index.js":"output/Data.String.Common/index.js","../Data.Traversable/index.js":"output/Data.Traversable/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../JSURI/index.js":"output/JSURI/index.js"}],"output/Data.HTTP.Method/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Data_Either = require("../Data.Either/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_String_Common = require("../Data.String.Common/index.js");

var OPTIONS = function () {
  function OPTIONS() {}

  ;
  OPTIONS.value = new OPTIONS();
  return OPTIONS;
}();

var GET = function () {
  function GET() {}

  ;
  GET.value = new GET();
  return GET;
}();

var HEAD = function () {
  function HEAD() {}

  ;
  HEAD.value = new HEAD();
  return HEAD;
}();

var POST = function () {
  function POST() {}

  ;
  POST.value = new POST();
  return POST;
}();

var PUT = function () {
  function PUT() {}

  ;
  PUT.value = new PUT();
  return PUT;
}();

var DELETE = function () {
  function DELETE() {}

  ;
  DELETE.value = new DELETE();
  return DELETE;
}();

var TRACE = function () {
  function TRACE() {}

  ;
  TRACE.value = new TRACE();
  return TRACE;
}();

var CONNECT = function () {
  function CONNECT() {}

  ;
  CONNECT.value = new CONNECT();
  return CONNECT;
}();

var PROPFIND = function () {
  function PROPFIND() {}

  ;
  PROPFIND.value = new PROPFIND();
  return PROPFIND;
}();

var PROPPATCH = function () {
  function PROPPATCH() {}

  ;
  PROPPATCH.value = new PROPPATCH();
  return PROPPATCH;
}();

var MKCOL = function () {
  function MKCOL() {}

  ;
  MKCOL.value = new MKCOL();
  return MKCOL;
}();

var COPY = function () {
  function COPY() {}

  ;
  COPY.value = new COPY();
  return COPY;
}();

var MOVE = function () {
  function MOVE() {}

  ;
  MOVE.value = new MOVE();
  return MOVE;
}();

var LOCK = function () {
  function LOCK() {}

  ;
  LOCK.value = new LOCK();
  return LOCK;
}();

var UNLOCK = function () {
  function UNLOCK() {}

  ;
  UNLOCK.value = new UNLOCK();
  return UNLOCK;
}();

var PATCH = function () {
  function PATCH() {}

  ;
  PATCH.value = new PATCH();
  return PATCH;
}();

var CustomMethod = function CustomMethod(x) {
  return x;
};

var unCustomMethod = function unCustomMethod(v) {
  return v;
};

var showMethod = {
  show: function show(v) {
    if (v instanceof OPTIONS) {
      return "OPTIONS";
    }

    ;

    if (v instanceof GET) {
      return "GET";
    }

    ;

    if (v instanceof HEAD) {
      return "HEAD";
    }

    ;

    if (v instanceof POST) {
      return "POST";
    }

    ;

    if (v instanceof PUT) {
      return "PUT";
    }

    ;

    if (v instanceof DELETE) {
      return "DELETE";
    }

    ;

    if (v instanceof TRACE) {
      return "TRACE";
    }

    ;

    if (v instanceof CONNECT) {
      return "CONNECT";
    }

    ;

    if (v instanceof PROPFIND) {
      return "PROPFIND";
    }

    ;

    if (v instanceof PROPPATCH) {
      return "PROPPATCH";
    }

    ;

    if (v instanceof MKCOL) {
      return "MKCOL";
    }

    ;

    if (v instanceof COPY) {
      return "COPY";
    }

    ;

    if (v instanceof MOVE) {
      return "MOVE";
    }

    ;

    if (v instanceof LOCK) {
      return "LOCK";
    }

    ;

    if (v instanceof UNLOCK) {
      return "UNLOCK";
    }

    ;

    if (v instanceof PATCH) {
      return "PATCH";
    }

    ;
    throw new Error("Failed pattern match at Data.HTTP.Method (line 43, column 1 - line 59, column 23): " + [v.constructor.name]);
  }
};
var showCustomMethod = {
  show: function show(v) {
    return "(CustomMethod " + (Data_Show.show(Data_Show.showString)(v) + ")");
  }
};
var print = Data_Either.either(Data_Show.show(showMethod))(unCustomMethod);

var parse = function parse(handleMethod) {
  return function (handleUnknown) {
    return function (s) {
      var v = Data_String_Common.toUpper(s);

      if (v === "OPTIONS") {
        return handleMethod(OPTIONS.value);
      }

      ;

      if (v === "GET") {
        return handleMethod(GET.value);
      }

      ;

      if (v === "HEAD") {
        return handleMethod(HEAD.value);
      }

      ;

      if (v === "POST") {
        return handleMethod(POST.value);
      }

      ;

      if (v === "PUT") {
        return handleMethod(PUT.value);
      }

      ;

      if (v === "DELETE") {
        return handleMethod(DELETE.value);
      }

      ;

      if (v === "TRACE") {
        return handleMethod(TRACE.value);
      }

      ;

      if (v === "CONNECT") {
        return handleMethod(CONNECT.value);
      }

      ;

      if (v === "PROPFIND") {
        return handleMethod(PROPFIND.value);
      }

      ;

      if (v === "PROPPATCH") {
        return handleMethod(PROPPATCH.value);
      }

      ;

      if (v === "MKCOL") {
        return handleMethod(MKCOL.value);
      }

      ;

      if (v === "COPY") {
        return handleMethod(COPY.value);
      }

      ;

      if (v === "MOVE") {
        return handleMethod(MOVE.value);
      }

      ;

      if (v === "LOCK") {
        return handleMethod(LOCK.value);
      }

      ;

      if (v === "UNLOCK") {
        return handleMethod(UNLOCK.value);
      }

      ;

      if (v === "PATCH") {
        return handleMethod(PATCH.value);
      }

      ;
      return handleUnknown(v);
    };
  };
};

var fromString = parse(Data_Either.Left.create)(function ($28) {
  return Data_Either.Right.create(CustomMethod($28));
});
var eqMethod = {
  eq: function eq(x) {
    return function (y) {
      if (x instanceof OPTIONS && y instanceof OPTIONS) {
        return true;
      }

      ;

      if (x instanceof GET && y instanceof GET) {
        return true;
      }

      ;

      if (x instanceof HEAD && y instanceof HEAD) {
        return true;
      }

      ;

      if (x instanceof POST && y instanceof POST) {
        return true;
      }

      ;

      if (x instanceof PUT && y instanceof PUT) {
        return true;
      }

      ;

      if (x instanceof DELETE && y instanceof DELETE) {
        return true;
      }

      ;

      if (x instanceof TRACE && y instanceof TRACE) {
        return true;
      }

      ;

      if (x instanceof CONNECT && y instanceof CONNECT) {
        return true;
      }

      ;

      if (x instanceof PROPFIND && y instanceof PROPFIND) {
        return true;
      }

      ;

      if (x instanceof PROPPATCH && y instanceof PROPPATCH) {
        return true;
      }

      ;

      if (x instanceof MKCOL && y instanceof MKCOL) {
        return true;
      }

      ;

      if (x instanceof COPY && y instanceof COPY) {
        return true;
      }

      ;

      if (x instanceof MOVE && y instanceof MOVE) {
        return true;
      }

      ;

      if (x instanceof LOCK && y instanceof LOCK) {
        return true;
      }

      ;

      if (x instanceof UNLOCK && y instanceof UNLOCK) {
        return true;
      }

      ;

      if (x instanceof PATCH && y instanceof PATCH) {
        return true;
      }

      ;
      return false;
    };
  }
};
var ordMethod = {
  compare: function compare(x) {
    return function (y) {
      if (x instanceof OPTIONS && y instanceof OPTIONS) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof OPTIONS) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof OPTIONS) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof GET && y instanceof GET) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof GET) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof GET) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof HEAD && y instanceof HEAD) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof HEAD) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof HEAD) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof POST && y instanceof POST) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof POST) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof POST) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof PUT && y instanceof PUT) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof PUT) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof PUT) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof DELETE && y instanceof DELETE) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof DELETE) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof DELETE) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof TRACE && y instanceof TRACE) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof TRACE) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof TRACE) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof CONNECT && y instanceof CONNECT) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof CONNECT) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof CONNECT) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof PROPFIND && y instanceof PROPFIND) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof PROPFIND) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof PROPFIND) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof PROPPATCH && y instanceof PROPPATCH) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof PROPPATCH) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof PROPPATCH) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof MKCOL && y instanceof MKCOL) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof MKCOL) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof MKCOL) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof COPY && y instanceof COPY) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof COPY) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof COPY) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof MOVE && y instanceof MOVE) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof MOVE) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof MOVE) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof LOCK && y instanceof LOCK) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof LOCK) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof LOCK) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof UNLOCK && y instanceof UNLOCK) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof UNLOCK) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof UNLOCK) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof PATCH && y instanceof PATCH) {
        return Data_Ordering.EQ.value;
      }

      ;
      throw new Error("Failed pattern match at Data.HTTP.Method (line 41, column 1 - line 41, column 40): " + [x.constructor.name, y.constructor.name]);
    };
  },
  Eq0: function Eq0() {
    return eqMethod;
  }
};
var eqCustomMethod = {
  eq: function eq(x) {
    return function (y) {
      return x === y;
    };
  }
};
var ordCustomMethod = {
  compare: function compare(x) {
    return function (y) {
      return Data_Ord.compare(Data_Ord.ordString)(x)(y);
    };
  },
  Eq0: function Eq0() {
    return eqCustomMethod;
  }
};
module.exports = {
  OPTIONS: OPTIONS,
  GET: GET,
  HEAD: HEAD,
  POST: POST,
  PUT: PUT,
  DELETE: DELETE,
  TRACE: TRACE,
  CONNECT: CONNECT,
  PROPFIND: PROPFIND,
  PROPPATCH: PROPPATCH,
  MKCOL: MKCOL,
  COPY: COPY,
  MOVE: MOVE,
  LOCK: LOCK,
  UNLOCK: UNLOCK,
  PATCH: PATCH,
  unCustomMethod: unCustomMethod,
  fromString: fromString,
  print: print,
  eqMethod: eqMethod,
  ordMethod: ordMethod,
  showMethod: showMethod,
  eqCustomMethod: eqCustomMethod,
  ordCustomMethod: ordCustomMethod,
  showCustomMethod: showCustomMethod
};
},{"../Data.Either/index.js":"output/Data.Either/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Data.String.Common/index.js":"output/Data.String.Common/index.js"}],"output/Data.NonEmpty/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_FoldableWithIndex = require("../Data.FoldableWithIndex/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semigroup_Foldable = require("../Data.Semigroup.Foldable/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_TraversableWithIndex = require("../Data.TraversableWithIndex/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unfoldable = require("../Data.Unfoldable/index.js");

var NonEmpty = function () {
  function NonEmpty(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  NonEmpty.create = function (value0) {
    return function (value1) {
      return new NonEmpty(value0, value1);
    };
  };

  return NonEmpty;
}();

var unfoldable1NonEmpty = function unfoldable1NonEmpty(dictUnfoldable) {
  return {
    unfoldr1: function unfoldr1(f) {
      return function (b) {
        return Data_Tuple.uncurry(NonEmpty.create)(Data_Functor.map(Data_Tuple.functorTuple)(Data_Unfoldable.unfoldr(dictUnfoldable)(Data_Functor.map(Data_Maybe.functorMaybe)(f)))(f(b)));
      };
    }
  };
};

var tail = function tail(v) {
  return v.value1;
};

var singleton = function singleton(dictPlus) {
  return function (a) {
    return new NonEmpty(a, Control_Plus.empty(dictPlus));
  };
};

var showNonEmpty = function showNonEmpty(dictShow) {
  return function (dictShow1) {
    return {
      show: function show(v) {
        return "(NonEmpty " + (Data_Show.show(dictShow)(v.value0) + (" " + (Data_Show.show(dictShow1)(v.value1) + ")")));
      }
    };
  };
};

var semigroupNonEmpty = function semigroupNonEmpty(dictApplicative) {
  return function (dictSemigroup) {
    return {
      append: function append(v) {
        return function (v1) {
          return new NonEmpty(v.value0, Data_Semigroup.append(dictSemigroup)(v.value1)(Data_Semigroup.append(dictSemigroup)(Control_Applicative.pure(dictApplicative)(v1.value0))(v1.value1)));
        };
      }
    };
  };
};

var oneOf = function oneOf(dictAlternative) {
  return function (v) {
    return Control_Alt.alt(dictAlternative.Plus1().Alt0())(Control_Applicative.pure(dictAlternative.Applicative0())(v.value0))(v.value1);
  };
};

var head = function head(v) {
  return v.value0;
};

var functorNonEmpty = function functorNonEmpty(dictFunctor) {
  return {
    map: function map(f) {
      return function (m) {
        return new NonEmpty(f(m.value0), Data_Functor.map(dictFunctor)(f)(m.value1));
      };
    }
  };
};

var functorWithIndex = function functorWithIndex(dictFunctorWithIndex) {
  return {
    mapWithIndex: function mapWithIndex(f) {
      return function (v) {
        return new NonEmpty(f(Data_Maybe.Nothing.value)(v.value0), Data_FunctorWithIndex.mapWithIndex(dictFunctorWithIndex)(function ($160) {
          return f(Data_Maybe.Just.create($160));
        })(v.value1));
      };
    },
    Functor0: function Functor0() {
      return functorNonEmpty(dictFunctorWithIndex.Functor0());
    }
  };
};

var fromNonEmpty = function fromNonEmpty(f) {
  return function (v) {
    return f(v.value0)(v.value1);
  };
};

var foldableNonEmpty = function foldableNonEmpty(dictFoldable) {
  return {
    foldMap: function foldMap(dictMonoid) {
      return function (f) {
        return function (v) {
          return Data_Semigroup.append(dictMonoid.Semigroup0())(f(v.value0))(Data_Foldable.foldMap(dictFoldable)(dictMonoid)(f)(v.value1));
        };
      };
    },
    foldl: function foldl(f) {
      return function (b) {
        return function (v) {
          return Data_Foldable.foldl(dictFoldable)(f)(f(b)(v.value0))(v.value1);
        };
      };
    },
    foldr: function foldr(f) {
      return function (b) {
        return function (v) {
          return f(v.value0)(Data_Foldable.foldr(dictFoldable)(f)(b)(v.value1));
        };
      };
    }
  };
};

var foldableWithIndexNonEmpty = function foldableWithIndexNonEmpty(dictFoldableWithIndex) {
  return {
    foldMapWithIndex: function foldMapWithIndex(dictMonoid) {
      return function (f) {
        return function (v) {
          return Data_Semigroup.append(dictMonoid.Semigroup0())(f(Data_Maybe.Nothing.value)(v.value0))(Data_FoldableWithIndex.foldMapWithIndex(dictFoldableWithIndex)(dictMonoid)(function ($161) {
            return f(Data_Maybe.Just.create($161));
          })(v.value1));
        };
      };
    },
    foldlWithIndex: function foldlWithIndex(f) {
      return function (b) {
        return function (v) {
          return Data_FoldableWithIndex.foldlWithIndex(dictFoldableWithIndex)(function ($162) {
            return f(Data_Maybe.Just.create($162));
          })(f(Data_Maybe.Nothing.value)(b)(v.value0))(v.value1);
        };
      };
    },
    foldrWithIndex: function foldrWithIndex(f) {
      return function (b) {
        return function (v) {
          return f(Data_Maybe.Nothing.value)(v.value0)(Data_FoldableWithIndex.foldrWithIndex(dictFoldableWithIndex)(function ($163) {
            return f(Data_Maybe.Just.create($163));
          })(b)(v.value1));
        };
      };
    },
    Foldable0: function Foldable0() {
      return foldableNonEmpty(dictFoldableWithIndex.Foldable0());
    }
  };
};

var traversableNonEmpty = function traversableNonEmpty(dictTraversable) {
  return {
    sequence: function sequence(dictApplicative) {
      return function (v) {
        return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map(dictApplicative.Apply0().Functor0())(NonEmpty.create)(v.value0))(Data_Traversable.sequence(dictTraversable)(dictApplicative)(v.value1));
      };
    },
    traverse: function traverse(dictApplicative) {
      return function (f) {
        return function (v) {
          return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map(dictApplicative.Apply0().Functor0())(NonEmpty.create)(f(v.value0)))(Data_Traversable.traverse(dictTraversable)(dictApplicative)(f)(v.value1));
        };
      };
    },
    Functor0: function Functor0() {
      return functorNonEmpty(dictTraversable.Functor0());
    },
    Foldable1: function Foldable1() {
      return foldableNonEmpty(dictTraversable.Foldable1());
    }
  };
};

var traversableWithIndexNonEmpty = function traversableWithIndexNonEmpty(dictTraversableWithIndex) {
  return {
    traverseWithIndex: function traverseWithIndex(dictApplicative) {
      return function (f) {
        return function (v) {
          return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map(dictApplicative.Apply0().Functor0())(NonEmpty.create)(f(Data_Maybe.Nothing.value)(v.value0)))(Data_TraversableWithIndex.traverseWithIndex(dictTraversableWithIndex)(dictApplicative)(function ($164) {
            return f(Data_Maybe.Just.create($164));
          })(v.value1));
        };
      };
    },
    FunctorWithIndex0: function FunctorWithIndex0() {
      return functorWithIndex(dictTraversableWithIndex.FunctorWithIndex0());
    },
    FoldableWithIndex1: function FoldableWithIndex1() {
      return foldableWithIndexNonEmpty(dictTraversableWithIndex.FoldableWithIndex1());
    },
    Traversable2: function Traversable2() {
      return traversableNonEmpty(dictTraversableWithIndex.Traversable2());
    }
  };
};

var foldable1NonEmpty = function foldable1NonEmpty(dictFoldable) {
  return {
    foldMap1: function foldMap1(dictSemigroup) {
      return function (f) {
        return function (v) {
          return Data_Foldable.foldl(dictFoldable)(function (s) {
            return function (a1) {
              return Data_Semigroup.append(dictSemigroup)(s)(f(a1));
            };
          })(f(v.value0))(v.value1);
        };
      };
    },
    foldr1: function foldr1(f) {
      return function (v) {
        return Data_Maybe.maybe(v.value0)(f(v.value0))(Data_Foldable.foldr(dictFoldable)(function (a1) {
          var $165 = Data_Maybe.maybe(a1)(f(a1));
          return function ($166) {
            return Data_Maybe.Just.create($165($166));
          };
        })(Data_Maybe.Nothing.value)(v.value1));
      };
    },
    foldl1: function foldl1(f) {
      return function (v) {
        return Data_Foldable.foldl(dictFoldable)(f)(v.value0)(v.value1);
      };
    },
    Foldable0: function Foldable0() {
      return foldableNonEmpty(dictFoldable);
    }
  };
};

var foldl1 = function foldl1(dictFoldable) {
  return function () {
    return Data_Semigroup_Foldable.foldl1(foldable1NonEmpty(dictFoldable));
  };
};

var eqNonEmpty = function eqNonEmpty(dictEq1) {
  return function (dictEq) {
    return {
      eq: function eq(x) {
        return function (y) {
          return Data_Eq.eq(dictEq)(x.value0)(y.value0) && Data_Eq.eq1(dictEq1)(dictEq)(x.value1)(y.value1);
        };
      }
    };
  };
};

var ordNonEmpty = function ordNonEmpty(dictOrd1) {
  return function (dictOrd) {
    return {
      compare: function compare(x) {
        return function (y) {
          var v = Data_Ord.compare(dictOrd)(x.value0)(y.value0);

          if (v instanceof Data_Ordering.LT) {
            return Data_Ordering.LT.value;
          }

          ;

          if (v instanceof Data_Ordering.GT) {
            return Data_Ordering.GT.value;
          }

          ;
          return Data_Ord.compare1(dictOrd1)(dictOrd)(x.value1)(y.value1);
        };
      },
      Eq0: function Eq0() {
        return eqNonEmpty(dictOrd1.Eq10())(dictOrd.Eq0());
      }
    };
  };
};

var eq1NonEmpty = function eq1NonEmpty(dictEq1) {
  return {
    eq1: function eq1(dictEq) {
      return Data_Eq.eq(eqNonEmpty(dictEq1)(dictEq));
    }
  };
};

var ord1NonEmpty = function ord1NonEmpty(dictOrd1) {
  return {
    compare1: function compare1(dictOrd) {
      return Data_Ord.compare(ordNonEmpty(dictOrd1)(dictOrd));
    },
    Eq10: function Eq10() {
      return eq1NonEmpty(dictOrd1.Eq10());
    }
  };
};

module.exports = {
  NonEmpty: NonEmpty,
  singleton: singleton,
  foldl1: foldl1,
  fromNonEmpty: fromNonEmpty,
  oneOf: oneOf,
  head: head,
  tail: tail,
  showNonEmpty: showNonEmpty,
  eqNonEmpty: eqNonEmpty,
  eq1NonEmpty: eq1NonEmpty,
  ordNonEmpty: ordNonEmpty,
  ord1NonEmpty: ord1NonEmpty,
  functorNonEmpty: functorNonEmpty,
  functorWithIndex: functorWithIndex,
  foldableNonEmpty: foldableNonEmpty,
  foldableWithIndexNonEmpty: foldableWithIndexNonEmpty,
  traversableNonEmpty: traversableNonEmpty,
  traversableWithIndexNonEmpty: traversableWithIndexNonEmpty,
  foldable1NonEmpty: foldable1NonEmpty,
  unfoldable1NonEmpty: unfoldable1NonEmpty,
  semigroupNonEmpty: semigroupNonEmpty
};
},{"../Control.Alt/index.js":"output/Control.Alt/index.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Plus/index.js":"output/Control.Plus/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Foldable/index.js":"output/Data.Foldable/index.js","../Data.FoldableWithIndex/index.js":"output/Data.FoldableWithIndex/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.FunctorWithIndex/index.js":"output/Data.FunctorWithIndex/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Semigroup.Foldable/index.js":"output/Data.Semigroup.Foldable/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Data.Traversable/index.js":"output/Data.Traversable/index.js","../Data.TraversableWithIndex/index.js":"output/Data.TraversableWithIndex/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Data.Unfoldable/index.js":"output/Data.Unfoldable/index.js"}],"output/Data.List.Types/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_FoldableWithIndex = require("../Data.FoldableWithIndex/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_NonEmpty = require("../Data.NonEmpty/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semigroup_Traversable = require("../Data.Semigroup.Traversable/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_TraversableWithIndex = require("../Data.TraversableWithIndex/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Nil = function () {
  function Nil() {}

  ;
  Nil.value = new Nil();
  return Nil;
}();

var Cons = function () {
  function Cons(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  Cons.create = function (value0) {
    return function (value1) {
      return new Cons(value0, value1);
    };
  };

  return Cons;
}();

var NonEmptyList = function NonEmptyList(x) {
  return x;
};

var toList = function toList(v) {
  return new Cons(v.value0, v.value1);
};

var newtypeNonEmptyList = {
  Coercible0: function Coercible0() {
    return undefined;
  }
};

var nelCons = function nelCons(a) {
  return function (v) {
    return new Data_NonEmpty.NonEmpty(a, new Cons(v.value0, v.value1));
  };
};

var listMap = function listMap(f) {
  var chunkedRevMap = function chunkedRevMap($copy_chunksAcc) {
    return function ($copy_v) {
      var $tco_var_chunksAcc = $copy_chunksAcc;
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(chunksAcc, v) {
        if (v instanceof Cons && v.value1 instanceof Cons && v.value1.value1 instanceof Cons) {
          $tco_var_chunksAcc = new Cons(v, chunksAcc);
          $copy_v = v.value1.value1.value1;
          return;
        }

        ;

        var unrolledMap = function unrolledMap(v1) {
          if (v1 instanceof Cons && v1.value1 instanceof Cons && v1.value1.value1 instanceof Nil) {
            return new Cons(f(v1.value0), new Cons(f(v1.value1.value0), Nil.value));
          }

          ;

          if (v1 instanceof Cons && v1.value1 instanceof Nil) {
            return new Cons(f(v1.value0), Nil.value);
          }

          ;
          return Nil.value;
        };

        var reverseUnrolledMap = function reverseUnrolledMap($copy_v1) {
          return function ($copy_acc) {
            var $tco_var_v1 = $copy_v1;
            var $tco_done1 = false;
            var $tco_result;

            function $tco_loop(v1, acc) {
              if (v1 instanceof Cons && v1.value0 instanceof Cons && v1.value0.value1 instanceof Cons && v1.value0.value1.value1 instanceof Cons) {
                $tco_var_v1 = v1.value1;
                $copy_acc = new Cons(f(v1.value0.value0), new Cons(f(v1.value0.value1.value0), new Cons(f(v1.value0.value1.value1.value0), acc)));
                return;
              }

              ;
              $tco_done1 = true;
              return acc;
            }

            ;

            while (!$tco_done1) {
              $tco_result = $tco_loop($tco_var_v1, $copy_acc);
            }

            ;
            return $tco_result;
          };
        };

        $tco_done = true;
        return reverseUnrolledMap(chunksAcc)(unrolledMap(v));
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_chunksAcc, $copy_v);
      }

      ;
      return $tco_result;
    };
  };

  return chunkedRevMap(Nil.value);
};

var functorList = {
  map: listMap
};
var functorNonEmptyList = Data_NonEmpty.functorNonEmpty(functorList);
var foldableList = {
  foldr: function foldr(f) {
    return function (b) {
      var rev = function () {
        var go = function go($copy_acc) {
          return function ($copy_v) {
            var $tco_var_acc = $copy_acc;
            var $tco_done = false;
            var $tco_result;

            function $tco_loop(acc, v) {
              if (v instanceof Nil) {
                $tco_done = true;
                return acc;
              }

              ;

              if (v instanceof Cons) {
                $tco_var_acc = new Cons(v.value0, acc);
                $copy_v = v.value1;
                return;
              }

              ;
              throw new Error("Failed pattern match at Data.List.Types (line 108, column 7 - line 108, column 23): " + [acc.constructor.name, v.constructor.name]);
            }

            ;

            while (!$tco_done) {
              $tco_result = $tco_loop($tco_var_acc, $copy_v);
            }

            ;
            return $tco_result;
          };
        };

        return go(Nil.value);
      }();

      var $205 = Data_Foldable.foldl(foldableList)(Data_Function.flip(f))(b);
      return function ($206) {
        return $205(rev($206));
      };
    };
  },
  foldl: function foldl(f) {
    var go = function go($copy_b) {
      return function ($copy_v) {
        var $tco_var_b = $copy_b;
        var $tco_done1 = false;
        var $tco_result;

        function $tco_loop(b, v) {
          if (v instanceof Nil) {
            $tco_done1 = true;
            return b;
          }

          ;

          if (v instanceof Cons) {
            $tco_var_b = f(b)(v.value0);
            $copy_v = v.value1;
            return;
          }

          ;
          throw new Error("Failed pattern match at Data.List.Types (line 112, column 12 - line 114, column 30): " + [v.constructor.name]);
        }

        ;

        while (!$tco_done1) {
          $tco_result = $tco_loop($tco_var_b, $copy_v);
        }

        ;
        return $tco_result;
      };
    };

    return go;
  },
  foldMap: function foldMap(dictMonoid) {
    return function (f) {
      return Data_Foldable.foldl(foldableList)(function (acc) {
        var $207 = Data_Semigroup.append(dictMonoid.Semigroup0())(acc);
        return function ($208) {
          return $207(f($208));
        };
      })(Data_Monoid.mempty(dictMonoid));
    };
  }
};
var foldableNonEmptyList = Data_NonEmpty.foldableNonEmpty(foldableList);
var foldableWithIndexList = {
  foldrWithIndex: function foldrWithIndex(f) {
    return function (b) {
      return function (xs) {
        var v = function () {
          var rev = Data_Foldable.foldl(foldableList)(function (v1) {
            return function (a) {
              return new Data_Tuple.Tuple(v1.value0 + 1 | 0, new Cons(a, v1.value1));
            };
          });
          return rev(new Data_Tuple.Tuple(0, Nil.value))(xs);
        }();

        return Data_Tuple.snd(Data_Foldable.foldl(foldableList)(function (v1) {
          return function (a) {
            return new Data_Tuple.Tuple(v1.value0 - 1 | 0, f(v1.value0 - 1 | 0)(a)(v1.value1));
          };
        })(new Data_Tuple.Tuple(v.value0, b))(v.value1));
      };
    };
  },
  foldlWithIndex: function foldlWithIndex(f) {
    return function (acc) {
      var $209 = Data_Foldable.foldl(foldableList)(function (v) {
        return function (a) {
          return new Data_Tuple.Tuple(v.value0 + 1 | 0, f(v.value0)(v.value1)(a));
        };
      })(new Data_Tuple.Tuple(0, acc));
      return function ($210) {
        return Data_Tuple.snd($209($210));
      };
    };
  },
  foldMapWithIndex: function foldMapWithIndex(dictMonoid) {
    return function (f) {
      return Data_FoldableWithIndex.foldlWithIndex(foldableWithIndexList)(function (i) {
        return function (acc) {
          var $211 = Data_Semigroup.append(dictMonoid.Semigroup0())(acc);
          var $212 = f(i);
          return function ($213) {
            return $211($212($213));
          };
        };
      })(Data_Monoid.mempty(dictMonoid));
    };
  },
  Foldable0: function Foldable0() {
    return foldableList;
  }
};
var foldableWithIndexNonEmptyList = {
  foldMapWithIndex: function foldMapWithIndex(dictMonoid) {
    return function (f) {
      return function (v) {
        return Data_FoldableWithIndex.foldMapWithIndex(Data_NonEmpty.foldableWithIndexNonEmpty(foldableWithIndexList))(dictMonoid)(function () {
          var $214 = Data_Maybe.maybe(0)(Data_Semiring.add(Data_Semiring.semiringInt)(1));
          return function ($215) {
            return f($214($215));
          };
        }())(v);
      };
    };
  },
  foldlWithIndex: function foldlWithIndex(f) {
    return function (b) {
      return function (v) {
        return Data_FoldableWithIndex.foldlWithIndex(Data_NonEmpty.foldableWithIndexNonEmpty(foldableWithIndexList))(function () {
          var $216 = Data_Maybe.maybe(0)(Data_Semiring.add(Data_Semiring.semiringInt)(1));
          return function ($217) {
            return f($216($217));
          };
        }())(b)(v);
      };
    };
  },
  foldrWithIndex: function foldrWithIndex(f) {
    return function (b) {
      return function (v) {
        return Data_FoldableWithIndex.foldrWithIndex(Data_NonEmpty.foldableWithIndexNonEmpty(foldableWithIndexList))(function () {
          var $218 = Data_Maybe.maybe(0)(Data_Semiring.add(Data_Semiring.semiringInt)(1));
          return function ($219) {
            return f($218($219));
          };
        }())(b)(v);
      };
    };
  },
  Foldable0: function Foldable0() {
    return foldableNonEmptyList;
  }
};
var functorWithIndexList = {
  mapWithIndex: function mapWithIndex(f) {
    return Data_FoldableWithIndex.foldrWithIndex(foldableWithIndexList)(function (i) {
      return function (x) {
        return function (acc) {
          return new Cons(f(i)(x), acc);
        };
      };
    })(Nil.value);
  },
  Functor0: function Functor0() {
    return functorList;
  }
};
var functorWithIndexNonEmptyList = {
  mapWithIndex: function mapWithIndex(fn) {
    return function (v) {
      return Data_FunctorWithIndex.mapWithIndex(Data_NonEmpty.functorWithIndex(functorWithIndexList))(function () {
        var $220 = Data_Maybe.maybe(0)(Data_Semiring.add(Data_Semiring.semiringInt)(1));
        return function ($221) {
          return fn($220($221));
        };
      }())(v);
    };
  },
  Functor0: function Functor0() {
    return functorNonEmptyList;
  }
};
var semigroupList = {
  append: function append(xs) {
    return function (ys) {
      return Data_Foldable.foldr(foldableList)(Cons.create)(ys)(xs);
    };
  }
};
var monoidList = {
  mempty: Nil.value,
  Semigroup0: function Semigroup0() {
    return semigroupList;
  }
};
var semigroupNonEmptyList = {
  append: function append(v) {
    return function (as$prime) {
      return new Data_NonEmpty.NonEmpty(v.value0, Data_Semigroup.append(semigroupList)(v.value1)(toList(as$prime)));
    };
  }
};

var showList = function showList(dictShow) {
  return {
    show: function show(v) {
      if (v instanceof Nil) {
        return "Nil";
      }

      ;
      return "(" + (Data_Foldable.intercalate(foldableList)(Data_Monoid.monoidString)(" : ")(Data_Functor.map(functorList)(Data_Show.show(dictShow))(v)) + " : Nil)");
    }
  };
};

var showNonEmptyList = function showNonEmptyList(dictShow) {
  return {
    show: function show(v) {
      return "(NonEmptyList " + (Data_Show.show(Data_NonEmpty.showNonEmpty(dictShow)(showList(dictShow)))(v) + ")");
    }
  };
};

var traversableList = {
  traverse: function traverse(dictApplicative) {
    return function (f) {
      var $222 = Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value));
      var $223 = Data_Foldable.foldl(foldableList)(function (acc) {
        var $225 = Control_Apply.lift2(dictApplicative.Apply0())(Data_Function.flip(Cons.create))(acc);
        return function ($226) {
          return $225(f($226));
        };
      })(Control_Applicative.pure(dictApplicative)(Nil.value));
      return function ($224) {
        return $222($223($224));
      };
    };
  },
  sequence: function sequence(dictApplicative) {
    return Data_Traversable.traverse(traversableList)(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
  },
  Functor0: function Functor0() {
    return functorList;
  },
  Foldable1: function Foldable1() {
    return foldableList;
  }
};
var traversableNonEmptyList = Data_NonEmpty.traversableNonEmpty(traversableList);
var traversableWithIndexList = {
  traverseWithIndex: function traverseWithIndex(dictApplicative) {
    return function (f) {
      var rev = Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value);
      var $227 = Data_Functor.map(dictApplicative.Apply0().Functor0())(rev);
      var $228 = Data_FoldableWithIndex.foldlWithIndex(foldableWithIndexList)(function (i) {
        return function (acc) {
          var $230 = Control_Apply.lift2(dictApplicative.Apply0())(Data_Function.flip(Cons.create))(acc);
          var $231 = f(i);
          return function ($232) {
            return $230($231($232));
          };
        };
      })(Control_Applicative.pure(dictApplicative)(Nil.value));
      return function ($229) {
        return $227($228($229));
      };
    };
  },
  FunctorWithIndex0: function FunctorWithIndex0() {
    return functorWithIndexList;
  },
  FoldableWithIndex1: function FoldableWithIndex1() {
    return foldableWithIndexList;
  },
  Traversable2: function Traversable2() {
    return traversableList;
  }
};
var traversableWithIndexNonEmptyList = {
  traverseWithIndex: function traverseWithIndex(dictApplicative) {
    return function (f) {
      return function (v) {
        return Data_Functor.map(dictApplicative.Apply0().Functor0())(NonEmptyList)(Data_TraversableWithIndex.traverseWithIndex(Data_NonEmpty.traversableWithIndexNonEmpty(traversableWithIndexList))(dictApplicative)(function () {
          var $233 = Data_Maybe.maybe(0)(Data_Semiring.add(Data_Semiring.semiringInt)(1));
          return function ($234) {
            return f($233($234));
          };
        }())(v));
      };
    };
  },
  FunctorWithIndex0: function FunctorWithIndex0() {
    return functorWithIndexNonEmptyList;
  },
  FoldableWithIndex1: function FoldableWithIndex1() {
    return foldableWithIndexNonEmptyList;
  },
  Traversable2: function Traversable2() {
    return traversableNonEmptyList;
  }
};
var unfoldable1List = {
  unfoldr1: function unfoldr1(f) {
    return function (b) {
      var go = function go($copy_source) {
        return function ($copy_memo) {
          var $tco_var_source = $copy_source;
          var $tco_done = false;
          var $tco_result;

          function $tco_loop(source, memo) {
            var v = f(source);

            if (v.value1 instanceof Data_Maybe.Just) {
              $tco_var_source = v.value1.value0;
              $copy_memo = new Cons(v.value0, memo);
              return;
            }

            ;

            if (v.value1 instanceof Data_Maybe.Nothing) {
              $tco_done = true;
              return Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value)(new Cons(v.value0, memo));
            }

            ;
            throw new Error("Failed pattern match at Data.List.Types (line 136, column 22 - line 138, column 61): " + [v.constructor.name]);
          }

          ;

          while (!$tco_done) {
            $tco_result = $tco_loop($tco_var_source, $copy_memo);
          }

          ;
          return $tco_result;
        };
      };

      return go(b)(Nil.value);
    };
  }
};
var unfoldableList = {
  unfoldr: function unfoldr(f) {
    return function (b) {
      var go = function go($copy_source) {
        return function ($copy_memo) {
          var $tco_var_source = $copy_source;
          var $tco_done = false;
          var $tco_result;

          function $tco_loop(source, memo) {
            var v = f(source);

            if (v instanceof Data_Maybe.Nothing) {
              $tco_done = true;
              return Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value)(memo);
            }

            ;

            if (v instanceof Data_Maybe.Just) {
              $tco_var_source = v.value0.value1;
              $copy_memo = new Cons(v.value0.value0, memo);
              return;
            }

            ;
            throw new Error("Failed pattern match at Data.List.Types (line 143, column 22 - line 145, column 52): " + [v.constructor.name]);
          }

          ;

          while (!$tco_done) {
            $tco_result = $tco_loop($tco_var_source, $copy_memo);
          }

          ;
          return $tco_result;
        };
      };

      return go(b)(Nil.value);
    };
  },
  Unfoldable10: function Unfoldable10() {
    return unfoldable1List;
  }
};
var unfoldable1NonEmptyList = Data_NonEmpty.unfoldable1NonEmpty(unfoldableList);
var foldable1NonEmptyList = Data_NonEmpty.foldable1NonEmpty(foldableList);
var extendNonEmptyList = {
  extend: function extend(f) {
    return function (v) {
      var go = function go(a) {
        return function (v1) {
          return {
            val: new Cons(f(new Data_NonEmpty.NonEmpty(a, v1.acc)), v1.val),
            acc: new Cons(a, v1.acc)
          };
        };
      };

      return new Data_NonEmpty.NonEmpty(f(v), Data_Foldable.foldr(foldableList)(go)({
        val: Nil.value,
        acc: Nil.value
      })(v.value1).val);
    };
  },
  Functor0: function Functor0() {
    return functorNonEmptyList;
  }
};
var extendList = {
  extend: function extend(v) {
    return function (v1) {
      if (v1 instanceof Nil) {
        return Nil.value;
      }

      ;

      if (v1 instanceof Cons) {
        var go = function go(a$prime) {
          return function (v2) {
            var acc$prime = new Cons(a$prime, v2.acc);
            return {
              val: new Cons(v(acc$prime), v2.val),
              acc: acc$prime
            };
          };
        };

        return new Cons(v(v1), Data_Foldable.foldr(foldableList)(go)({
          val: Nil.value,
          acc: Nil.value
        })(v1.value1).val);
      }

      ;
      throw new Error("Failed pattern match at Data.List.Types (line 183, column 1 - line 190, column 42): " + [v.constructor.name, v1.constructor.name]);
    };
  },
  Functor0: function Functor0() {
    return functorList;
  }
};
var eq1List = {
  eq1: function eq1(dictEq) {
    return function (xs) {
      return function (ys) {
        var go = function go($copy_v) {
          return function ($copy_v1) {
            return function ($copy_v2) {
              var $tco_var_v = $copy_v;
              var $tco_var_v1 = $copy_v1;
              var $tco_done = false;
              var $tco_result;

              function $tco_loop(v, v1, v2) {
                if (!v2) {
                  $tco_done = true;
                  return false;
                }

                ;

                if (v instanceof Nil && v1 instanceof Nil) {
                  $tco_done = true;
                  return v2;
                }

                ;

                if (v instanceof Cons && v1 instanceof Cons) {
                  $tco_var_v = v.value1;
                  $tco_var_v1 = v1.value1;
                  $copy_v2 = v2 && Data_Eq.eq(dictEq)(v1.value0)(v.value0);
                  return;
                }

                ;
                $tco_done = true;
                return false;
              }

              ;

              while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_v2);
              }

              ;
              return $tco_result;
            };
          };
        };

        return go(xs)(ys)(true);
      };
    };
  }
};
var eq1NonEmptyList = Data_NonEmpty.eq1NonEmpty(eq1List);

var eqList = function eqList(dictEq) {
  return {
    eq: Data_Eq.eq1(eq1List)(dictEq)
  };
};

var eqNonEmptyList = function eqNonEmptyList(dictEq) {
  return Data_NonEmpty.eqNonEmpty(eq1List)(dictEq);
};

var ord1List = {
  compare1: function compare1(dictOrd) {
    return function (xs) {
      return function (ys) {
        var go = function go($copy_v) {
          return function ($copy_v1) {
            var $tco_var_v = $copy_v;
            var $tco_done = false;
            var $tco_result;

            function $tco_loop(v, v1) {
              if (v instanceof Nil && v1 instanceof Nil) {
                $tco_done = true;
                return Data_Ordering.EQ.value;
              }

              ;

              if (v instanceof Nil) {
                $tco_done = true;
                return Data_Ordering.LT.value;
              }

              ;

              if (v1 instanceof Nil) {
                $tco_done = true;
                return Data_Ordering.GT.value;
              }

              ;

              if (v instanceof Cons && v1 instanceof Cons) {
                var v2 = Data_Ord.compare(dictOrd)(v.value0)(v1.value0);

                if (v2 instanceof Data_Ordering.EQ) {
                  $tco_var_v = v.value1;
                  $copy_v1 = v1.value1;
                  return;
                }

                ;
                $tco_done = true;
                return v2;
              }

              ;
              throw new Error("Failed pattern match at Data.List.Types (line 61, column 5 - line 61, column 20): " + [v.constructor.name, v1.constructor.name]);
            }

            ;

            while (!$tco_done) {
              $tco_result = $tco_loop($tco_var_v, $copy_v1);
            }

            ;
            return $tco_result;
          };
        };

        return go(xs)(ys);
      };
    };
  },
  Eq10: function Eq10() {
    return eq1List;
  }
};
var ord1NonEmptyList = Data_NonEmpty.ord1NonEmpty(ord1List);

var ordList = function ordList(dictOrd) {
  return {
    compare: Data_Ord.compare1(ord1List)(dictOrd),
    Eq0: function Eq0() {
      return eqList(dictOrd.Eq0());
    }
  };
};

var ordNonEmptyList = function ordNonEmptyList(dictOrd) {
  return Data_NonEmpty.ordNonEmpty(ord1List)(dictOrd);
};

var comonadNonEmptyList = {
  extract: function extract(v) {
    return v.value0;
  },
  Extend0: function Extend0() {
    return extendNonEmptyList;
  }
};
var applyList = {
  apply: function apply(v) {
    return function (v1) {
      if (v instanceof Nil) {
        return Nil.value;
      }

      ;

      if (v instanceof Cons) {
        return Data_Semigroup.append(semigroupList)(Data_Functor.map(functorList)(v.value0)(v1))(Control_Apply.apply(applyList)(v.value1)(v1));
      }

      ;
      throw new Error("Failed pattern match at Data.List.Types (line 158, column 1 - line 160, column 48): " + [v.constructor.name, v1.constructor.name]);
    };
  },
  Functor0: function Functor0() {
    return functorList;
  }
};
var applyNonEmptyList = {
  apply: function apply(v) {
    return function (v1) {
      return new Data_NonEmpty.NonEmpty(v.value0(v1.value0), Data_Semigroup.append(semigroupList)(Control_Apply.apply(applyList)(v.value1)(new Cons(v1.value0, Nil.value)))(Control_Apply.apply(applyList)(new Cons(v.value0, v.value1))(v1.value1)));
    };
  },
  Functor0: function Functor0() {
    return functorNonEmptyList;
  }
};
var bindList = {
  bind: function bind(v) {
    return function (v1) {
      if (v instanceof Nil) {
        return Nil.value;
      }

      ;

      if (v instanceof Cons) {
        return Data_Semigroup.append(semigroupList)(v1(v.value0))(Control_Bind.bind(bindList)(v.value1)(v1));
      }

      ;
      throw new Error("Failed pattern match at Data.List.Types (line 165, column 1 - line 167, column 37): " + [v.constructor.name, v1.constructor.name]);
    };
  },
  Apply0: function Apply0() {
    return applyList;
  }
};
var bindNonEmptyList = {
  bind: function bind(v) {
    return function (f) {
      var v1 = f(v.value0);
      return new Data_NonEmpty.NonEmpty(v1.value0, Data_Semigroup.append(semigroupList)(v1.value1)(Control_Bind.bind(bindList)(v.value1)(function ($235) {
        return toList(f($235));
      })));
    };
  },
  Apply0: function Apply0() {
    return applyNonEmptyList;
  }
};
var applicativeList = {
  pure: function pure(a) {
    return new Cons(a, Nil.value);
  },
  Apply0: function Apply0() {
    return applyList;
  }
};
var monadList = {
  Applicative0: function Applicative0() {
    return applicativeList;
  },
  Bind1: function Bind1() {
    return bindList;
  }
};
var altNonEmptyList = {
  alt: Data_Semigroup.append(semigroupNonEmptyList),
  Functor0: function Functor0() {
    return functorNonEmptyList;
  }
};
var altList = {
  alt: Data_Semigroup.append(semigroupList),
  Functor0: function Functor0() {
    return functorList;
  }
};
var plusList = {
  empty: Nil.value,
  Alt0: function Alt0() {
    return altList;
  }
};
var alternativeList = {
  Applicative0: function Applicative0() {
    return applicativeList;
  },
  Plus1: function Plus1() {
    return plusList;
  }
};
var monadPlusList = {
  Monad0: function Monad0() {
    return monadList;
  },
  Alternative1: function Alternative1() {
    return alternativeList;
  }
};
var monadZeroList = {
  Monad0: function Monad0() {
    return monadList;
  },
  Alternative1: function Alternative1() {
    return alternativeList;
  },
  MonadZeroIsDeprecated2: function MonadZeroIsDeprecated2() {
    return undefined;
  }
};
var applicativeNonEmptyList = {
  pure: function () {
    var $236 = Data_NonEmpty.singleton(plusList);
    return function ($237) {
      return NonEmptyList($236($237));
    };
  }(),
  Apply0: function Apply0() {
    return applyNonEmptyList;
  }
};
var monadNonEmptyList = {
  Applicative0: function Applicative0() {
    return applicativeNonEmptyList;
  },
  Bind1: function Bind1() {
    return bindNonEmptyList;
  }
};
var traversable1NonEmptyList = {
  traverse1: function traverse1(dictApply) {
    return function (f) {
      return function (v) {
        return Data_Functor.mapFlipped(dictApply.Functor0())(Data_Foldable.foldl(foldableList)(function (acc) {
          var $238 = Control_Apply.lift2(dictApply)(Data_Function.flip(nelCons))(acc);
          return function ($239) {
            return $238(f($239));
          };
        })(Data_Functor.map(dictApply.Functor0())(Control_Applicative.pure(applicativeNonEmptyList))(f(v.value0)))(v.value1))(function (v1) {
          return Data_Foldable.foldl(foldableList)(Data_Function.flip(nelCons))(Control_Applicative.pure(applicativeNonEmptyList)(v1.value0))(v1.value1);
        });
      };
    };
  },
  sequence1: function sequence1(dictApply) {
    return Data_Semigroup_Traversable.traverse1(traversable1NonEmptyList)(dictApply)(Control_Category.identity(Control_Category.categoryFn));
  },
  Foldable10: function Foldable10() {
    return foldable1NonEmptyList;
  },
  Traversable1: function Traversable1() {
    return traversableNonEmptyList;
  }
};
module.exports = {
  Nil: Nil,
  Cons: Cons,
  NonEmptyList: NonEmptyList,
  toList: toList,
  nelCons: nelCons,
  showList: showList,
  eqList: eqList,
  eq1List: eq1List,
  ordList: ordList,
  ord1List: ord1List,
  semigroupList: semigroupList,
  monoidList: monoidList,
  functorList: functorList,
  functorWithIndexList: functorWithIndexList,
  foldableList: foldableList,
  foldableWithIndexList: foldableWithIndexList,
  unfoldable1List: unfoldable1List,
  unfoldableList: unfoldableList,
  traversableList: traversableList,
  traversableWithIndexList: traversableWithIndexList,
  applyList: applyList,
  applicativeList: applicativeList,
  bindList: bindList,
  monadList: monadList,
  altList: altList,
  plusList: plusList,
  alternativeList: alternativeList,
  monadZeroList: monadZeroList,
  monadPlusList: monadPlusList,
  extendList: extendList,
  newtypeNonEmptyList: newtypeNonEmptyList,
  eqNonEmptyList: eqNonEmptyList,
  ordNonEmptyList: ordNonEmptyList,
  eq1NonEmptyList: eq1NonEmptyList,
  ord1NonEmptyList: ord1NonEmptyList,
  showNonEmptyList: showNonEmptyList,
  functorNonEmptyList: functorNonEmptyList,
  applyNonEmptyList: applyNonEmptyList,
  applicativeNonEmptyList: applicativeNonEmptyList,
  bindNonEmptyList: bindNonEmptyList,
  monadNonEmptyList: monadNonEmptyList,
  altNonEmptyList: altNonEmptyList,
  extendNonEmptyList: extendNonEmptyList,
  comonadNonEmptyList: comonadNonEmptyList,
  semigroupNonEmptyList: semigroupNonEmptyList,
  foldableNonEmptyList: foldableNonEmptyList,
  traversableNonEmptyList: traversableNonEmptyList,
  foldable1NonEmptyList: foldable1NonEmptyList,
  unfoldable1NonEmptyList: unfoldable1NonEmptyList,
  functorWithIndexNonEmptyList: functorWithIndexNonEmptyList,
  foldableWithIndexNonEmptyList: foldableWithIndexNonEmptyList,
  traversableWithIndexNonEmptyList: traversableWithIndexNonEmptyList,
  traversable1NonEmptyList: traversable1NonEmptyList
};
},{"../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Category/index.js":"output/Control.Category/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Foldable/index.js":"output/Data.Foldable/index.js","../Data.FoldableWithIndex/index.js":"output/Data.FoldableWithIndex/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.FunctorWithIndex/index.js":"output/Data.FunctorWithIndex/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Monoid/index.js":"output/Data.Monoid/index.js","../Data.NonEmpty/index.js":"output/Data.NonEmpty/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Semigroup.Traversable/index.js":"output/Data.Semigroup.Traversable/index.js","../Data.Semiring/index.js":"output/Data.Semiring/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Data.Traversable/index.js":"output/Data.Traversable/index.js","../Data.TraversableWithIndex/index.js":"output/Data.TraversableWithIndex/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js"}],"output/Data.List.Internal/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Data_List_Types = require("../Data.List.Types/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Leaf = function () {
  function Leaf() {}

  ;
  Leaf.value = new Leaf();
  return Leaf;
}();

var Two = function () {
  function Two(value0, value1, value2) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  ;

  Two.create = function (value0) {
    return function (value1) {
      return function (value2) {
        return new Two(value0, value1, value2);
      };
    };
  };

  return Two;
}();

var Three = function () {
  function Three(value0, value1, value2, value3, value4) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  ;

  Three.create = function (value0) {
    return function (value1) {
      return function (value2) {
        return function (value3) {
          return function (value4) {
            return new Three(value0, value1, value2, value3, value4);
          };
        };
      };
    };
  };

  return Three;
}();

var TwoLeft = function () {
  function TwoLeft(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  TwoLeft.create = function (value0) {
    return function (value1) {
      return new TwoLeft(value0, value1);
    };
  };

  return TwoLeft;
}();

var TwoRight = function () {
  function TwoRight(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  TwoRight.create = function (value0) {
    return function (value1) {
      return new TwoRight(value0, value1);
    };
  };

  return TwoRight;
}();

var ThreeLeft = function () {
  function ThreeLeft(value0, value1, value2, value3) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  ;

  ThreeLeft.create = function (value0) {
    return function (value1) {
      return function (value2) {
        return function (value3) {
          return new ThreeLeft(value0, value1, value2, value3);
        };
      };
    };
  };

  return ThreeLeft;
}();

var ThreeMiddle = function () {
  function ThreeMiddle(value0, value1, value2, value3) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  ;

  ThreeMiddle.create = function (value0) {
    return function (value1) {
      return function (value2) {
        return function (value3) {
          return new ThreeMiddle(value0, value1, value2, value3);
        };
      };
    };
  };

  return ThreeMiddle;
}();

var ThreeRight = function () {
  function ThreeRight(value0, value1, value2, value3) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  ;

  ThreeRight.create = function (value0) {
    return function (value1) {
      return function (value2) {
        return function (value3) {
          return new ThreeRight(value0, value1, value2, value3);
        };
      };
    };
  };

  return ThreeRight;
}();

var KickUp = function () {
  function KickUp(value0, value1, value2) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  ;

  KickUp.create = function (value0) {
    return function (value1) {
      return function (value2) {
        return new KickUp(value0, value1, value2);
      };
    };
  };

  return KickUp;
}();

var fromZipper = function fromZipper($copy_v) {
  return function ($copy_tree) {
    var $tco_var_v = $copy_v;
    var $tco_done = false;
    var $tco_result;

    function $tco_loop(v, tree) {
      if (v instanceof Data_List_Types.Nil) {
        $tco_done = true;
        return tree;
      }

      ;

      if (v instanceof Data_List_Types.Cons) {
        if (v.value0 instanceof TwoLeft) {
          $tco_var_v = v.value1;
          $copy_tree = new Two(tree, v.value0.value0, v.value0.value1);
          return;
        }

        ;

        if (v.value0 instanceof TwoRight) {
          $tco_var_v = v.value1;
          $copy_tree = new Two(v.value0.value0, v.value0.value1, tree);
          return;
        }

        ;

        if (v.value0 instanceof ThreeLeft) {
          $tco_var_v = v.value1;
          $copy_tree = new Three(tree, v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3);
          return;
        }

        ;

        if (v.value0 instanceof ThreeMiddle) {
          $tco_var_v = v.value1;
          $copy_tree = new Three(v.value0.value0, v.value0.value1, tree, v.value0.value2, v.value0.value3);
          return;
        }

        ;

        if (v.value0 instanceof ThreeRight) {
          $tco_var_v = v.value1;
          $copy_tree = new Three(v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, tree);
          return;
        }

        ;
        throw new Error("Failed pattern match at Data.List.Internal (line 25, column 3 - line 30, column 76): " + [v.value0.constructor.name]);
      }

      ;
      throw new Error("Failed pattern match at Data.List.Internal (line 22, column 1 - line 22, column 63): " + [v.constructor.name, tree.constructor.name]);
    }

    ;

    while (!$tco_done) {
      $tco_result = $tco_loop($tco_var_v, $copy_tree);
    }

    ;
    return $tco_result;
  };
};

var insertAndLookupBy = function insertAndLookupBy(comp) {
  return function (k) {
    return function (orig) {
      var up = function up($copy_v) {
        return function ($copy_v1) {
          var $tco_var_v = $copy_v;
          var $tco_done = false;
          var $tco_result;

          function $tco_loop(v, v1) {
            if (v instanceof Data_List_Types.Nil) {
              $tco_done = true;
              return new Two(v1.value0, v1.value1, v1.value2);
            }

            ;

            if (v instanceof Data_List_Types.Cons) {
              if (v.value0 instanceof TwoLeft) {
                $tco_done = true;
                return fromZipper(v.value1)(new Three(v1.value0, v1.value1, v1.value2, v.value0.value0, v.value0.value1));
              }

              ;

              if (v.value0 instanceof TwoRight) {
                $tco_done = true;
                return fromZipper(v.value1)(new Three(v.value0.value0, v.value0.value1, v1.value0, v1.value1, v1.value2));
              }

              ;

              if (v.value0 instanceof ThreeLeft) {
                $tco_var_v = v.value1;
                $copy_v1 = new KickUp(new Two(v1.value0, v1.value1, v1.value2), v.value0.value0, new Two(v.value0.value1, v.value0.value2, v.value0.value3));
                return;
              }

              ;

              if (v.value0 instanceof ThreeMiddle) {
                $tco_var_v = v.value1;
                $copy_v1 = new KickUp(new Two(v.value0.value0, v.value0.value1, v1.value0), v1.value1, new Two(v1.value2, v.value0.value2, v.value0.value3));
                return;
              }

              ;

              if (v.value0 instanceof ThreeRight) {
                $tco_var_v = v.value1;
                $copy_v1 = new KickUp(new Two(v.value0.value0, v.value0.value1, v.value0.value2), v.value0.value3, new Two(v1.value0, v1.value1, v1.value2));
                return;
              }

              ;
              throw new Error("Failed pattern match at Data.List.Internal (line 58, column 5 - line 63, column 90): " + [v.value0.constructor.name, v1.constructor.name]);
            }

            ;
            throw new Error("Failed pattern match at Data.List.Internal (line 55, column 3 - line 55, column 50): " + [v.constructor.name, v1.constructor.name]);
          }

          ;

          while (!$tco_done) {
            $tco_result = $tco_loop($tco_var_v, $copy_v1);
          }

          ;
          return $tco_result;
        };
      };

      var down = function down($copy_ctx) {
        return function ($copy_v) {
          var $tco_var_ctx = $copy_ctx;
          var $tco_done1 = false;
          var $tco_result;

          function $tco_loop(ctx, v) {
            if (v instanceof Leaf) {
              $tco_done1 = true;
              return {
                found: false,
                result: up(ctx)(new KickUp(Leaf.value, k, Leaf.value))
              };
            }

            ;

            if (v instanceof Two) {
              var v1 = comp(k)(v.value1);

              if (v1 instanceof Data_Ordering.EQ) {
                $tco_done1 = true;
                return {
                  found: true,
                  result: orig
                };
              }

              ;

              if (v1 instanceof Data_Ordering.LT) {
                $tco_var_ctx = new Data_List_Types.Cons(new TwoLeft(v.value1, v.value2), ctx);
                $copy_v = v.value0;
                return;
              }

              ;
              $tco_var_ctx = new Data_List_Types.Cons(new TwoRight(v.value0, v.value1), ctx);
              $copy_v = v.value2;
              return;
            }

            ;

            if (v instanceof Three) {
              var v1 = comp(k)(v.value1);

              if (v1 instanceof Data_Ordering.EQ) {
                $tco_done1 = true;
                return {
                  found: true,
                  result: orig
                };
              }

              ;
              var v2 = comp(k)(v.value3);

              if (v2 instanceof Data_Ordering.EQ) {
                $tco_done1 = true;
                return {
                  found: true,
                  result: orig
                };
              }

              ;

              if (v1 instanceof Data_Ordering.LT) {
                $tco_var_ctx = new Data_List_Types.Cons(new ThreeLeft(v.value1, v.value2, v.value3, v.value4), ctx);
                $copy_v = v.value0;
                return;
              }

              ;

              if (v1 instanceof Data_Ordering.GT && v2 instanceof Data_Ordering.LT) {
                $tco_var_ctx = new Data_List_Types.Cons(new ThreeMiddle(v.value0, v.value1, v.value3, v.value4), ctx);
                $copy_v = v.value2;
                return;
              }

              ;
              $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight(v.value0, v.value1, v.value2, v.value3), ctx);
              $copy_v = v.value4;
              return;
            }

            ;
            throw new Error("Failed pattern match at Data.List.Internal (line 38, column 3 - line 38, column 81): " + [ctx.constructor.name, v.constructor.name]);
          }

          ;

          while (!$tco_done1) {
            $tco_result = $tco_loop($tco_var_ctx, $copy_v);
          }

          ;
          return $tco_result;
        };
      };

      return down(Data_List_Types.Nil.value)(orig);
    };
  };
};

var emptySet = Leaf.value;
module.exports = {
  emptySet: emptySet,
  insertAndLookupBy: insertAndLookupBy
};
},{"../Data.List.Types/index.js":"output/Data.List.Types/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js"}],"output/Data.List/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Lazy = require("../Control.Lazy/index.js");

var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");

var Data_Bifunctor = require("../Data.Bifunctor/index.js");

var Data_Boolean = require("../Data.Boolean/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_List_Internal = require("../Data.List.Internal/index.js");

var Data_List_Types = require("../Data.List.Types/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_NonEmpty = require("../Data.NonEmpty/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unfoldable = require("../Data.Unfoldable/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Pattern = function Pattern(x) {
  return x;
};

var updateAt = function updateAt(v) {
  return function (v1) {
    return function (v2) {
      if (v === 0 && v2 instanceof Data_List_Types.Cons) {
        return new Data_Maybe.Just(new Data_List_Types.Cons(v1, v2.value1));
      }

      ;

      if (v2 instanceof Data_List_Types.Cons) {
        return Data_Functor.map(Data_Maybe.functorMaybe)(function (v3) {
          return new Data_List_Types.Cons(v2.value0, v3);
        })(updateAt(v - 1 | 0)(v1)(v2.value1));
      }

      ;
      return Data_Maybe.Nothing.value;
    };
  };
};

var unzip = Data_Foldable.foldr(Data_List_Types.foldableList)(function (v) {
  return function (v1) {
    return new Data_Tuple.Tuple(new Data_List_Types.Cons(v.value0, v1.value0), new Data_List_Types.Cons(v.value1, v1.value1));
  };
})(new Data_Tuple.Tuple(Data_List_Types.Nil.value, Data_List_Types.Nil.value));

var uncons = function uncons(v) {
  if (v instanceof Data_List_Types.Nil) {
    return Data_Maybe.Nothing.value;
  }

  ;

  if (v instanceof Data_List_Types.Cons) {
    return new Data_Maybe.Just({
      head: v.value0,
      tail: v.value1
    });
  }

  ;
  throw new Error("Failed pattern match at Data.List (line 263, column 1 - line 263, column 66): " + [v.constructor.name]);
};

var toUnfoldable = function toUnfoldable(dictUnfoldable) {
  return Data_Unfoldable.unfoldr(dictUnfoldable)(function (xs) {
    return Data_Functor.map(Data_Maybe.functorMaybe)(function (rec) {
      return new Data_Tuple.Tuple(rec.head, rec.tail);
    })(uncons(xs));
  });
};

var tail = function tail(v) {
  if (v instanceof Data_List_Types.Nil) {
    return Data_Maybe.Nothing.value;
  }

  ;

  if (v instanceof Data_List_Types.Cons) {
    return new Data_Maybe.Just(v.value1);
  }

  ;
  throw new Error("Failed pattern match at Data.List (line 249, column 1 - line 249, column 43): " + [v.constructor.name]);
};

var stripPrefix = function stripPrefix(dictEq) {
  return function (v) {
    return function (s) {
      var go = function go(prefix) {
        return function (input) {
          if (prefix instanceof Data_List_Types.Cons && input instanceof Data_List_Types.Cons && Data_Eq.eq(dictEq)(prefix.value0)(input.value0)) {
            return new Data_Maybe.Just(new Control_Monad_Rec_Class.Loop({
              a: prefix.value1,
              b: input.value1
            }));
          }

          ;

          if (prefix instanceof Data_List_Types.Nil) {
            return new Data_Maybe.Just(new Control_Monad_Rec_Class.Done(input));
          }

          ;
          return Data_Maybe.Nothing.value;
        };
      };

      return Control_Monad_Rec_Class.tailRecM2(Control_Monad_Rec_Class.monadRecMaybe)(go)(v)(s);
    };
  };
};

var span = function span(v) {
  return function (v1) {
    if (v1 instanceof Data_List_Types.Cons && v(v1.value0)) {
      var v2 = span(v)(v1.value1);
      return {
        init: new Data_List_Types.Cons(v1.value0, v2.init),
        rest: v2.rest
      };
    }

    ;
    return {
      init: Data_List_Types.Nil.value,
      rest: v1
    };
  };
};

var snoc = function snoc(xs) {
  return function (x) {
    return Data_Foldable.foldr(Data_List_Types.foldableList)(Data_List_Types.Cons.create)(new Data_List_Types.Cons(x, Data_List_Types.Nil.value))(xs);
  };
};

var singleton = function singleton(a) {
  return new Data_List_Types.Cons(a, Data_List_Types.Nil.value);
};

var sortBy = function sortBy(cmp) {
  var merge = function merge(v) {
    return function (v1) {
      if (v instanceof Data_List_Types.Cons && v1 instanceof Data_List_Types.Cons) {
        if (Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v1.value0))(Data_Ordering.GT.value)) {
          return new Data_List_Types.Cons(v1.value0, merge(v)(v1.value1));
        }

        ;

        if (Data_Boolean.otherwise) {
          return new Data_List_Types.Cons(v.value0, merge(v.value1)(v1));
        }

        ;
      }

      ;

      if (v instanceof Data_List_Types.Nil) {
        return v1;
      }

      ;

      if (v1 instanceof Data_List_Types.Nil) {
        return v;
      }

      ;
      throw new Error("Failed pattern match at Data.List (line 477, column 3 - line 477, column 38): " + [v.constructor.name, v1.constructor.name]);
    };
  };

  var mergePairs = function mergePairs(v) {
    if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Cons) {
      return new Data_List_Types.Cons(merge(v.value0)(v.value1.value0), mergePairs(v.value1.value1));
    }

    ;
    return v;
  };

  var mergeAll = function mergeAll($copy_v) {
    var $tco_done = false;
    var $tco_result;

    function $tco_loop(v) {
      if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil) {
        $tco_done = true;
        return v.value0;
      }

      ;
      $copy_v = mergePairs(v);
      return;
    }

    ;

    while (!$tco_done) {
      $tco_result = $tco_loop($copy_v);
    }

    ;
    return $tco_result;
  };

  var sequences = function sequences(v) {
    if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Cons) {
      if (Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v.value1.value0))(Data_Ordering.GT.value)) {
        return descending(v.value1.value0)(singleton(v.value0))(v.value1.value1);
      }

      ;

      if (Data_Boolean.otherwise) {
        return ascending(v.value1.value0)(function (v1) {
          return new Data_List_Types.Cons(v.value0, v1);
        })(v.value1.value1);
      }

      ;
    }

    ;
    return singleton(v);
  };

  var descending = function descending($copy_a) {
    return function ($copy_as) {
      return function ($copy_v) {
        var $tco_var_a = $copy_a;
        var $tco_var_as = $copy_as;
        var $tco_done1 = false;
        var $tco_result;

        function $tco_loop(a, as, v) {
          if (v instanceof Data_List_Types.Cons && Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(a)(v.value0))(Data_Ordering.GT.value)) {
            $tco_var_a = v.value0;
            $tco_var_as = new Data_List_Types.Cons(a, as);
            $copy_v = v.value1;
            return;
          }

          ;
          $tco_done1 = true;
          return new Data_List_Types.Cons(new Data_List_Types.Cons(a, as), sequences(v));
        }

        ;

        while (!$tco_done1) {
          $tco_result = $tco_loop($tco_var_a, $tco_var_as, $copy_v);
        }

        ;
        return $tco_result;
      };
    };
  };

  var ascending = function ascending($copy_a) {
    return function ($copy_as) {
      return function ($copy_v) {
        var $tco_var_a = $copy_a;
        var $tco_var_as = $copy_as;
        var $tco_done2 = false;
        var $tco_result;

        function $tco_loop(a, as, v) {
          if (v instanceof Data_List_Types.Cons && Data_Eq.notEq(Data_Ordering.eqOrdering)(cmp(a)(v.value0))(Data_Ordering.GT.value)) {
            $tco_var_a = v.value0;

            $tco_var_as = function $tco_var_as(ys) {
              return as(new Data_List_Types.Cons(a, ys));
            };

            $copy_v = v.value1;
            return;
          }

          ;
          $tco_done2 = true;
          return new Data_List_Types.Cons(as(singleton(a)), sequences(v));
        }

        ;

        while (!$tco_done2) {
          $tco_result = $tco_loop($tco_var_a, $tco_var_as, $copy_v);
        }

        ;
        return $tco_result;
      };
    };
  };

  return function ($344) {
    return mergeAll(sequences($344));
  };
};

var sort = function sort(dictOrd) {
  return function (xs) {
    return sortBy(Data_Ord.compare(dictOrd))(xs);
  };
};

var tails = function tails(v) {
  if (v instanceof Data_List_Types.Nil) {
    return singleton(Data_List_Types.Nil.value);
  }

  ;

  if (v instanceof Data_List_Types.Cons) {
    return new Data_List_Types.Cons(v, tails(v.value1));
  }

  ;
  throw new Error("Failed pattern match at Data.List (line 657, column 1 - line 657, column 43): " + [v.constructor.name]);
};

var showPattern = function showPattern(dictShow) {
  return {
    show: function show(v) {
      return "(Pattern " + (Data_Show.show(Data_List_Types.showList(dictShow))(v) + ")");
    }
  };
};

var reverse = function () {
  var go = function go($copy_acc) {
    return function ($copy_v) {
      var $tco_var_acc = $copy_acc;
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(acc, v) {
        if (v instanceof Data_List_Types.Nil) {
          $tco_done = true;
          return acc;
        }

        ;

        if (v instanceof Data_List_Types.Cons) {
          $tco_var_acc = new Data_List_Types.Cons(v.value0, acc);
          $copy_v = v.value1;
          return;
        }

        ;
        throw new Error("Failed pattern match at Data.List (line 372, column 3 - line 372, column 19): " + [acc.constructor.name, v.constructor.name]);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_acc, $copy_v);
      }

      ;
      return $tco_result;
    };
  };

  return go(Data_List_Types.Nil.value);
}();

var take = function () {
  var go = function go($copy_acc) {
    return function ($copy_v) {
      return function ($copy_v1) {
        var $tco_var_acc = $copy_acc;
        var $tco_var_v = $copy_v;
        var $tco_done = false;
        var $tco_result;

        function $tco_loop(acc, v, v1) {
          if (v < 1) {
            $tco_done = true;
            return reverse(acc);
          }

          ;

          if (v1 instanceof Data_List_Types.Nil) {
            $tco_done = true;
            return reverse(acc);
          }

          ;

          if (v1 instanceof Data_List_Types.Cons) {
            $tco_var_acc = new Data_List_Types.Cons(v1.value0, acc);
            $tco_var_v = v - 1 | 0;
            $copy_v1 = v1.value1;
            return;
          }

          ;
          throw new Error("Failed pattern match at Data.List (line 524, column 3 - line 524, column 35): " + [acc.constructor.name, v.constructor.name, v1.constructor.name]);
        }

        ;

        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_acc, $tco_var_v, $copy_v1);
        }

        ;
        return $tco_result;
      };
    };
  };

  return go(Data_List_Types.Nil.value);
}();

var takeWhile = function takeWhile(p) {
  var go = function go($copy_acc) {
    return function ($copy_v) {
      var $tco_var_acc = $copy_acc;
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(acc, v) {
        if (v instanceof Data_List_Types.Cons && p(v.value0)) {
          $tco_var_acc = new Data_List_Types.Cons(v.value0, acc);
          $copy_v = v.value1;
          return;
        }

        ;
        $tco_done = true;
        return reverse(acc);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_acc, $copy_v);
      }

      ;
      return $tco_result;
    };
  };

  return go(Data_List_Types.Nil.value);
};

var unsnoc = function unsnoc(lst) {
  var go = function go($copy_v) {
    return function ($copy_v1) {
      var $tco_var_v = $copy_v;
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(v, v1) {
        if (v instanceof Data_List_Types.Nil) {
          $tco_done = true;
          return Data_Maybe.Nothing.value;
        }

        ;

        if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil) {
          $tco_done = true;
          return new Data_Maybe.Just({
            revInit: v1,
            last: v.value0
          });
        }

        ;

        if (v instanceof Data_List_Types.Cons) {
          $tco_var_v = v.value1;
          $copy_v1 = new Data_List_Types.Cons(v.value0, v1);
          return;
        }

        ;
        throw new Error("Failed pattern match at Data.List (line 274, column 3 - line 274, column 21): " + [v.constructor.name, v1.constructor.name]);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_v, $copy_v1);
      }

      ;
      return $tco_result;
    };
  };

  return Data_Functor.map(Data_Maybe.functorMaybe)(function (h) {
    return {
      init: reverse(h.revInit),
      last: h.last
    };
  })(go(lst)(Data_List_Types.Nil.value));
};

var zipWith = function zipWith(f) {
  return function (xs) {
    return function (ys) {
      var go = function go($copy_v) {
        return function ($copy_v1) {
          return function ($copy_acc) {
            var $tco_var_v = $copy_v;
            var $tco_var_v1 = $copy_v1;
            var $tco_done = false;
            var $tco_result;

            function $tco_loop(v, v1, acc) {
              if (v instanceof Data_List_Types.Nil) {
                $tco_done = true;
                return acc;
              }

              ;

              if (v1 instanceof Data_List_Types.Nil) {
                $tco_done = true;
                return acc;
              }

              ;

              if (v instanceof Data_List_Types.Cons && v1 instanceof Data_List_Types.Cons) {
                $tco_var_v = v.value1;
                $tco_var_v1 = v1.value1;
                $copy_acc = new Data_List_Types.Cons(f(v.value0)(v1.value0), acc);
                return;
              }

              ;
              throw new Error("Failed pattern match at Data.List (line 795, column 3 - line 795, column 21): " + [v.constructor.name, v1.constructor.name, acc.constructor.name]);
            }

            ;

            while (!$tco_done) {
              $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_acc);
            }

            ;
            return $tco_result;
          };
        };
      };

      return reverse(go(xs)(ys)(Data_List_Types.Nil.value));
    };
  };
};

var zip = zipWith(Data_Tuple.Tuple.create);

var zipWithA = function zipWithA(dictApplicative) {
  return function (f) {
    return function (xs) {
      return function (ys) {
        return Data_Traversable.sequence(Data_List_Types.traversableList)(dictApplicative)(zipWith(f)(xs)(ys));
      };
    };
  };
};

var range = function range(start) {
  return function (end) {
    if (start === end) {
      return singleton(start);
    }

    ;

    if (Data_Boolean.otherwise) {
      var go = function go($copy_s) {
        return function ($copy_e) {
          return function ($copy_step) {
            return function ($copy_rest) {
              var $tco_var_s = $copy_s;
              var $tco_var_e = $copy_e;
              var $tco_var_step = $copy_step;
              var $tco_done = false;
              var $tco_result;

              function $tco_loop(s, e, step, rest) {
                if (s === e) {
                  $tco_done = true;
                  return new Data_List_Types.Cons(s, rest);
                }

                ;

                if (Data_Boolean.otherwise) {
                  $tco_var_s = s + step | 0;
                  $tco_var_e = e;
                  $tco_var_step = step;
                  $copy_rest = new Data_List_Types.Cons(s, rest);
                  return;
                }

                ;
                throw new Error("Failed pattern match at Data.List (line 152, column 3 - line 153, column 65): " + [s.constructor.name, e.constructor.name, step.constructor.name, rest.constructor.name]);
              }

              ;

              while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_s, $tco_var_e, $tco_var_step, $copy_rest);
              }

              ;
              return $tco_result;
            };
          };
        };
      };

      return go(end)(start)(function () {
        var $225 = start > end;

        if ($225) {
          return 1;
        }

        ;
        return -1 | 0;
      }())(Data_List_Types.Nil.value);
    }

    ;
    throw new Error("Failed pattern match at Data.List (line 148, column 1 - line 148, column 32): " + [start.constructor.name, end.constructor.name]);
  };
};

var partition = function partition(p) {
  return function (xs) {
    var select = function select(x) {
      return function (v) {
        var $228 = p(x);

        if ($228) {
          return {
            no: v.no,
            yes: new Data_List_Types.Cons(x, v.yes)
          };
        }

        ;
        return {
          no: new Data_List_Types.Cons(x, v.no),
          yes: v.yes
        };
      };
    };

    return Data_Foldable.foldr(Data_List_Types.foldableList)(select)({
      no: Data_List_Types.Nil.value,
      yes: Data_List_Types.Nil.value
    })(xs);
  };
};

var $$null = function $$null(v) {
  if (v instanceof Data_List_Types.Nil) {
    return true;
  }

  ;
  return false;
};

var nubBy = function nubBy(p) {
  var go = function go($copy_v) {
    return function ($copy_acc) {
      return function ($copy_v1) {
        var $tco_var_v = $copy_v;
        var $tco_var_acc = $copy_acc;
        var $tco_done = false;
        var $tco_result;

        function $tco_loop(v, acc, v1) {
          if (v1 instanceof Data_List_Types.Nil) {
            $tco_done = true;
            return acc;
          }

          ;

          if (v1 instanceof Data_List_Types.Cons) {
            var v2 = Data_List_Internal.insertAndLookupBy(p)(v1.value0)(v);

            if (v2.found) {
              $tco_var_v = v2.result;
              $tco_var_acc = acc;
              $copy_v1 = v1.value1;
              return;
            }

            ;
            $tco_var_v = v2.result;
            $tco_var_acc = new Data_List_Types.Cons(v1.value0, acc);
            $copy_v1 = v1.value1;
            return;
          }

          ;
          throw new Error("Failed pattern match at Data.List (line 689, column 5 - line 689, column 23): " + [v.constructor.name, acc.constructor.name, v1.constructor.name]);
        }

        ;

        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_v, $tco_var_acc, $copy_v1);
        }

        ;
        return $tco_result;
      };
    };
  };

  var $345 = go(Data_List_Internal.emptySet)(Data_List_Types.Nil.value);
  return function ($346) {
    return reverse($345($346));
  };
};

var nub = function nub(dictOrd) {
  return nubBy(Data_Ord.compare(dictOrd));
};

var newtypePattern = {
  Coercible0: function Coercible0() {
    return undefined;
  }
};
var mapWithIndex = Data_FunctorWithIndex.mapWithIndex(Data_List_Types.functorWithIndexList);

var mapMaybe = function mapMaybe(f) {
  var go = function go($copy_acc) {
    return function ($copy_v) {
      var $tco_var_acc = $copy_acc;
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(acc, v) {
        if (v instanceof Data_List_Types.Nil) {
          $tco_done = true;
          return reverse(acc);
        }

        ;

        if (v instanceof Data_List_Types.Cons) {
          var v1 = f(v.value0);

          if (v1 instanceof Data_Maybe.Nothing) {
            $tco_var_acc = acc;
            $copy_v = v.value1;
            return;
          }

          ;

          if (v1 instanceof Data_Maybe.Just) {
            $tco_var_acc = new Data_List_Types.Cons(v1.value0, acc);
            $copy_v = v.value1;
            return;
          }

          ;
          throw new Error("Failed pattern match at Data.List (line 423, column 5 - line 425, column 32): " + [v1.constructor.name]);
        }

        ;
        throw new Error("Failed pattern match at Data.List (line 421, column 3 - line 421, column 27): " + [acc.constructor.name, v.constructor.name]);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_acc, $copy_v);
      }

      ;
      return $tco_result;
    };
  };

  return go(Data_List_Types.Nil.value);
};

var manyRec = function manyRec(dictMonadRec) {
  return function (dictAlternative) {
    return function (p) {
      var go = function go(acc) {
        return Control_Bind.bind(dictMonadRec.Monad0().Bind1())(Control_Alt.alt(dictAlternative.Plus1().Alt0())(Data_Functor.map(dictAlternative.Plus1().Alt0().Functor0())(Control_Monad_Rec_Class.Loop.create)(p))(Control_Applicative.pure(dictAlternative.Applicative0())(new Control_Monad_Rec_Class.Done(Data_Unit.unit))))(function (aa) {
          return Control_Applicative.pure(dictAlternative.Applicative0())(Data_Bifunctor.bimap(Control_Monad_Rec_Class.bifunctorStep)(function (v) {
            return new Data_List_Types.Cons(v, acc);
          })(function (v) {
            return reverse(acc);
          })(aa));
        });
      };

      return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go)(Data_List_Types.Nil.value);
    };
  };
};

var someRec = function someRec(dictMonadRec) {
  return function (dictAlternative) {
    return function (v) {
      return Control_Apply.apply(dictAlternative.Applicative0().Apply0())(Data_Functor.map(dictAlternative.Plus1().Alt0().Functor0())(Data_List_Types.Cons.create)(v))(manyRec(dictMonadRec)(dictAlternative)(v));
    };
  };
};

var some = function some(dictAlternative) {
  return function (dictLazy) {
    return function (v) {
      return Control_Apply.apply(dictAlternative.Applicative0().Apply0())(Data_Functor.map(dictAlternative.Plus1().Alt0().Functor0())(Data_List_Types.Cons.create)(v))(Control_Lazy.defer(dictLazy)(function (v1) {
        return many(dictAlternative)(dictLazy)(v);
      }));
    };
  };
};

var many = function many(dictAlternative) {
  return function (dictLazy) {
    return function (v) {
      return Control_Alt.alt(dictAlternative.Plus1().Alt0())(some(dictAlternative)(dictLazy)(v))(Control_Applicative.pure(dictAlternative.Applicative0())(Data_List_Types.Nil.value));
    };
  };
};

var length = Data_Foldable.foldl(Data_List_Types.foldableList)(function (acc) {
  return function (v) {
    return acc + 1 | 0;
  };
})(0);

var last = function last($copy_v) {
  var $tco_done = false;
  var $tco_result;

  function $tco_loop(v) {
    if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil) {
      $tco_done = true;
      return new Data_Maybe.Just(v.value0);
    }

    ;

    if (v instanceof Data_List_Types.Cons) {
      $copy_v = v.value1;
      return;
    }

    ;
    $tco_done = true;
    return Data_Maybe.Nothing.value;
  }

  ;

  while (!$tco_done) {
    $tco_result = $tco_loop($copy_v);
  }

  ;
  return $tco_result;
};

var insertBy = function insertBy(v) {
  return function (x) {
    return function (v1) {
      if (v1 instanceof Data_List_Types.Nil) {
        return singleton(x);
      }

      ;

      if (v1 instanceof Data_List_Types.Cons) {
        var v2 = v(x)(v1.value0);

        if (v2 instanceof Data_Ordering.GT) {
          return new Data_List_Types.Cons(v1.value0, insertBy(v)(x)(v1.value1));
        }

        ;
        return new Data_List_Types.Cons(x, v1);
      }

      ;
      throw new Error("Failed pattern match at Data.List (line 220, column 1 - line 220, column 68): " + [v.constructor.name, x.constructor.name, v1.constructor.name]);
    };
  };
};

var insertAt = function insertAt(v) {
  return function (v1) {
    return function (v2) {
      if (v === 0) {
        return new Data_Maybe.Just(new Data_List_Types.Cons(v1, v2));
      }

      ;

      if (v2 instanceof Data_List_Types.Cons) {
        return Data_Functor.map(Data_Maybe.functorMaybe)(function (v3) {
          return new Data_List_Types.Cons(v2.value0, v3);
        })(insertAt(v - 1 | 0)(v1)(v2.value1));
      }

      ;
      return Data_Maybe.Nothing.value;
    };
  };
};

var insert = function insert(dictOrd) {
  return insertBy(Data_Ord.compare(dictOrd));
};

var init = function init(lst) {
  return Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
    return v.init;
  })(unsnoc(lst));
};

var index = function index($copy_v) {
  return function ($copy_v1) {
    var $tco_var_v = $copy_v;
    var $tco_done = false;
    var $tco_result;

    function $tco_loop(v, v1) {
      if (v instanceof Data_List_Types.Nil) {
        $tco_done = true;
        return Data_Maybe.Nothing.value;
      }

      ;

      if (v instanceof Data_List_Types.Cons && v1 === 0) {
        $tco_done = true;
        return new Data_Maybe.Just(v.value0);
      }

      ;

      if (v instanceof Data_List_Types.Cons) {
        $tco_var_v = v.value1;
        $copy_v1 = v1 - 1 | 0;
        return;
      }

      ;
      throw new Error("Failed pattern match at Data.List (line 285, column 1 - line 285, column 44): " + [v.constructor.name, v1.constructor.name]);
    }

    ;

    while (!$tco_done) {
      $tco_result = $tco_loop($tco_var_v, $copy_v1);
    }

    ;
    return $tco_result;
  };
};

var head = function head(v) {
  if (v instanceof Data_List_Types.Nil) {
    return Data_Maybe.Nothing.value;
  }

  ;

  if (v instanceof Data_List_Types.Cons) {
    return new Data_Maybe.Just(v.value0);
  }

  ;
  throw new Error("Failed pattern match at Data.List (line 234, column 1 - line 234, column 22): " + [v.constructor.name]);
};

var transpose = function transpose(v) {
  if (v instanceof Data_List_Types.Nil) {
    return Data_List_Types.Nil.value;
  }

  ;

  if (v instanceof Data_List_Types.Cons && v.value0 instanceof Data_List_Types.Nil) {
    return transpose(v.value1);
  }

  ;

  if (v instanceof Data_List_Types.Cons && v.value0 instanceof Data_List_Types.Cons) {
    return new Data_List_Types.Cons(new Data_List_Types.Cons(v.value0.value0, mapMaybe(head)(v.value1)), transpose(new Data_List_Types.Cons(v.value0.value1, mapMaybe(tail)(v.value1))));
  }

  ;
  throw new Error("Failed pattern match at Data.List (line 829, column 1 - line 829, column 54): " + [v.constructor.name]);
};

var groupBy = function groupBy(v) {
  return function (v1) {
    if (v1 instanceof Data_List_Types.Nil) {
      return Data_List_Types.Nil.value;
    }

    ;

    if (v1 instanceof Data_List_Types.Cons) {
      var v2 = span(v(v1.value0))(v1.value1);
      return new Data_List_Types.Cons(new Data_NonEmpty.NonEmpty(v1.value0, v2.init), groupBy(v)(v2.rest));
    }

    ;
    throw new Error("Failed pattern match at Data.List (line 624, column 1 - line 624, column 80): " + [v.constructor.name, v1.constructor.name]);
  };
};

var groupAllBy = function groupAllBy(dictOrd) {
  return function (p) {
    var $347 = groupBy(p);
    var $348 = sort(dictOrd);
    return function ($349) {
      return $347($348($349));
    };
  };
};

var group = function group(dictEq) {
  return groupBy(Data_Eq.eq(dictEq));
};

var groupAll = function groupAll(dictOrd) {
  var $350 = group(dictOrd.Eq0());
  var $351 = sort(dictOrd);
  return function ($352) {
    return $350($351($352));
  };
};

var group$prime = function group$prime() {
  return function (dictOrd) {
    return groupAll(dictOrd);
  };
};

var fromFoldable = function fromFoldable(dictFoldable) {
  return Data_Foldable.foldr(dictFoldable)(Data_List_Types.Cons.create)(Data_List_Types.Nil.value);
};

var foldM = function foldM(dictMonad) {
  return function (v) {
    return function (b) {
      return function (v1) {
        if (v1 instanceof Data_List_Types.Nil) {
          return Control_Applicative.pure(dictMonad.Applicative0())(b);
        }

        ;

        if (v1 instanceof Data_List_Types.Cons) {
          return Control_Bind.bind(dictMonad.Bind1())(v(b)(v1.value0))(function (b$prime) {
            return foldM(dictMonad)(v)(b$prime)(v1.value1);
          });
        }

        ;
        throw new Error("Failed pattern match at Data.List (line 840, column 1 - line 840, column 72): " + [v.constructor.name, b.constructor.name, v1.constructor.name]);
      };
    };
  };
};

var findIndex = function findIndex(fn) {
  var go = function go($copy_v) {
    return function ($copy_v1) {
      var $tco_var_v = $copy_v;
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(v, v1) {
        if (v1 instanceof Data_List_Types.Cons) {
          if (fn(v1.value0)) {
            $tco_done = true;
            return new Data_Maybe.Just(v);
          }

          ;

          if (Data_Boolean.otherwise) {
            $tco_var_v = v + 1 | 0;
            $copy_v1 = v1.value1;
            return;
          }

          ;
        }

        ;

        if (v1 instanceof Data_List_Types.Nil) {
          $tco_done = true;
          return Data_Maybe.Nothing.value;
        }

        ;
        throw new Error("Failed pattern match at Data.List (line 305, column 3 - line 305, column 35): " + [v.constructor.name, v1.constructor.name]);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_v, $copy_v1);
      }

      ;
      return $tco_result;
    };
  };

  return go(0);
};

var findLastIndex = function findLastIndex(fn) {
  return function (xs) {
    return Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
      return (length(xs) - 1 | 0) - v | 0;
    })(findIndex(fn)(reverse(xs)));
  };
};

var filterM = function filterM(dictMonad) {
  return function (v) {
    return function (v1) {
      if (v1 instanceof Data_List_Types.Nil) {
        return Control_Applicative.pure(dictMonad.Applicative0())(Data_List_Types.Nil.value);
      }

      ;

      if (v1 instanceof Data_List_Types.Cons) {
        return Control_Bind.bind(dictMonad.Bind1())(v(v1.value0))(function (b) {
          return Control_Bind.bind(dictMonad.Bind1())(filterM(dictMonad)(v)(v1.value1))(function (xs$prime) {
            return Control_Applicative.pure(dictMonad.Applicative0())(function () {
              if (b) {
                return new Data_List_Types.Cons(v1.value0, xs$prime);
              }

              ;
              return xs$prime;
            }());
          });
        });
      }

      ;
      throw new Error("Failed pattern match at Data.List (line 407, column 1 - line 407, column 75): " + [v.constructor.name, v1.constructor.name]);
    };
  };
};

var filter = function filter(p) {
  var go = function go($copy_acc) {
    return function ($copy_v) {
      var $tco_var_acc = $copy_acc;
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(acc, v) {
        if (v instanceof Data_List_Types.Nil) {
          $tco_done = true;
          return reverse(acc);
        }

        ;

        if (v instanceof Data_List_Types.Cons) {
          if (p(v.value0)) {
            $tco_var_acc = new Data_List_Types.Cons(v.value0, acc);
            $copy_v = v.value1;
            return;
          }

          ;

          if (Data_Boolean.otherwise) {
            $tco_var_acc = acc;
            $copy_v = v.value1;
            return;
          }

          ;
        }

        ;
        throw new Error("Failed pattern match at Data.List (line 394, column 3 - line 394, column 27): " + [acc.constructor.name, v.constructor.name]);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_acc, $copy_v);
      }

      ;
      return $tco_result;
    };
  };

  return go(Data_List_Types.Nil.value);
};

var intersectBy = function intersectBy(v) {
  return function (v1) {
    return function (v2) {
      if (v1 instanceof Data_List_Types.Nil) {
        return Data_List_Types.Nil.value;
      }

      ;

      if (v2 instanceof Data_List_Types.Nil) {
        return Data_List_Types.Nil.value;
      }

      ;
      return filter(function (x) {
        return Data_Foldable.any(Data_List_Types.foldableList)(Data_HeytingAlgebra.heytingAlgebraBoolean)(v(x))(v2);
      })(v1);
    };
  };
};

var intersect = function intersect(dictEq) {
  return intersectBy(Data_Eq.eq(dictEq));
};

var nubByEq = function nubByEq(v) {
  return function (v1) {
    if (v1 instanceof Data_List_Types.Nil) {
      return Data_List_Types.Nil.value;
    }

    ;

    if (v1 instanceof Data_List_Types.Cons) {
      return new Data_List_Types.Cons(v1.value0, nubByEq(v)(filter(function (y) {
        return !v(v1.value0)(y);
      })(v1.value1)));
    }

    ;
    throw new Error("Failed pattern match at Data.List (line 721, column 1 - line 721, column 61): " + [v.constructor.name, v1.constructor.name]);
  };
};

var nubEq = function nubEq(dictEq) {
  return nubByEq(Data_Eq.eq(dictEq));
};

var eqPattern = function eqPattern(dictEq) {
  return {
    eq: function eq(x) {
      return function (y) {
        return Data_Eq.eq(Data_List_Types.eqList(dictEq))(x)(y);
      };
    }
  };
};

var ordPattern = function ordPattern(dictOrd) {
  return {
    compare: function compare(x) {
      return function (y) {
        return Data_Ord.compare(Data_List_Types.ordList(dictOrd))(x)(y);
      };
    },
    Eq0: function Eq0() {
      return eqPattern(dictOrd.Eq0());
    }
  };
};

var elemLastIndex = function elemLastIndex(dictEq) {
  return function (x) {
    return findLastIndex(function (v) {
      return Data_Eq.eq(dictEq)(v)(x);
    });
  };
};

var elemIndex = function elemIndex(dictEq) {
  return function (x) {
    return findIndex(function (v) {
      return Data_Eq.eq(dictEq)(v)(x);
    });
  };
};

var dropWhile = function dropWhile(p) {
  var go = function go($copy_v) {
    var $tco_done = false;
    var $tco_result;

    function $tco_loop(v) {
      if (v instanceof Data_List_Types.Cons && p(v.value0)) {
        $copy_v = v.value1;
        return;
      }

      ;
      $tco_done = true;
      return v;
    }

    ;

    while (!$tco_done) {
      $tco_result = $tco_loop($copy_v);
    }

    ;
    return $tco_result;
  };

  return go;
};

var dropEnd = function dropEnd(n) {
  return function (xs) {
    return take(length(xs) - n | 0)(xs);
  };
};

var drop = function drop($copy_v) {
  return function ($copy_v1) {
    var $tco_var_v = $copy_v;
    var $tco_done = false;
    var $tco_result;

    function $tco_loop(v, v1) {
      if (v < 1) {
        $tco_done = true;
        return v1;
      }

      ;

      if (v1 instanceof Data_List_Types.Nil) {
        $tco_done = true;
        return Data_List_Types.Nil.value;
      }

      ;

      if (v1 instanceof Data_List_Types.Cons) {
        $tco_var_v = v - 1 | 0;
        $copy_v1 = v1.value1;
        return;
      }

      ;
      throw new Error("Failed pattern match at Data.List (line 547, column 1 - line 547, column 42): " + [v.constructor.name, v1.constructor.name]);
    }

    ;

    while (!$tco_done) {
      $tco_result = $tco_loop($tco_var_v, $copy_v1);
    }

    ;
    return $tco_result;
  };
};

var slice = function slice(start) {
  return function (end) {
    return function (xs) {
      return take(end - start | 0)(drop(start)(xs));
    };
  };
};

var takeEnd = function takeEnd(n) {
  return function (xs) {
    return drop(length(xs) - n | 0)(xs);
  };
};

var deleteBy = function deleteBy(v) {
  return function (v1) {
    return function (v2) {
      if (v2 instanceof Data_List_Types.Nil) {
        return Data_List_Types.Nil.value;
      }

      ;

      if (v2 instanceof Data_List_Types.Cons && v(v1)(v2.value0)) {
        return v2.value1;
      }

      ;

      if (v2 instanceof Data_List_Types.Cons) {
        return new Data_List_Types.Cons(v2.value0, deleteBy(v)(v1)(v2.value1));
      }

      ;
      throw new Error("Failed pattern match at Data.List (line 748, column 1 - line 748, column 67): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
    };
  };
};

var unionBy = function unionBy(eq) {
  return function (xs) {
    return function (ys) {
      return Data_Semigroup.append(Data_List_Types.semigroupList)(xs)(Data_Foldable.foldl(Data_List_Types.foldableList)(Data_Function.flip(deleteBy(eq)))(nubByEq(eq)(ys))(xs));
    };
  };
};

var union = function union(dictEq) {
  return unionBy(Data_Eq.eq(dictEq));
};

var deleteAt = function deleteAt(v) {
  return function (v1) {
    if (v === 0 && v1 instanceof Data_List_Types.Cons) {
      return new Data_Maybe.Just(v1.value1);
    }

    ;

    if (v1 instanceof Data_List_Types.Cons) {
      return Data_Functor.map(Data_Maybe.functorMaybe)(function (v2) {
        return new Data_List_Types.Cons(v1.value0, v2);
      })(deleteAt(v - 1 | 0)(v1.value1));
    }

    ;
    return Data_Maybe.Nothing.value;
  };
};

var $$delete = function $$delete(dictEq) {
  return deleteBy(Data_Eq.eq(dictEq));
};

var difference = function difference(dictEq) {
  return Data_Foldable.foldl(Data_List_Types.foldableList)(Data_Function.flip($$delete(dictEq)));
};

var concatMap = Data_Function.flip(Control_Bind.bind(Data_List_Types.bindList));

var concat = function concat(v) {
  return Control_Bind.bind(Data_List_Types.bindList)(v)(Control_Category.identity(Control_Category.categoryFn));
};

var catMaybes = mapMaybe(Control_Category.identity(Control_Category.categoryFn));

var alterAt = function alterAt(v) {
  return function (v1) {
    return function (v2) {
      if (v === 0 && v2 instanceof Data_List_Types.Cons) {
        return new Data_Maybe.Just(function () {
          var v3 = v1(v2.value0);

          if (v3 instanceof Data_Maybe.Nothing) {
            return v2.value1;
          }

          ;

          if (v3 instanceof Data_Maybe.Just) {
            return new Data_List_Types.Cons(v3.value0, v2.value1);
          }

          ;
          throw new Error("Failed pattern match at Data.List (line 356, column 3 - line 358, column 23): " + [v3.constructor.name]);
        }());
      }

      ;

      if (v2 instanceof Data_List_Types.Cons) {
        return Data_Functor.map(Data_Maybe.functorMaybe)(function (v3) {
          return new Data_List_Types.Cons(v2.value0, v3);
        })(alterAt(v - 1 | 0)(v1)(v2.value1));
      }

      ;
      return Data_Maybe.Nothing.value;
    };
  };
};

var modifyAt = function modifyAt(n) {
  return function (f) {
    return alterAt(n)(function ($353) {
      return Data_Maybe.Just.create(f($353));
    });
  };
};

module.exports = {
  toUnfoldable: toUnfoldable,
  fromFoldable: fromFoldable,
  singleton: singleton,
  range: range,
  some: some,
  someRec: someRec,
  many: many,
  manyRec: manyRec,
  "null": $$null,
  length: length,
  snoc: snoc,
  insert: insert,
  insertBy: insertBy,
  head: head,
  last: last,
  tail: tail,
  init: init,
  uncons: uncons,
  unsnoc: unsnoc,
  index: index,
  elemIndex: elemIndex,
  elemLastIndex: elemLastIndex,
  findIndex: findIndex,
  findLastIndex: findLastIndex,
  insertAt: insertAt,
  deleteAt: deleteAt,
  updateAt: updateAt,
  modifyAt: modifyAt,
  alterAt: alterAt,
  reverse: reverse,
  concat: concat,
  concatMap: concatMap,
  filter: filter,
  filterM: filterM,
  mapMaybe: mapMaybe,
  catMaybes: catMaybes,
  mapWithIndex: mapWithIndex,
  sort: sort,
  sortBy: sortBy,
  Pattern: Pattern,
  stripPrefix: stripPrefix,
  slice: slice,
  take: take,
  takeEnd: takeEnd,
  takeWhile: takeWhile,
  drop: drop,
  dropEnd: dropEnd,
  dropWhile: dropWhile,
  span: span,
  group: group,
  groupAll: groupAll,
  "group'": group$prime,
  groupBy: groupBy,
  groupAllBy: groupAllBy,
  partition: partition,
  nub: nub,
  nubBy: nubBy,
  nubEq: nubEq,
  nubByEq: nubByEq,
  union: union,
  unionBy: unionBy,
  "delete": $$delete,
  deleteBy: deleteBy,
  difference: difference,
  intersect: intersect,
  intersectBy: intersectBy,
  zipWith: zipWith,
  zipWithA: zipWithA,
  zip: zip,
  unzip: unzip,
  transpose: transpose,
  foldM: foldM,
  eqPattern: eqPattern,
  ordPattern: ordPattern,
  newtypePattern: newtypePattern,
  showPattern: showPattern,
  all: Data_Foldable.all,
  any: Data_Foldable.any,
  elem: Data_Foldable.elem,
  find: Data_Foldable.find,
  findMap: Data_Foldable.findMap,
  fold: Data_Foldable.fold,
  foldMap: Data_Foldable.foldMap,
  foldl: Data_Foldable.foldl,
  foldr: Data_Foldable.foldr,
  intercalate: Data_Foldable.intercalate,
  notElem: Data_Foldable.notElem,
  Cons: Data_List_Types.Cons,
  Nil: Data_List_Types.Nil,
  scanl: Data_Traversable.scanl,
  scanr: Data_Traversable.scanr
};
},{"../Control.Alt/index.js":"output/Control.Alt/index.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Category/index.js":"output/Control.Category/index.js","../Control.Lazy/index.js":"output/Control.Lazy/index.js","../Control.Monad.Rec.Class/index.js":"output/Control.Monad.Rec.Class/index.js","../Data.Bifunctor/index.js":"output/Data.Bifunctor/index.js","../Data.Boolean/index.js":"output/Data.Boolean/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Foldable/index.js":"output/Data.Foldable/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.FunctorWithIndex/index.js":"output/Data.FunctorWithIndex/index.js","../Data.HeytingAlgebra/index.js":"output/Data.HeytingAlgebra/index.js","../Data.List.Internal/index.js":"output/Data.List.Internal/index.js","../Data.List.Types/index.js":"output/Data.List.Types/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.NonEmpty/index.js":"output/Data.NonEmpty/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Data.Traversable/index.js":"output/Data.Traversable/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Data.Unfoldable/index.js":"output/Data.Unfoldable/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js"}],"output/Partial.Unsafe/foreign.js":[function(require,module,exports) {
"use strict"; // module Partial.Unsafe

exports._unsafePartial = function (f) {
  return f();
};
},{}],"output/Partial/foreign.js":[function(require,module,exports) {
"use strict"; // module Partial

exports._crashWith = function (msg) {
  throw new Error(msg);
};
},{}],"output/Partial/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var crashWith = function crashWith() {
  return $foreign["_crashWith"];
};

var crash = function crash() {
  return crashWith()("Partial.crash: partial function");
};

module.exports = {
  crash: crash,
  crashWith: crashWith
};
},{"./foreign.js":"output/Partial/foreign.js"}],"output/Partial.Unsafe/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Partial = require("../Partial/index.js");

var unsafePartial = $foreign["_unsafePartial"];

var unsafeCrashWith = function unsafeCrashWith(msg) {
  return unsafePartial(function () {
    return Partial.crashWith()(msg);
  });
};

module.exports = {
  unsafePartial: unsafePartial,
  unsafeCrashWith: unsafeCrashWith
};
},{"./foreign.js":"output/Partial.Unsafe/foreign.js","../Partial/index.js":"output/Partial/index.js"}],"output/Data.List.NonEmpty/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Data_Boolean = require("../Data.Boolean/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");

var Data_List = require("../Data.List/index.js");

var Data_List_Types = require("../Data.List.Types/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_NonEmpty = require("../Data.NonEmpty/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semigroup_Foldable = require("../Data.Semigroup.Foldable/index.js");

var Data_Semigroup_Traversable = require("../Data.Semigroup.Traversable/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unfoldable = require("../Data.Unfoldable/index.js");

var Partial_Unsafe = require("../Partial.Unsafe/index.js");

var zipWith = function zipWith(f) {
  return function (v) {
    return function (v1) {
      return new Data_NonEmpty.NonEmpty(f(v.value0)(v1.value0), Data_List.zipWith(f)(v.value1)(v1.value1));
    };
  };
};

var zipWithA = function zipWithA(dictApplicative) {
  return function (f) {
    return function (xs) {
      return function (ys) {
        return Data_Semigroup_Traversable.sequence1(Data_List_Types.traversable1NonEmptyList)(dictApplicative.Apply0())(zipWith(f)(xs)(ys));
      };
    };
  };
};

var zip = zipWith(Data_Tuple.Tuple.create);

var wrappedOperation2 = function wrappedOperation2(name) {
  return function (f) {
    return function (v) {
      return function (v1) {
        var v2 = f(new Data_List_Types.Cons(v.value0, v.value1))(new Data_List_Types.Cons(v1.value0, v1.value1));

        if (v2 instanceof Data_List_Types.Cons) {
          return new Data_NonEmpty.NonEmpty(v2.value0, v2.value1);
        }

        ;

        if (v2 instanceof Data_List_Types.Nil) {
          return Partial_Unsafe.unsafeCrashWith("Impossible: empty list in NonEmptyList " + name);
        }

        ;
        throw new Error("Failed pattern match at Data.List.NonEmpty (line 110, column 3 - line 112, column 81): " + [v2.constructor.name]);
      };
    };
  };
};

var wrappedOperation = function wrappedOperation(name) {
  return function (f) {
    return function (v) {
      var v1 = f(new Data_List_Types.Cons(v.value0, v.value1));

      if (v1 instanceof Data_List_Types.Cons) {
        return new Data_NonEmpty.NonEmpty(v1.value0, v1.value1);
      }

      ;

      if (v1 instanceof Data_List_Types.Nil) {
        return Partial_Unsafe.unsafeCrashWith("Impossible: empty list in NonEmptyList " + name);
      }

      ;
      throw new Error("Failed pattern match at Data.List.NonEmpty (line 97, column 3 - line 99, column 81): " + [v1.constructor.name]);
    };
  };
};

var updateAt = function updateAt(i) {
  return function (a) {
    return function (v) {
      if (i === 0) {
        return new Data_Maybe.Just(new Data_NonEmpty.NonEmpty(a, v.value1));
      }

      ;

      if (Data_Boolean.otherwise) {
        return Data_Functor.map(Data_Maybe.functorMaybe)(function ($164) {
          return Data_List_Types.NonEmptyList(function (v1) {
            return new Data_NonEmpty.NonEmpty(v.value0, v1);
          }($164));
        })(Data_List.updateAt(i - 1 | 0)(a)(v.value1));
      }

      ;
      throw new Error("Failed pattern match at Data.List.NonEmpty (line 203, column 1 - line 203, column 75): " + [i.constructor.name, a.constructor.name, v.constructor.name]);
    };
  };
};

var unzip = function unzip(ts) {
  return new Data_Tuple.Tuple(Data_Functor.map(Data_List_Types.functorNonEmptyList)(Data_Tuple.fst)(ts), Data_Functor.map(Data_List_Types.functorNonEmptyList)(Data_Tuple.snd)(ts));
};

var unsnoc = function unsnoc(v) {
  var v1 = Data_List.unsnoc(v.value1);

  if (v1 instanceof Data_Maybe.Nothing) {
    return {
      init: Data_List_Types.Nil.value,
      last: v.value0
    };
  }

  ;

  if (v1 instanceof Data_Maybe.Just) {
    return {
      init: new Data_List_Types.Cons(v.value0, v1.value0.init),
      last: v1.value0.last
    };
  }

  ;
  throw new Error("Failed pattern match at Data.List.NonEmpty (line 165, column 35 - line 167, column 50): " + [v1.constructor.name]);
};

var unionBy = function () {
  var $165 = wrappedOperation2("unionBy");
  return function ($166) {
    return $165(Data_List.unionBy($166));
  };
}();

var union = function union(dictEq) {
  return wrappedOperation2("union")(Data_List.union(dictEq));
};

var uncons = function uncons(v) {
  return {
    head: v.value0,
    tail: v.value1
  };
};

var toList = function toList(v) {
  return new Data_List_Types.Cons(v.value0, v.value1);
};

var toUnfoldable = function toUnfoldable(dictUnfoldable) {
  var $167 = Data_Unfoldable.unfoldr(dictUnfoldable)(function (xs) {
    return Data_Functor.map(Data_Maybe.functorMaybe)(function (rec) {
      return new Data_Tuple.Tuple(rec.head, rec.tail);
    })(Data_List.uncons(xs));
  });
  return function ($168) {
    return $167(toList($168));
  };
};

var tail = function tail(v) {
  return v.value1;
};

var sortBy = function () {
  var $169 = wrappedOperation("sortBy");
  return function ($170) {
    return $169(Data_List.sortBy($170));
  };
}();

var sort = function sort(dictOrd) {
  return function (xs) {
    return sortBy(Data_Ord.compare(dictOrd))(xs);
  };
};

var snoc = function snoc(v) {
  return function (y) {
    return new Data_NonEmpty.NonEmpty(v.value0, Data_List.snoc(v.value1)(y));
  };
};

var singleton = function () {
  var $171 = Data_NonEmpty.singleton(Data_List_Types.plusList);
  return function ($172) {
    return Data_List_Types.NonEmptyList($171($172));
  };
}();

var snoc$prime = function snoc$prime(v) {
  return function (y) {
    if (v instanceof Data_List_Types.Cons) {
      return new Data_NonEmpty.NonEmpty(v.value0, Data_List.snoc(v.value1)(y));
    }

    ;

    if (v instanceof Data_List_Types.Nil) {
      return singleton(y);
    }

    ;
    throw new Error("Failed pattern match at Data.List.NonEmpty (line 145, column 1 - line 145, column 51): " + [v.constructor.name, y.constructor.name]);
  };
};

var reverse = wrappedOperation("reverse")(Data_List.reverse);

var nubEq = function nubEq(dictEq) {
  return wrappedOperation("nubEq")(Data_List.nubEq(dictEq));
};

var nubByEq = function () {
  var $173 = wrappedOperation("nubByEq");
  return function ($174) {
    return $173(Data_List.nubByEq($174));
  };
}();

var nubBy = function () {
  var $175 = wrappedOperation("nubBy");
  return function ($176) {
    return $175(Data_List.nubBy($176));
  };
}();

var nub = function nub(dictOrd) {
  return wrappedOperation("nub")(Data_List.nub(dictOrd));
};

var modifyAt = function modifyAt(i) {
  return function (f) {
    return function (v) {
      if (i === 0) {
        return new Data_Maybe.Just(new Data_NonEmpty.NonEmpty(f(v.value0), v.value1));
      }

      ;

      if (Data_Boolean.otherwise) {
        return Data_Functor.map(Data_Maybe.functorMaybe)(function ($177) {
          return Data_List_Types.NonEmptyList(function (v1) {
            return new Data_NonEmpty.NonEmpty(v.value0, v1);
          }($177));
        })(Data_List.modifyAt(i - 1 | 0)(f)(v.value1));
      }

      ;
      throw new Error("Failed pattern match at Data.List.NonEmpty (line 208, column 1 - line 208, column 82): " + [i.constructor.name, f.constructor.name, v.constructor.name]);
    };
  };
};

var mapWithIndex = Data_FunctorWithIndex.mapWithIndex(Data_List_Types.functorWithIndexNonEmptyList);

var lift = function lift(f) {
  return function (v) {
    return f(new Data_List_Types.Cons(v.value0, v.value1));
  };
};

var mapMaybe = function mapMaybe($178) {
  return lift(Data_List.mapMaybe($178));
};

var partition = function partition($179) {
  return lift(Data_List.partition($179));
};

var span = function span($180) {
  return lift(Data_List.span($180));
};

var take = function take($181) {
  return lift(Data_List.take($181));
};

var takeWhile = function takeWhile($182) {
  return lift(Data_List.takeWhile($182));
};

var length = function length(v) {
  return 1 + Data_List.length(v.value1) | 0;
};

var last = function last(v) {
  return Data_Maybe.fromMaybe(v.value0)(Data_List.last(v.value1));
};

var intersectBy = function () {
  var $183 = wrappedOperation2("intersectBy");
  return function ($184) {
    return $183(Data_List.intersectBy($184));
  };
}();

var intersect = function intersect(dictEq) {
  return wrappedOperation2("intersect")(Data_List.intersect(dictEq));
};

var insertAt = function insertAt(i) {
  return function (a) {
    return function (v) {
      if (i === 0) {
        return new Data_Maybe.Just(new Data_NonEmpty.NonEmpty(a, new Data_List_Types.Cons(v.value0, v.value1)));
      }

      ;

      if (Data_Boolean.otherwise) {
        return Data_Functor.map(Data_Maybe.functorMaybe)(function ($185) {
          return Data_List_Types.NonEmptyList(function (v1) {
            return new Data_NonEmpty.NonEmpty(v.value0, v1);
          }($185));
        })(Data_List.insertAt(i - 1 | 0)(a)(v.value1));
      }

      ;
      throw new Error("Failed pattern match at Data.List.NonEmpty (line 198, column 1 - line 198, column 75): " + [i.constructor.name, a.constructor.name, v.constructor.name]);
    };
  };
};

var init = function init(v) {
  return Data_Maybe.maybe(Data_List_Types.Nil.value)(function (v1) {
    return new Data_List_Types.Cons(v.value0, v1);
  })(Data_List.init(v.value1));
};

var index = function index(v) {
  return function (i) {
    if (i === 0) {
      return new Data_Maybe.Just(v.value0);
    }

    ;

    if (Data_Boolean.otherwise) {
      return Data_List.index(v.value1)(i - 1 | 0);
    }

    ;
    throw new Error("Failed pattern match at Data.List.NonEmpty (line 172, column 1 - line 172, column 52): " + [v.constructor.name, i.constructor.name]);
  };
};

var head = function head(v) {
  return v.value0;
};

var groupBy = function () {
  var $186 = wrappedOperation("groupBy");
  return function ($187) {
    return $186(Data_List.groupBy($187));
  };
}();

var groupAllBy = function groupAllBy(dictOrd) {
  var $188 = wrappedOperation("groupAllBy");
  var $189 = Data_List.groupAllBy(dictOrd);
  return function ($190) {
    return $188($189($190));
  };
};

var groupAll = function groupAll(dictOrd) {
  return wrappedOperation("groupAll")(Data_List.groupAll(dictOrd));
};

var group$prime = function group$prime() {
  return function (dictOrd) {
    return groupAll(dictOrd);
  };
};

var group = function group(dictEq) {
  return wrappedOperation("group")(Data_List.group(dictEq));
};

var fromList = function fromList(v) {
  if (v instanceof Data_List_Types.Nil) {
    return Data_Maybe.Nothing.value;
  }

  ;

  if (v instanceof Data_List_Types.Cons) {
    return new Data_Maybe.Just(new Data_NonEmpty.NonEmpty(v.value0, v.value1));
  }

  ;
  throw new Error("Failed pattern match at Data.List.NonEmpty (line 126, column 1 - line 126, column 57): " + [v.constructor.name]);
};

var fromFoldable = function fromFoldable(dictFoldable) {
  var $191 = Data_List.fromFoldable(dictFoldable);
  return function ($192) {
    return fromList($191($192));
  };
};

var foldM = function foldM(dictMonad) {
  return function (f) {
    return function (b) {
      return function (v) {
        return Control_Bind.bind(dictMonad.Bind1())(f(b)(v.value0))(function (b$prime) {
          return Data_List.foldM(dictMonad)(f)(b$prime)(v.value1);
        });
      };
    };
  };
};

var findLastIndex = function findLastIndex(f) {
  return function (v) {
    var v1 = Data_List.findLastIndex(f)(v.value1);

    if (v1 instanceof Data_Maybe.Just) {
      return new Data_Maybe.Just(v1.value0 + 1 | 0);
    }

    ;

    if (v1 instanceof Data_Maybe.Nothing) {
      if (f(v.value0)) {
        return new Data_Maybe.Just(0);
      }

      ;

      if (Data_Boolean.otherwise) {
        return Data_Maybe.Nothing.value;
      }

      ;
    }

    ;
    throw new Error("Failed pattern match at Data.List.NonEmpty (line 192, column 3 - line 196, column 29): " + [v1.constructor.name]);
  };
};

var findIndex = function findIndex(f) {
  return function (v) {
    if (f(v.value0)) {
      return new Data_Maybe.Just(0);
    }

    ;

    if (Data_Boolean.otherwise) {
      return Data_Functor.map(Data_Maybe.functorMaybe)(function (v1) {
        return v1 + 1 | 0;
      })(Data_List.findIndex(f)(v.value1));
    }

    ;
    throw new Error("Failed pattern match at Data.List.NonEmpty (line 185, column 1 - line 185, column 69): " + [f.constructor.name, v.constructor.name]);
  };
};

var filterM = function filterM(dictMonad) {
  var $193 = Data_List.filterM(dictMonad);
  return function ($194) {
    return lift($193($194));
  };
};

var filter = function filter($195) {
  return lift(Data_List.filter($195));
};

var elemLastIndex = function elemLastIndex(dictEq) {
  return function (x) {
    return findLastIndex(function (v) {
      return Data_Eq.eq(dictEq)(v)(x);
    });
  };
};

var elemIndex = function elemIndex(dictEq) {
  return function (x) {
    return findIndex(function (v) {
      return Data_Eq.eq(dictEq)(v)(x);
    });
  };
};

var dropWhile = function dropWhile($196) {
  return lift(Data_List.dropWhile($196));
};

var drop = function drop($197) {
  return lift(Data_List.drop($197));
};

var cons$prime = function cons$prime(x) {
  return function (xs) {
    return new Data_NonEmpty.NonEmpty(x, xs);
  };
};

var cons = function cons(y) {
  return function (v) {
    return new Data_NonEmpty.NonEmpty(y, new Data_List_Types.Cons(v.value0, v.value1));
  };
};

var concatMap = Data_Function.flip(Control_Bind.bind(Data_List_Types.bindNonEmptyList));

var concat = function concat(v) {
  return Control_Bind.bind(Data_List_Types.bindNonEmptyList)(v)(Control_Category.identity(Control_Category.categoryFn));
};

var catMaybes = lift(Data_List.catMaybes);

var appendFoldable = function appendFoldable(dictFoldable) {
  return function (v) {
    return function (ys) {
      return new Data_NonEmpty.NonEmpty(v.value0, Data_Semigroup.append(Data_List_Types.semigroupList)(v.value1)(Data_List.fromFoldable(dictFoldable)(ys)));
    };
  };
};

module.exports = {
  toUnfoldable: toUnfoldable,
  fromFoldable: fromFoldable,
  fromList: fromList,
  toList: toList,
  singleton: singleton,
  length: length,
  cons: cons,
  "cons'": cons$prime,
  snoc: snoc,
  "snoc'": snoc$prime,
  head: head,
  last: last,
  tail: tail,
  init: init,
  uncons: uncons,
  unsnoc: unsnoc,
  index: index,
  elemIndex: elemIndex,
  elemLastIndex: elemLastIndex,
  findIndex: findIndex,
  findLastIndex: findLastIndex,
  insertAt: insertAt,
  updateAt: updateAt,
  modifyAt: modifyAt,
  reverse: reverse,
  concat: concat,
  concatMap: concatMap,
  filter: filter,
  filterM: filterM,
  mapMaybe: mapMaybe,
  catMaybes: catMaybes,
  appendFoldable: appendFoldable,
  mapWithIndex: mapWithIndex,
  sort: sort,
  sortBy: sortBy,
  take: take,
  takeWhile: takeWhile,
  drop: drop,
  dropWhile: dropWhile,
  span: span,
  group: group,
  groupAll: groupAll,
  "group'": group$prime,
  groupBy: groupBy,
  groupAllBy: groupAllBy,
  partition: partition,
  nub: nub,
  nubBy: nubBy,
  nubEq: nubEq,
  nubByEq: nubByEq,
  union: union,
  unionBy: unionBy,
  intersect: intersect,
  intersectBy: intersectBy,
  zipWith: zipWith,
  zipWithA: zipWithA,
  zip: zip,
  unzip: unzip,
  foldM: foldM,
  all: Data_Foldable.all,
  any: Data_Foldable.any,
  elem: Data_Foldable.elem,
  find: Data_Foldable.find,
  findMap: Data_Foldable.findMap,
  fold: Data_Foldable.fold,
  foldMap: Data_Foldable.foldMap,
  foldl: Data_Foldable.foldl,
  foldr: Data_Foldable.foldr,
  intercalate: Data_Foldable.intercalate,
  notElem: Data_Foldable.notElem,
  NonEmptyList: Data_List_Types.NonEmptyList,
  fold1: Data_Semigroup_Foldable.fold1,
  foldMap1: Data_Semigroup_Foldable.foldMap1,
  for1_: Data_Semigroup_Foldable.for1_,
  sequence1_: Data_Semigroup_Foldable.sequence1_,
  traverse1_: Data_Semigroup_Foldable.traverse1_,
  sequence1: Data_Semigroup_Traversable.sequence1,
  traverse1: Data_Semigroup_Traversable.traverse1,
  traverse1Default: Data_Semigroup_Traversable.traverse1Default,
  scanl: Data_Traversable.scanl,
  scanr: Data_Traversable.scanr
};
},{"../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Category/index.js":"output/Control.Category/index.js","../Data.Boolean/index.js":"output/Data.Boolean/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Foldable/index.js":"output/Data.Foldable/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.FunctorWithIndex/index.js":"output/Data.FunctorWithIndex/index.js","../Data.List/index.js":"output/Data.List/index.js","../Data.List.Types/index.js":"output/Data.List.Types/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.NonEmpty/index.js":"output/Data.NonEmpty/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Semigroup.Foldable/index.js":"output/Data.Semigroup.Foldable/index.js","../Data.Semigroup.Traversable/index.js":"output/Data.Semigroup.Traversable/index.js","../Data.Traversable/index.js":"output/Data.Traversable/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Data.Unfoldable/index.js":"output/Data.Unfoldable/index.js","../Partial.Unsafe/index.js":"output/Partial.Unsafe/index.js"}],"output/Data.Nullable/foreign.js":[function(require,module,exports) {
/* eslint-disable no-eq-null, eqeqeq */
"use strict";

exports["null"] = null;

exports.nullable = function (a, r, f) {
  return a == null ? r : f(a);
};

exports.notNull = function (x) {
  return x;
};
},{}],"output/Data.Nullable/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Show = require("../Data.Show/index.js");

var toNullable = Data_Maybe.maybe($foreign["null"])($foreign.notNull);

var toMaybe = function toMaybe(n) {
  return $foreign.nullable(n, Data_Maybe.Nothing.value, Data_Maybe.Just.create);
};

var showNullable = function showNullable(dictShow) {
  return {
    show: function () {
      var $5 = Data_Maybe.maybe("null")(Data_Show.show(dictShow));
      return function ($6) {
        return $5(toMaybe($6));
      };
    }()
  };
};

var eqNullable = function eqNullable(dictEq) {
  return {
    eq: Data_Function.on(Data_Eq.eq(Data_Maybe.eqMaybe(dictEq)))(toMaybe)
  };
};

var ordNullable = function ordNullable(dictOrd) {
  return {
    compare: Data_Function.on(Data_Ord.compare(Data_Maybe.ordMaybe(dictOrd)))(toMaybe),
    Eq0: function Eq0() {
      return eqNullable(dictOrd.Eq0());
    }
  };
};

var eq1Nullable = {
  eq1: function eq1(dictEq) {
    return Data_Eq.eq(eqNullable(dictEq));
  }
};
var ord1Nullable = {
  compare1: function compare1(dictOrd) {
    return Data_Ord.compare(ordNullable(dictOrd));
  },
  Eq10: function Eq10() {
    return eq1Nullable;
  }
};
module.exports = {
  toMaybe: toMaybe,
  toNullable: toNullable,
  showNullable: showNullable,
  eqNullable: eqNullable,
  eq1Nullable: eq1Nullable,
  ordNullable: ordNullable,
  ord1Nullable: ord1Nullable,
  "null": $foreign["null"],
  notNull: $foreign.notNull
};
},{"./foreign.js":"output/Data.Nullable/foreign.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Show/index.js":"output/Data.Show/index.js"}],"output/Effect.Aff/foreign.js":[function(require,module,exports) {
/* globals setImmediate, clearImmediate, setTimeout, clearTimeout */

/* eslint-disable no-unused-vars, no-prototype-builtins, no-use-before-define, no-unused-labels, no-param-reassign */
"use strict";

var Aff = function () {
  // A unique value for empty.
  var EMPTY = {};
  /*
    An awkward approximation. We elide evidence we would otherwise need in PS for
  efficiency sake.
    data Aff eff a
    = Pure a
    | Throw Error
    | Catch (Aff eff a) (Error -> Aff eff a)
    | Sync (Eff eff a)
    | Async ((Either Error a -> Eff eff Unit) -> Eff eff (Canceler eff))
    | forall b. Bind (Aff eff b) (b -> Aff eff a)
    | forall b. Bracket (Aff eff b) (BracketConditions eff b) (b -> Aff eff a)
    | forall b. Fork Boolean (Aff eff b) ?(Fiber eff b -> a)
    | Sequential (ParAff aff a)
    */

  var PURE = "Pure";
  var THROW = "Throw";
  var CATCH = "Catch";
  var SYNC = "Sync";
  var ASYNC = "Async";
  var BIND = "Bind";
  var BRACKET = "Bracket";
  var FORK = "Fork";
  var SEQ = "Sequential";
  /*
    data ParAff eff a
    = forall b. Map (b -> a) (ParAff eff b)
    | forall b. Apply (ParAff eff (b -> a)) (ParAff eff b)
    | Alt (ParAff eff a) (ParAff eff a)
    | ?Par (Aff eff a)
    */

  var MAP = "Map";
  var APPLY = "Apply";
  var ALT = "Alt"; // Various constructors used in interpretation

  var CONS = "Cons"; // Cons-list, for stacks

  var RESUME = "Resume"; // Continue indiscriminately

  var RELEASE = "Release"; // Continue with bracket finalizers

  var FINALIZER = "Finalizer"; // A non-interruptible effect

  var FINALIZED = "Finalized"; // Marker for finalization

  var FORKED = "Forked"; // Reference to a forked fiber, with resumption stack

  var FIBER = "Fiber"; // Actual fiber reference

  var THUNK = "Thunk"; // Primed effect, ready to invoke

  function Aff(tag, _1, _2, _3) {
    this.tag = tag;
    this._1 = _1;
    this._2 = _2;
    this._3 = _3;
  }

  function AffCtr(tag) {
    var fn = function fn(_1, _2, _3) {
      return new Aff(tag, _1, _2, _3);
    };

    fn.tag = tag;
    return fn;
  }

  function nonCanceler(error) {
    return new Aff(PURE, void 0);
  }

  function runEff(eff) {
    try {
      eff();
    } catch (error) {
      setTimeout(function () {
        throw error;
      }, 0);
    }
  }

  function runSync(left, right, eff) {
    try {
      return right(eff());
    } catch (error) {
      return left(error);
    }
  }

  function runAsync(left, eff, k) {
    try {
      return eff(k)();
    } catch (error) {
      k(left(error))();
      return nonCanceler;
    }
  }

  var Scheduler = function () {
    var limit = 1024;
    var size = 0;
    var ix = 0;
    var queue = new Array(limit);
    var draining = false;

    function drain() {
      var thunk;
      draining = true;

      while (size !== 0) {
        size--;
        thunk = queue[ix];
        queue[ix] = void 0;
        ix = (ix + 1) % limit;
        thunk();
      }

      draining = false;
    }

    return {
      isDraining: function isDraining() {
        return draining;
      },
      enqueue: function enqueue(cb) {
        var i, tmp;

        if (size === limit) {
          tmp = draining;
          drain();
          draining = tmp;
        }

        queue[(ix + size) % limit] = cb;
        size++;

        if (!draining) {
          drain();
        }
      }
    };
  }();

  function Supervisor(util) {
    var fibers = {};
    var fiberId = 0;
    var count = 0;
    return {
      register: function register(fiber) {
        var fid = fiberId++;
        fiber.onComplete({
          rethrow: true,
          handler: function handler(result) {
            return function () {
              count--;
              delete fibers[fid];
            };
          }
        })();
        fibers[fid] = fiber;
        count++;
      },
      isEmpty: function isEmpty() {
        return count === 0;
      },
      killAll: function killAll(killError, cb) {
        return function () {
          if (count === 0) {
            return cb();
          }

          var killCount = 0;
          var kills = {};

          function kill(fid) {
            kills[fid] = fibers[fid].kill(killError, function (result) {
              return function () {
                delete kills[fid];
                killCount--;

                if (util.isLeft(result) && util.fromLeft(result)) {
                  setTimeout(function () {
                    throw util.fromLeft(result);
                  }, 0);
                }

                if (killCount === 0) {
                  cb();
                }
              };
            })();
          }

          for (var k in fibers) {
            if (fibers.hasOwnProperty(k)) {
              killCount++;
              kill(k);
            }
          }

          fibers = {};
          fiberId = 0;
          count = 0;
          return function (error) {
            return new Aff(SYNC, function () {
              for (var k in kills) {
                if (kills.hasOwnProperty(k)) {
                  kills[k]();
                }
              }
            });
          };
        };
      }
    };
  } // Fiber state machine


  var SUSPENDED = 0; // Suspended, pending a join.

  var CONTINUE = 1; // Interpret the next instruction.

  var STEP_BIND = 2; // Apply the next bind.

  var STEP_RESULT = 3; // Handle potential failure from a result.

  var PENDING = 4; // An async effect is running.

  var RETURN = 5; // The current stack has returned.

  var COMPLETED = 6; // The entire fiber has completed.

  function Fiber(util, supervisor, aff) {
    // Monotonically increasing tick, increased on each asynchronous turn.
    var runTick = 0; // The current branch of the state machine.

    var status = SUSPENDED; // The current point of interest for the state machine branch.

    var step = aff; // Successful step

    var fail = null; // Failure step

    var interrupt = null; // Asynchronous interrupt
    // Stack of continuations for the current fiber.

    var bhead = null;
    var btail = null; // Stack of attempts and finalizers for error recovery. Every `Cons` is also
    // tagged with current `interrupt` state. We use this to track which items
    // should be ignored or evaluated as a result of a kill.

    var attempts = null; // A special state is needed for Bracket, because it cannot be killed. When
    // we enter a bracket acquisition or finalizer, we increment the counter,
    // and then decrement once complete.

    var bracketCount = 0; // Each join gets a new id so they can be revoked.

    var joinId = 0;
    var joins = null;
    var rethrow = true; // Each invocation of `run` requires a tick. When an asynchronous effect is
    // resolved, we must check that the local tick coincides with the fiber
    // tick before resuming. This prevents multiple async continuations from
    // accidentally resuming the same fiber. A common example may be invoking
    // the provided callback in `makeAff` more than once, but it may also be an
    // async effect resuming after the fiber was already cancelled.

    function _run(localRunTick) {
      var tmp, result, attempt;

      while (true) {
        tmp = null;
        result = null;
        attempt = null;

        switch (status) {
          case STEP_BIND:
            status = CONTINUE;

            try {
              step = bhead(step);

              if (btail === null) {
                bhead = null;
              } else {
                bhead = btail._1;
                btail = btail._2;
              }
            } catch (e) {
              status = RETURN;
              fail = util.left(e);
              step = null;
            }

            break;

          case STEP_RESULT:
            if (util.isLeft(step)) {
              status = RETURN;
              fail = step;
              step = null;
            } else if (bhead === null) {
              status = RETURN;
            } else {
              status = STEP_BIND;
              step = util.fromRight(step);
            }

            break;

          case CONTINUE:
            switch (step.tag) {
              case BIND:
                if (bhead) {
                  btail = new Aff(CONS, bhead, btail);
                }

                bhead = step._2;
                status = CONTINUE;
                step = step._1;
                break;

              case PURE:
                if (bhead === null) {
                  status = RETURN;
                  step = util.right(step._1);
                } else {
                  status = STEP_BIND;
                  step = step._1;
                }

                break;

              case SYNC:
                status = STEP_RESULT;
                step = runSync(util.left, util.right, step._1);
                break;

              case ASYNC:
                status = PENDING;
                step = runAsync(util.left, step._1, function (result) {
                  return function () {
                    if (runTick !== localRunTick) {
                      return;
                    }

                    runTick++;
                    Scheduler.enqueue(function () {
                      // It's possible to interrupt the fiber between enqueuing and
                      // resuming, so we need to check that the runTick is still
                      // valid.
                      if (runTick !== localRunTick + 1) {
                        return;
                      }

                      status = STEP_RESULT;
                      step = result;

                      _run(runTick);
                    });
                  };
                });
                return;

              case THROW:
                status = RETURN;
                fail = util.left(step._1);
                step = null;
                break;
              // Enqueue the Catch so that we can call the error handler later on
              // in case of an exception.

              case CATCH:
                if (bhead === null) {
                  attempts = new Aff(CONS, step, attempts, interrupt);
                } else {
                  attempts = new Aff(CONS, step, new Aff(CONS, new Aff(RESUME, bhead, btail), attempts, interrupt), interrupt);
                }

                bhead = null;
                btail = null;
                status = CONTINUE;
                step = step._1;
                break;
              // Enqueue the Bracket so that we can call the appropriate handlers
              // after resource acquisition.

              case BRACKET:
                bracketCount++;

                if (bhead === null) {
                  attempts = new Aff(CONS, step, attempts, interrupt);
                } else {
                  attempts = new Aff(CONS, step, new Aff(CONS, new Aff(RESUME, bhead, btail), attempts, interrupt), interrupt);
                }

                bhead = null;
                btail = null;
                status = CONTINUE;
                step = step._1;
                break;

              case FORK:
                status = STEP_RESULT;
                tmp = Fiber(util, supervisor, step._2);

                if (supervisor) {
                  supervisor.register(tmp);
                }

                if (step._1) {
                  tmp.run();
                }

                step = util.right(tmp);
                break;

              case SEQ:
                status = CONTINUE;
                step = sequential(util, supervisor, step._1);
                break;
            }

            break;

          case RETURN:
            bhead = null;
            btail = null; // If the current stack has returned, and we have no other stacks to
            // resume or finalizers to run, the fiber has halted and we can
            // invoke all join callbacks. Otherwise we need to resume.

            if (attempts === null) {
              status = COMPLETED;
              step = interrupt || fail || step;
            } else {
              // The interrupt status for the enqueued item.
              tmp = attempts._3;
              attempt = attempts._1;
              attempts = attempts._2;

              switch (attempt.tag) {
                // We cannot recover from an unmasked interrupt. Otherwise we should
                // continue stepping, or run the exception handler if an exception
                // was raised.
                case CATCH:
                  // We should compare the interrupt status as well because we
                  // only want it to apply if there has been an interrupt since
                  // enqueuing the catch.
                  if (interrupt && interrupt !== tmp && bracketCount === 0) {
                    status = RETURN;
                  } else if (fail) {
                    status = CONTINUE;
                    step = attempt._2(util.fromLeft(fail));
                    fail = null;
                  }

                  break;
                // We cannot resume from an unmasked interrupt or exception.

                case RESUME:
                  // As with Catch, we only want to ignore in the case of an
                  // interrupt since enqueing the item.
                  if (interrupt && interrupt !== tmp && bracketCount === 0 || fail) {
                    status = RETURN;
                  } else {
                    bhead = attempt._1;
                    btail = attempt._2;
                    status = STEP_BIND;
                    step = util.fromRight(step);
                  }

                  break;
                // If we have a bracket, we should enqueue the handlers,
                // and continue with the success branch only if the fiber has
                // not been interrupted. If the bracket acquisition failed, we
                // should not run either.

                case BRACKET:
                  bracketCount--;

                  if (fail === null) {
                    result = util.fromRight(step); // We need to enqueue the Release with the same interrupt
                    // status as the Bracket that is initiating it.

                    attempts = new Aff(CONS, new Aff(RELEASE, attempt._2, result), attempts, tmp); // We should only coninue as long as the interrupt status has not changed or
                    // we are currently within a non-interruptable finalizer.

                    if (interrupt === tmp || bracketCount > 0) {
                      status = CONTINUE;
                      step = attempt._3(result);
                    }
                  }

                  break;
                // Enqueue the appropriate handler. We increase the bracket count
                // because it should not be cancelled.

                case RELEASE:
                  attempts = new Aff(CONS, new Aff(FINALIZED, step, fail), attempts, interrupt);
                  status = CONTINUE; // It has only been killed if the interrupt status has changed
                  // since we enqueued the item, and the bracket count is 0. If the
                  // bracket count is non-zero then we are in a masked state so it's
                  // impossible to be killed.

                  if (interrupt && interrupt !== tmp && bracketCount === 0) {
                    step = attempt._1.killed(util.fromLeft(interrupt))(attempt._2);
                  } else if (fail) {
                    step = attempt._1.failed(util.fromLeft(fail))(attempt._2);
                  } else {
                    step = attempt._1.completed(util.fromRight(step))(attempt._2);
                  }

                  fail = null;
                  bracketCount++;
                  break;

                case FINALIZER:
                  bracketCount++;
                  attempts = new Aff(CONS, new Aff(FINALIZED, step, fail), attempts, interrupt);
                  status = CONTINUE;
                  step = attempt._1;
                  break;

                case FINALIZED:
                  bracketCount--;
                  status = RETURN;
                  step = attempt._1;
                  fail = attempt._2;
                  break;
              }
            }

            break;

          case COMPLETED:
            for (var k in joins) {
              if (joins.hasOwnProperty(k)) {
                rethrow = rethrow && joins[k].rethrow;
                runEff(joins[k].handler(step));
              }
            }

            joins = null; // If we have an interrupt and a fail, then the thread threw while
            // running finalizers. This should always rethrow in a fresh stack.

            if (interrupt && fail) {
              setTimeout(function () {
                throw util.fromLeft(fail);
              }, 0); // If we have an unhandled exception, and no other fiber has joined
              // then we need to throw the exception in a fresh stack.
            } else if (util.isLeft(step) && rethrow) {
              setTimeout(function () {
                // Guard on reathrow because a completely synchronous fiber can
                // still have an observer which was added after-the-fact.
                if (rethrow) {
                  throw util.fromLeft(step);
                }
              }, 0);
            }

            return;

          case SUSPENDED:
            status = CONTINUE;
            break;

          case PENDING:
            return;
        }
      }
    }

    function onComplete(join) {
      return function () {
        if (status === COMPLETED) {
          rethrow = rethrow && join.rethrow;
          join.handler(step)();
          return function () {};
        }

        var jid = joinId++;
        joins = joins || {};
        joins[jid] = join;
        return function () {
          if (joins !== null) {
            delete joins[jid];
          }
        };
      };
    }

    function kill(error, cb) {
      return function () {
        if (status === COMPLETED) {
          cb(util.right(void 0))();
          return function () {};
        }

        var canceler = onComplete({
          rethrow: false,
          handler: function
            /* unused */
          handler() {
            return cb(util.right(void 0));
          }
        })();

        switch (status) {
          case SUSPENDED:
            interrupt = util.left(error);
            status = COMPLETED;
            step = interrupt;

            _run(runTick);

            break;

          case PENDING:
            if (interrupt === null) {
              interrupt = util.left(error);
            }

            if (bracketCount === 0) {
              if (status === PENDING) {
                attempts = new Aff(CONS, new Aff(FINALIZER, step(error)), attempts, interrupt);
              }

              status = RETURN;
              step = null;
              fail = null;

              _run(++runTick);
            }

            break;

          default:
            if (interrupt === null) {
              interrupt = util.left(error);
            }

            if (bracketCount === 0) {
              status = RETURN;
              step = null;
              fail = null;
            }

        }

        return canceler;
      };
    }

    function join(cb) {
      return function () {
        var canceler = onComplete({
          rethrow: false,
          handler: cb
        })();

        if (status === SUSPENDED) {
          _run(runTick);
        }

        return canceler;
      };
    }

    return {
      kill: kill,
      join: join,
      onComplete: onComplete,
      isSuspended: function isSuspended() {
        return status === SUSPENDED;
      },
      run: function run() {
        if (status === SUSPENDED) {
          if (!Scheduler.isDraining()) {
            Scheduler.enqueue(function () {
              _run(runTick);
            });
          } else {
            _run(runTick);
          }
        }
      }
    };
  }

  function runPar(util, supervisor, par, cb) {
    // Table of all forked fibers.
    var fiberId = 0;
    var fibers = {}; // Table of currently running cancelers, as a product of `Alt` behavior.

    var killId = 0;
    var kills = {}; // Error used for early cancelation on Alt branches.

    var early = new Error("[ParAff] Early exit"); // Error used to kill the entire tree.

    var interrupt = null; // The root pointer of the tree.

    var root = EMPTY; // Walks a tree, invoking all the cancelers. Returns the table of pending
    // cancellation fibers.

    function kill(error, par, cb) {
      var step = par;
      var head = null;
      var tail = null;
      var count = 0;
      var kills = {};
      var tmp, kid;

      loop: while (true) {
        tmp = null;

        switch (step.tag) {
          case FORKED:
            if (step._3 === EMPTY) {
              tmp = fibers[step._1];
              kills[count++] = tmp.kill(error, function (result) {
                return function () {
                  count--;

                  if (count === 0) {
                    cb(result)();
                  }
                };
              });
            } // Terminal case.


            if (head === null) {
              break loop;
            } // Go down the right side of the tree.


            step = head._2;

            if (tail === null) {
              head = null;
            } else {
              head = tail._1;
              tail = tail._2;
            }

            break;

          case MAP:
            step = step._2;
            break;

          case APPLY:
          case ALT:
            if (head) {
              tail = new Aff(CONS, head, tail);
            }

            head = step;
            step = step._1;
            break;
        }
      }

      if (count === 0) {
        cb(util.right(void 0))();
      } else {
        // Run the cancelation effects. We alias `count` because it's mutable.
        kid = 0;
        tmp = count;

        for (; kid < tmp; kid++) {
          kills[kid] = kills[kid]();
        }
      }

      return kills;
    } // When a fiber resolves, we need to bubble back up the tree with the
    // result, computing the applicative nodes.


    function join(result, head, tail) {
      var fail, step, lhs, rhs, tmp, kid;

      if (util.isLeft(result)) {
        fail = result;
        step = null;
      } else {
        step = result;
        fail = null;
      }

      loop: while (true) {
        lhs = null;
        rhs = null;
        tmp = null;
        kid = null; // We should never continue if the entire tree has been interrupted.

        if (interrupt !== null) {
          return;
        } // We've made it all the way to the root of the tree, which means
        // the tree has fully evaluated.


        if (head === null) {
          cb(fail || step)();
          return;
        } // The tree has already been computed, so we shouldn't try to do it
        // again. This should never happen.
        // TODO: Remove this?


        if (head._3 !== EMPTY) {
          return;
        }

        switch (head.tag) {
          case MAP:
            if (fail === null) {
              head._3 = util.right(head._1(util.fromRight(step)));
              step = head._3;
            } else {
              head._3 = fail;
            }

            break;

          case APPLY:
            lhs = head._1._3;
            rhs = head._2._3; // If we have a failure we should kill the other side because we
            // can't possible yield a result anymore.

            if (fail) {
              head._3 = fail;
              tmp = true;
              kid = killId++;
              kills[kid] = kill(early, fail === lhs ? head._2 : head._1, function
                /* unused */
              () {
                return function () {
                  delete kills[kid];

                  if (tmp) {
                    tmp = false;
                  } else if (tail === null) {
                    join(fail, null, null);
                  } else {
                    join(fail, tail._1, tail._2);
                  }
                };
              });

              if (tmp) {
                tmp = false;
                return;
              }
            } else if (lhs === EMPTY || rhs === EMPTY) {
              // We can only proceed if both sides have resolved.
              return;
            } else {
              step = util.right(util.fromRight(lhs)(util.fromRight(rhs)));
              head._3 = step;
            }

            break;

          case ALT:
            lhs = head._1._3;
            rhs = head._2._3; // We can only proceed if both have resolved or we have a success

            if (lhs === EMPTY && util.isLeft(rhs) || rhs === EMPTY && util.isLeft(lhs)) {
              return;
            } // If both sides resolve with an error, we should continue with the
            // first error


            if (lhs !== EMPTY && util.isLeft(lhs) && rhs !== EMPTY && util.isLeft(rhs)) {
              fail = step === lhs ? rhs : lhs;
              step = null;
              head._3 = fail;
            } else {
              head._3 = step;
              tmp = true;
              kid = killId++; // Once a side has resolved, we need to cancel the side that is still
              // pending before we can continue.

              kills[kid] = kill(early, step === lhs ? head._2 : head._1, function
                /* unused */
              () {
                return function () {
                  delete kills[kid];

                  if (tmp) {
                    tmp = false;
                  } else if (tail === null) {
                    join(step, null, null);
                  } else {
                    join(step, tail._1, tail._2);
                  }
                };
              });

              if (tmp) {
                tmp = false;
                return;
              }
            }

            break;
        }

        if (tail === null) {
          head = null;
        } else {
          head = tail._1;
          tail = tail._2;
        }
      }
    }

    function resolve(fiber) {
      return function (result) {
        return function () {
          delete fibers[fiber._1];
          fiber._3 = result;
          join(result, fiber._2._1, fiber._2._2);
        };
      };
    } // Walks the applicative tree, substituting non-applicative nodes with
    // `FORKED` nodes. In this tree, all applicative nodes use the `_3` slot
    // as a mutable slot for memoization. In an unresolved state, the `_3`
    // slot is `EMPTY`. In the cases of `ALT` and `APPLY`, we always walk
    // the left side first, because both operations are left-associative. As
    // we `RETURN` from those branches, we then walk the right side.


    function run() {
      var status = CONTINUE;
      var step = par;
      var head = null;
      var tail = null;
      var tmp, fid;

      loop: while (true) {
        tmp = null;
        fid = null;

        switch (status) {
          case CONTINUE:
            switch (step.tag) {
              case MAP:
                if (head) {
                  tail = new Aff(CONS, head, tail);
                }

                head = new Aff(MAP, step._1, EMPTY, EMPTY);
                step = step._2;
                break;

              case APPLY:
                if (head) {
                  tail = new Aff(CONS, head, tail);
                }

                head = new Aff(APPLY, EMPTY, step._2, EMPTY);
                step = step._1;
                break;

              case ALT:
                if (head) {
                  tail = new Aff(CONS, head, tail);
                }

                head = new Aff(ALT, EMPTY, step._2, EMPTY);
                step = step._1;
                break;

              default:
                // When we hit a leaf value, we suspend the stack in the `FORKED`.
                // When the fiber resolves, it can bubble back up the tree.
                fid = fiberId++;
                status = RETURN;
                tmp = step;
                step = new Aff(FORKED, fid, new Aff(CONS, head, tail), EMPTY);
                tmp = Fiber(util, supervisor, tmp);
                tmp.onComplete({
                  rethrow: false,
                  handler: resolve(step)
                })();
                fibers[fid] = tmp;

                if (supervisor) {
                  supervisor.register(tmp);
                }

            }

            break;

          case RETURN:
            // Terminal case, we are back at the root.
            if (head === null) {
              break loop;
            } // If we are done with the right side, we need to continue down the
            // left. Otherwise we should continue up the stack.


            if (head._1 === EMPTY) {
              head._1 = step;
              status = CONTINUE;
              step = head._2;
              head._2 = EMPTY;
            } else {
              head._2 = step;
              step = head;

              if (tail === null) {
                head = null;
              } else {
                head = tail._1;
                tail = tail._2;
              }
            }

        }
      } // Keep a reference to the tree root so it can be cancelled.


      root = step;

      for (fid = 0; fid < fiberId; fid++) {
        fibers[fid].run();
      }
    } // Cancels the entire tree. If there are already subtrees being canceled,
    // we need to first cancel those joins. We will then add fresh joins for
    // all pending branches including those that were in the process of being
    // canceled.


    function cancel(error, cb) {
      interrupt = util.left(error);
      var innerKills;

      for (var kid in kills) {
        if (kills.hasOwnProperty(kid)) {
          innerKills = kills[kid];

          for (kid in innerKills) {
            if (innerKills.hasOwnProperty(kid)) {
              innerKills[kid]();
            }
          }
        }
      }

      kills = null;
      var newKills = kill(error, root, cb);
      return function (killError) {
        return new Aff(ASYNC, function (killCb) {
          return function () {
            for (var kid in newKills) {
              if (newKills.hasOwnProperty(kid)) {
                newKills[kid]();
              }
            }

            return nonCanceler;
          };
        });
      };
    }

    run();
    return function (killError) {
      return new Aff(ASYNC, function (killCb) {
        return function () {
          return cancel(killError, killCb);
        };
      });
    };
  }

  function sequential(util, supervisor, par) {
    return new Aff(ASYNC, function (cb) {
      return function () {
        return runPar(util, supervisor, par, cb);
      };
    });
  }

  Aff.EMPTY = EMPTY;
  Aff.Pure = AffCtr(PURE);
  Aff.Throw = AffCtr(THROW);
  Aff.Catch = AffCtr(CATCH);
  Aff.Sync = AffCtr(SYNC);
  Aff.Async = AffCtr(ASYNC);
  Aff.Bind = AffCtr(BIND);
  Aff.Bracket = AffCtr(BRACKET);
  Aff.Fork = AffCtr(FORK);
  Aff.Seq = AffCtr(SEQ);
  Aff.ParMap = AffCtr(MAP);
  Aff.ParApply = AffCtr(APPLY);
  Aff.ParAlt = AffCtr(ALT);
  Aff.Fiber = Fiber;
  Aff.Supervisor = Supervisor;
  Aff.Scheduler = Scheduler;
  Aff.nonCanceler = nonCanceler;
  return Aff;
}();

exports._pure = Aff.Pure;
exports._throwError = Aff.Throw;

exports._catchError = function (aff) {
  return function (k) {
    return Aff.Catch(aff, k);
  };
};

exports._map = function (f) {
  return function (aff) {
    if (aff.tag === Aff.Pure.tag) {
      return Aff.Pure(f(aff._1));
    } else {
      return Aff.Bind(aff, function (value) {
        return Aff.Pure(f(value));
      });
    }
  };
};

exports._bind = function (aff) {
  return function (k) {
    return Aff.Bind(aff, k);
  };
};

exports._fork = function (immediate) {
  return function (aff) {
    return Aff.Fork(immediate, aff);
  };
};

exports._liftEffect = Aff.Sync;

exports._parAffMap = function (f) {
  return function (aff) {
    return Aff.ParMap(f, aff);
  };
};

exports._parAffApply = function (aff1) {
  return function (aff2) {
    return Aff.ParApply(aff1, aff2);
  };
};

exports._parAffAlt = function (aff1) {
  return function (aff2) {
    return Aff.ParAlt(aff1, aff2);
  };
};

exports.makeAff = Aff.Async;

exports.generalBracket = function (acquire) {
  return function (options) {
    return function (k) {
      return Aff.Bracket(acquire, options, k);
    };
  };
};

exports._makeFiber = function (util, aff) {
  return function () {
    return Aff.Fiber(util, null, aff);
  };
};

exports._makeSupervisedFiber = function (util, aff) {
  return function () {
    var supervisor = Aff.Supervisor(util);
    return {
      fiber: Aff.Fiber(util, supervisor, aff),
      supervisor: supervisor
    };
  };
};

exports._killAll = function (error, supervisor, cb) {
  return supervisor.killAll(error, cb);
};

exports._delay = function () {
  function setDelay(n, k) {
    if (n === 0 && typeof setImmediate !== "undefined") {
      return setImmediate(k);
    } else {
      return setTimeout(k, n);
    }
  }

  function clearDelay(n, t) {
    if (n === 0 && typeof clearImmediate !== "undefined") {
      return clearImmediate(t);
    } else {
      return clearTimeout(t);
    }
  }

  return function (right, ms) {
    return Aff.Async(function (cb) {
      return function () {
        var timer = setDelay(ms, cb(right()));
        return function () {
          return Aff.Sync(function () {
            return right(clearDelay(ms, timer));
          });
        };
      };
    });
  };
}();

exports._sequential = Aff.Seq;
},{}],"output/Control.Monad.Cont.Trans/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad_Cont_Class = require("../Control.Monad.Cont.Class/index.js");

var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class/index.js");

var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");

var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Effect_Class = require("../Effect.Class/index.js");

var ContT = function ContT(x) {
  return x;
};

var withContT = function withContT(f) {
  return function (v) {
    return function (k) {
      return v(f(k));
    };
  };
};

var runContT = function runContT(v) {
  return function (k) {
    return v(k);
  };
};

var newtypeContT = {
  Coercible0: function Coercible0() {
    return undefined;
  }
};
var monadTransContT = {
  lift: function lift(dictMonad) {
    return function (m) {
      return function (k) {
        return Control_Bind.bind(dictMonad.Bind1())(m)(k);
      };
    };
  }
};

var mapContT = function mapContT(f) {
  return function (v) {
    return function (k) {
      return f(v(k));
    };
  };
};

var functorContT = function functorContT(dictFunctor) {
  return {
    map: function map(f) {
      return function (v) {
        return function (k) {
          return v(function (a) {
            return k(f(a));
          });
        };
      };
    }
  };
};

var applyContT = function applyContT(dictApply) {
  return {
    apply: function apply(v) {
      return function (v1) {
        return function (k) {
          return v(function (g) {
            return v1(function (a) {
              return k(g(a));
            });
          });
        };
      };
    },
    Functor0: function Functor0() {
      return functorContT(dictApply.Functor0());
    }
  };
};

var bindContT = function bindContT(dictBind) {
  return {
    bind: function bind(v) {
      return function (k) {
        return function (k$prime) {
          return v(function (a) {
            var v1 = k(a);
            return v1(k$prime);
          });
        };
      };
    },
    Apply0: function Apply0() {
      return applyContT(dictBind.Apply0());
    }
  };
};

var semigroupContT = function semigroupContT(dictApply) {
  return function (dictSemigroup) {
    return {
      append: Control_Apply.lift2(applyContT(dictApply))(Data_Semigroup.append(dictSemigroup))
    };
  };
};

var applicativeContT = function applicativeContT(dictApplicative) {
  return {
    pure: function pure(a) {
      return function (k) {
        return k(a);
      };
    },
    Apply0: function Apply0() {
      return applyContT(dictApplicative.Apply0());
    }
  };
};

var monadContT = function monadContT(dictMonad) {
  return {
    Applicative0: function Applicative0() {
      return applicativeContT(dictMonad.Applicative0());
    },
    Bind1: function Bind1() {
      return bindContT(dictMonad.Bind1());
    }
  };
};

var monadAskContT = function monadAskContT(dictMonadAsk) {
  return {
    ask: Control_Monad_Trans_Class.lift(monadTransContT)(dictMonadAsk.Monad0())(Control_Monad_Reader_Class.ask(dictMonadAsk)),
    Monad0: function Monad0() {
      return monadContT(dictMonadAsk.Monad0());
    }
  };
};

var monadReaderContT = function monadReaderContT(dictMonadReader) {
  return {
    local: function local(f) {
      return function (v) {
        return function (k) {
          return Control_Bind.bind(dictMonadReader.MonadAsk0().Monad0().Bind1())(Control_Monad_Reader_Class.ask(dictMonadReader.MonadAsk0()))(function (r) {
            return Control_Monad_Reader_Class.local(dictMonadReader)(f)(v(function () {
              var $44 = Control_Monad_Reader_Class.local(dictMonadReader)(Data_Function["const"](r));
              return function ($45) {
                return $44(k($45));
              };
            }()));
          });
        };
      };
    },
    MonadAsk0: function MonadAsk0() {
      return monadAskContT(dictMonadReader.MonadAsk0());
    }
  };
};

var monadContContT = function monadContContT(dictMonad) {
  return {
    callCC: function callCC(f) {
      return function (k) {
        var v = f(function (a) {
          return function (v1) {
            return k(a);
          };
        });
        return v(k);
      };
    },
    Monad0: function Monad0() {
      return monadContT(dictMonad);
    }
  };
};

var monadEffectContT = function monadEffectContT(dictMonadEffect) {
  return {
    liftEffect: function () {
      var $46 = Control_Monad_Trans_Class.lift(monadTransContT)(dictMonadEffect.Monad0());
      var $47 = Effect_Class.liftEffect(dictMonadEffect);
      return function ($48) {
        return $46($47($48));
      };
    }(),
    Monad0: function Monad0() {
      return monadContT(dictMonadEffect.Monad0());
    }
  };
};

var monadStateContT = function monadStateContT(dictMonadState) {
  return {
    state: function () {
      var $49 = Control_Monad_Trans_Class.lift(monadTransContT)(dictMonadState.Monad0());
      var $50 = Control_Monad_State_Class.state(dictMonadState);
      return function ($51) {
        return $49($50($51));
      };
    }(),
    Monad0: function Monad0() {
      return monadContT(dictMonadState.Monad0());
    }
  };
};

var monoidContT = function monoidContT(dictApplicative) {
  return function (dictMonoid) {
    return {
      mempty: Control_Applicative.pure(applicativeContT(dictApplicative))(Data_Monoid.mempty(dictMonoid)),
      Semigroup0: function Semigroup0() {
        return semigroupContT(dictApplicative.Apply0())(dictMonoid.Semigroup0());
      }
    };
  };
};

module.exports = {
  ContT: ContT,
  runContT: runContT,
  mapContT: mapContT,
  withContT: withContT,
  newtypeContT: newtypeContT,
  monadContContT: monadContContT,
  functorContT: functorContT,
  applyContT: applyContT,
  applicativeContT: applicativeContT,
  bindContT: bindContT,
  monadContT: monadContT,
  monadTransContT: monadTransContT,
  monadEffectContT: monadEffectContT,
  monadAskContT: monadAskContT,
  monadReaderContT: monadReaderContT,
  monadStateContT: monadStateContT,
  semigroupContT: semigroupContT,
  monoidContT: monoidContT,
  callCC: Control_Monad_Cont_Class.callCC,
  lift: Control_Monad_Trans_Class.lift
};
},{"../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Monad.Cont.Class/index.js":"output/Control.Monad.Cont.Class/index.js","../Control.Monad.Reader.Class/index.js":"output/Control.Monad.Reader.Class/index.js","../Control.Monad.State.Class/index.js":"output/Control.Monad.State.Class/index.js","../Control.Monad.Trans.Class/index.js":"output/Control.Monad.Trans.Class/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Monoid/index.js":"output/Data.Monoid/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Effect.Class/index.js":"output/Effect.Class/index.js"}],"output/Control.Monad.Maybe.Trans/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_Monad_Cont_Class = require("../Control.Monad.Cont.Class/index.js");

var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");

var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class/index.js");

var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");

var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");

var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");

var Control_Monad_Writer_Class = require("../Control.Monad.Writer.Class/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Effect_Class = require("../Effect.Class/index.js");

var MaybeT = function MaybeT(x) {
  return x;
};

var runMaybeT = function runMaybeT(v) {
  return v;
};

var newtypeMaybeT = {
  Coercible0: function Coercible0() {
    return undefined;
  }
};
var monadTransMaybeT = {
  lift: function lift(dictMonad) {
    var $72 = Control_Monad.liftM1(dictMonad)(Data_Maybe.Just.create);
    return function ($73) {
      return MaybeT($72($73));
    };
  }
};

var mapMaybeT = function mapMaybeT(f) {
  return function (v) {
    return f(v);
  };
};

var functorMaybeT = function functorMaybeT(dictFunctor) {
  return {
    map: function map(f) {
      return function (v) {
        return Data_Functor.map(dictFunctor)(Data_Functor.map(Data_Maybe.functorMaybe)(f))(v);
      };
    }
  };
};

var monadMaybeT = function monadMaybeT(dictMonad) {
  return {
    Applicative0: function Applicative0() {
      return applicativeMaybeT(dictMonad);
    },
    Bind1: function Bind1() {
      return bindMaybeT(dictMonad);
    }
  };
};

var bindMaybeT = function bindMaybeT(dictMonad) {
  return {
    bind: function bind(v) {
      return function (f) {
        return Control_Bind.bind(dictMonad.Bind1())(v)(function (v1) {
          if (v1 instanceof Data_Maybe.Nothing) {
            return Control_Applicative.pure(dictMonad.Applicative0())(Data_Maybe.Nothing.value);
          }

          ;

          if (v1 instanceof Data_Maybe.Just) {
            var v2 = f(v1.value0);
            return v2;
          }

          ;
          throw new Error("Failed pattern match at Control.Monad.Maybe.Trans (line 55, column 11 - line 57, column 42): " + [v1.constructor.name]);
        });
      };
    },
    Apply0: function Apply0() {
      return applyMaybeT(dictMonad);
    }
  };
};

var applyMaybeT = function applyMaybeT(dictMonad) {
  return {
    apply: Control_Monad.ap(monadMaybeT(dictMonad)),
    Functor0: function Functor0() {
      return functorMaybeT(dictMonad.Bind1().Apply0().Functor0());
    }
  };
};

var applicativeMaybeT = function applicativeMaybeT(dictMonad) {
  return {
    pure: function () {
      var $74 = Control_Applicative.pure(dictMonad.Applicative0());
      return function ($75) {
        return MaybeT($74(Data_Maybe.Just.create($75)));
      };
    }(),
    Apply0: function Apply0() {
      return applyMaybeT(dictMonad);
    }
  };
};

var semigroupMaybeT = function semigroupMaybeT(dictMonad) {
  return function (dictSemigroup) {
    return {
      append: Control_Apply.lift2(applyMaybeT(dictMonad))(Data_Semigroup.append(dictSemigroup))
    };
  };
};

var monadAskMaybeT = function monadAskMaybeT(dictMonadAsk) {
  return {
    ask: Control_Monad_Trans_Class.lift(monadTransMaybeT)(dictMonadAsk.Monad0())(Control_Monad_Reader_Class.ask(dictMonadAsk)),
    Monad0: function Monad0() {
      return monadMaybeT(dictMonadAsk.Monad0());
    }
  };
};

var monadReaderMaybeT = function monadReaderMaybeT(dictMonadReader) {
  return {
    local: function local(f) {
      return mapMaybeT(Control_Monad_Reader_Class.local(dictMonadReader)(f));
    },
    MonadAsk0: function MonadAsk0() {
      return monadAskMaybeT(dictMonadReader.MonadAsk0());
    }
  };
};

var monadContMaybeT = function monadContMaybeT(dictMonadCont) {
  return {
    callCC: function callCC(f) {
      return Control_Monad_Cont_Class.callCC(dictMonadCont)(function (c) {
        var v = f(function (a) {
          return c(new Data_Maybe.Just(a));
        });
        return v;
      });
    },
    Monad0: function Monad0() {
      return monadMaybeT(dictMonadCont.Monad0());
    }
  };
};

var monadEffectMaybe = function monadEffectMaybe(dictMonadEffect) {
  return {
    liftEffect: function () {
      var $76 = Control_Monad_Trans_Class.lift(monadTransMaybeT)(dictMonadEffect.Monad0());
      var $77 = Effect_Class.liftEffect(dictMonadEffect);
      return function ($78) {
        return $76($77($78));
      };
    }(),
    Monad0: function Monad0() {
      return monadMaybeT(dictMonadEffect.Monad0());
    }
  };
};

var monadRecMaybeT = function monadRecMaybeT(dictMonadRec) {
  return {
    tailRecM: function tailRecM(f) {
      var $79 = Control_Monad_Rec_Class.tailRecM(dictMonadRec)(function (a) {
        var v = f(a);
        return Control_Bind.bind(dictMonadRec.Monad0().Bind1())(v)(function (m$prime) {
          return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(function () {
            if (m$prime instanceof Data_Maybe.Nothing) {
              return new Control_Monad_Rec_Class.Done(Data_Maybe.Nothing.value);
            }

            ;

            if (m$prime instanceof Data_Maybe.Just && m$prime.value0 instanceof Control_Monad_Rec_Class.Loop) {
              return new Control_Monad_Rec_Class.Loop(m$prime.value0.value0);
            }

            ;

            if (m$prime instanceof Data_Maybe.Just && m$prime.value0 instanceof Control_Monad_Rec_Class.Done) {
              return new Control_Monad_Rec_Class.Done(new Data_Maybe.Just(m$prime.value0.value0));
            }

            ;
            throw new Error("Failed pattern match at Control.Monad.Maybe.Trans (line 85, column 16 - line 88, column 43): " + [m$prime.constructor.name]);
          }());
        });
      });
      return function ($80) {
        return MaybeT($79($80));
      };
    },
    Monad0: function Monad0() {
      return monadMaybeT(dictMonadRec.Monad0());
    }
  };
};

var monadStateMaybeT = function monadStateMaybeT(dictMonadState) {
  return {
    state: function state(f) {
      return Control_Monad_Trans_Class.lift(monadTransMaybeT)(dictMonadState.Monad0())(Control_Monad_State_Class.state(dictMonadState)(f));
    },
    Monad0: function Monad0() {
      return monadMaybeT(dictMonadState.Monad0());
    }
  };
};

var monadTellMaybeT = function monadTellMaybeT(dictMonadTell) {
  return {
    tell: function () {
      var $81 = Control_Monad_Trans_Class.lift(monadTransMaybeT)(dictMonadTell.Monad1());
      var $82 = Control_Monad_Writer_Class.tell(dictMonadTell);
      return function ($83) {
        return $81($82($83));
      };
    }(),
    Semigroup0: dictMonadTell.Semigroup0,
    Monad1: function Monad1() {
      return monadMaybeT(dictMonadTell.Monad1());
    }
  };
};

var monadWriterMaybeT = function monadWriterMaybeT(dictMonadWriter) {
  return {
    listen: mapMaybeT(function (m) {
      return Control_Bind.bind(dictMonadWriter.MonadTell1().Monad1().Bind1())(Control_Monad_Writer_Class.listen(dictMonadWriter)(m))(function (v) {
        return Control_Applicative.pure(dictMonadWriter.MonadTell1().Monad1().Applicative0())(Data_Functor.map(Data_Maybe.functorMaybe)(function (r) {
          return new Data_Tuple.Tuple(r, v.value1);
        })(v.value0));
      });
    }),
    pass: mapMaybeT(function (m) {
      return Control_Monad_Writer_Class.pass(dictMonadWriter)(Control_Bind.bind(dictMonadWriter.MonadTell1().Monad1().Bind1())(m)(function (a) {
        return Control_Applicative.pure(dictMonadWriter.MonadTell1().Monad1().Applicative0())(function () {
          if (a instanceof Data_Maybe.Nothing) {
            return new Data_Tuple.Tuple(Data_Maybe.Nothing.value, Control_Category.identity(Control_Category.categoryFn));
          }

          ;

          if (a instanceof Data_Maybe.Just) {
            return new Data_Tuple.Tuple(new Data_Maybe.Just(a.value0.value0), a.value0.value1);
          }

          ;
          throw new Error("Failed pattern match at Control.Monad.Maybe.Trans (line 122, column 10 - line 124, column 43): " + [a.constructor.name]);
        }());
      }));
    }),
    Monoid0: dictMonadWriter.Monoid0,
    MonadTell1: function MonadTell1() {
      return monadTellMaybeT(dictMonadWriter.MonadTell1());
    }
  };
};

var monadThrowMaybeT = function monadThrowMaybeT(dictMonadThrow) {
  return {
    throwError: function throwError(e) {
      return Control_Monad_Trans_Class.lift(monadTransMaybeT)(dictMonadThrow.Monad0())(Control_Monad_Error_Class.throwError(dictMonadThrow)(e));
    },
    Monad0: function Monad0() {
      return monadMaybeT(dictMonadThrow.Monad0());
    }
  };
};

var monadErrorMaybeT = function monadErrorMaybeT(dictMonadError) {
  return {
    catchError: function catchError(v) {
      return function (h) {
        return Control_Monad_Error_Class.catchError(dictMonadError)(v)(function (a) {
          var v1 = h(a);
          return v1;
        });
      };
    },
    MonadThrow0: function MonadThrow0() {
      return monadThrowMaybeT(dictMonadError.MonadThrow0());
    }
  };
};

var monoidMaybeT = function monoidMaybeT(dictMonad) {
  return function (dictMonoid) {
    return {
      mempty: Control_Applicative.pure(applicativeMaybeT(dictMonad))(Data_Monoid.mempty(dictMonoid)),
      Semigroup0: function Semigroup0() {
        return semigroupMaybeT(dictMonad)(dictMonoid.Semigroup0());
      }
    };
  };
};

var altMaybeT = function altMaybeT(dictMonad) {
  return {
    alt: function alt(v) {
      return function (v1) {
        return Control_Bind.bind(dictMonad.Bind1())(v)(function (m) {
          if (m instanceof Data_Maybe.Nothing) {
            return v1;
          }

          ;
          return Control_Applicative.pure(dictMonad.Applicative0())(m);
        });
      };
    },
    Functor0: function Functor0() {
      return functorMaybeT(dictMonad.Bind1().Apply0().Functor0());
    }
  };
};

var plusMaybeT = function plusMaybeT(dictMonad) {
  return {
    empty: Control_Applicative.pure(dictMonad.Applicative0())(Data_Maybe.Nothing.value),
    Alt0: function Alt0() {
      return altMaybeT(dictMonad);
    }
  };
};

var alternativeMaybeT = function alternativeMaybeT(dictMonad) {
  return {
    Applicative0: function Applicative0() {
      return applicativeMaybeT(dictMonad);
    },
    Plus1: function Plus1() {
      return plusMaybeT(dictMonad);
    }
  };
};

var monadPlusMaybeT = function monadPlusMaybeT(dictMonad) {
  return {
    Monad0: function Monad0() {
      return monadMaybeT(dictMonad);
    },
    Alternative1: function Alternative1() {
      return alternativeMaybeT(dictMonad);
    }
  };
};

var monadZeroMaybeT = function monadZeroMaybeT(dictMonad) {
  return {
    Monad0: function Monad0() {
      return monadMaybeT(dictMonad);
    },
    Alternative1: function Alternative1() {
      return alternativeMaybeT(dictMonad);
    },
    MonadZeroIsDeprecated2: function MonadZeroIsDeprecated2() {
      return undefined;
    }
  };
};

module.exports = {
  MaybeT: MaybeT,
  runMaybeT: runMaybeT,
  mapMaybeT: mapMaybeT,
  newtypeMaybeT: newtypeMaybeT,
  functorMaybeT: functorMaybeT,
  applyMaybeT: applyMaybeT,
  applicativeMaybeT: applicativeMaybeT,
  bindMaybeT: bindMaybeT,
  monadMaybeT: monadMaybeT,
  monadTransMaybeT: monadTransMaybeT,
  altMaybeT: altMaybeT,
  plusMaybeT: plusMaybeT,
  alternativeMaybeT: alternativeMaybeT,
  monadPlusMaybeT: monadPlusMaybeT,
  monadZeroMaybeT: monadZeroMaybeT,
  monadRecMaybeT: monadRecMaybeT,
  monadEffectMaybe: monadEffectMaybe,
  monadContMaybeT: monadContMaybeT,
  monadThrowMaybeT: monadThrowMaybeT,
  monadErrorMaybeT: monadErrorMaybeT,
  monadAskMaybeT: monadAskMaybeT,
  monadReaderMaybeT: monadReaderMaybeT,
  monadStateMaybeT: monadStateMaybeT,
  monadTellMaybeT: monadTellMaybeT,
  monadWriterMaybeT: monadWriterMaybeT,
  semigroupMaybeT: semigroupMaybeT,
  monoidMaybeT: monoidMaybeT,
  lift: Control_Monad_Trans_Class.lift
};
},{"../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Category/index.js":"output/Control.Category/index.js","../Control.Monad/index.js":"output/Control.Monad/index.js","../Control.Monad.Cont.Class/index.js":"output/Control.Monad.Cont.Class/index.js","../Control.Monad.Error.Class/index.js":"output/Control.Monad.Error.Class/index.js","../Control.Monad.Reader.Class/index.js":"output/Control.Monad.Reader.Class/index.js","../Control.Monad.Rec.Class/index.js":"output/Control.Monad.Rec.Class/index.js","../Control.Monad.State.Class/index.js":"output/Control.Monad.State.Class/index.js","../Control.Monad.Trans.Class/index.js":"output/Control.Monad.Trans.Class/index.js","../Control.Monad.Writer.Class/index.js":"output/Control.Monad.Writer.Class/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Monoid/index.js":"output/Data.Monoid/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Effect.Class/index.js":"output/Effect.Class/index.js"}],"output/Type.Equality/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var To = function To(x) {
  return x;
};

var From = function From(x) {
  return x;
};

var refl = {
  proof: function proof(a) {
    return a;
  },
  Coercible0: function Coercible0() {
    return undefined;
  }
};

var proof = function proof(dict) {
  return dict.proof;
};

var to = function to(dictTypeEquals) {
  var v = proof(dictTypeEquals)(function (a) {
    return a;
  });
  return v;
};

var from = function from(dictTypeEquals) {
  var v = proof(dictTypeEquals)(function (a) {
    return a;
  });
  return v;
};

module.exports = {
  proof: proof,
  to: to,
  from: from,
  refl: refl
};
},{}],"output/Data.Distributive/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Control_Category = require("../Control.Category/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Identity = require("../Data.Identity/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Type_Equality = require("../Type.Equality/index.js");

var distributiveIdentity = {
  distribute: function distribute(dictFunctor) {
    var $16 = Data_Functor.map(dictFunctor)(Data_Newtype.unwrap());
    return function ($17) {
      return Data_Identity.Identity($16($17));
    };
  },
  collect: function collect(dictFunctor) {
    return function (f) {
      var $18 = Data_Functor.map(dictFunctor)(function () {
        var $20 = Data_Newtype.unwrap();
        return function ($21) {
          return $20(f($21));
        };
      }());
      return function ($19) {
        return Data_Identity.Identity($18($19));
      };
    };
  },
  Functor0: function Functor0() {
    return Data_Identity.functorIdentity;
  }
};

var distribute = function distribute(dict) {
  return dict.distribute;
};

var distributiveFunction = {
  distribute: function distribute(dictFunctor) {
    return function (a) {
      return function (e) {
        return Data_Functor.map(dictFunctor)(function (v) {
          return v(e);
        })(a);
      };
    };
  },
  collect: function collect(dictFunctor) {
    return function (f) {
      var $22 = distribute(distributiveFunction)(dictFunctor);
      var $23 = Data_Functor.map(dictFunctor)(f);
      return function ($24) {
        return $22($23($24));
      };
    };
  },
  Functor0: function Functor0() {
    return Data_Functor.functorFn;
  }
};

var cotraverse = function cotraverse(dictDistributive) {
  return function (dictFunctor) {
    return function (f) {
      var $25 = Data_Functor.map(dictDistributive.Functor0())(f);
      var $26 = distribute(dictDistributive)(dictFunctor);
      return function ($27) {
        return $25($26($27));
      };
    };
  };
};

var collectDefault = function collectDefault(dictDistributive) {
  return function (dictFunctor) {
    return function (f) {
      var $28 = distribute(dictDistributive)(dictFunctor);
      var $29 = Data_Functor.map(dictFunctor)(f);
      return function ($30) {
        return $28($29($30));
      };
    };
  };
};

var distributiveTuple = function distributiveTuple(dictTypeEquals) {
  return {
    collect: function collect(dictFunctor) {
      return collectDefault(distributiveTuple(dictTypeEquals))(dictFunctor);
    },
    distribute: function distribute(dictFunctor) {
      var $31 = Data_Tuple.Tuple.create(Type_Equality.from(dictTypeEquals)(Data_Unit.unit));
      var $32 = Data_Functor.map(dictFunctor)(Data_Tuple.snd);
      return function ($33) {
        return $31($32($33));
      };
    },
    Functor0: function Functor0() {
      return Data_Tuple.functorTuple;
    }
  };
};

var collect = function collect(dict) {
  return dict.collect;
};

var distributeDefault = function distributeDefault(dictDistributive) {
  return function (dictFunctor) {
    return collect(dictDistributive)(dictFunctor)(Control_Category.identity(Control_Category.categoryFn));
  };
};

module.exports = {
  collect: collect,
  distribute: distribute,
  distributeDefault: distributeDefault,
  collectDefault: collectDefault,
  cotraverse: cotraverse,
  distributiveIdentity: distributiveIdentity,
  distributiveFunction: distributiveFunction,
  distributiveTuple: distributiveTuple
};
},{"../Control.Category/index.js":"output/Control.Category/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Identity/index.js":"output/Data.Identity/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Type.Equality/index.js":"output/Type.Equality/index.js"}],"output/Control.Monad.Reader.Trans/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad_Cont_Class = require("../Control.Monad.Cont.Class/index.js");

var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");

var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class/index.js");

var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");

var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");

var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");

var Control_Monad_Writer_Class = require("../Control.Monad.Writer.Class/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Data_Distributive = require("../Data.Distributive/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Effect_Class = require("../Effect.Class/index.js");

var ReaderT = function ReaderT(x) {
  return x;
};

var withReaderT = function withReaderT(f) {
  return function (v) {
    return function ($63) {
      return v(f($63));
    };
  };
};

var runReaderT = function runReaderT(v) {
  return v;
};

var newtypeReaderT = {
  Coercible0: function Coercible0() {
    return undefined;
  }
};
var monadTransReaderT = {
  lift: function lift(dictMonad) {
    return function ($64) {
      return ReaderT(Data_Function["const"]($64));
    };
  }
};

var mapReaderT = function mapReaderT(f) {
  return function (v) {
    return function ($65) {
      return f(v($65));
    };
  };
};

var functorReaderT = function functorReaderT(dictFunctor) {
  return {
    map: function () {
      var $66 = Data_Functor.map(dictFunctor);
      return function ($67) {
        return mapReaderT($66($67));
      };
    }()
  };
};

var distributiveReaderT = function distributiveReaderT(dictDistributive) {
  return {
    distribute: function distribute(dictFunctor) {
      return function (a) {
        return function (e) {
          return Data_Distributive.collect(dictDistributive)(dictFunctor)(function (r) {
            return r(e);
          })(a);
        };
      };
    },
    collect: function collect(dictFunctor) {
      return function (f) {
        var $68 = Data_Distributive.distribute(distributiveReaderT(dictDistributive))(dictFunctor);
        var $69 = Data_Functor.map(dictFunctor)(f);
        return function ($70) {
          return $68($69($70));
        };
      };
    },
    Functor0: function Functor0() {
      return functorReaderT(dictDistributive.Functor0());
    }
  };
};

var applyReaderT = function applyReaderT(dictApply) {
  return {
    apply: function apply(v) {
      return function (v1) {
        return function (r) {
          return Control_Apply.apply(dictApply)(v(r))(v1(r));
        };
      };
    },
    Functor0: function Functor0() {
      return functorReaderT(dictApply.Functor0());
    }
  };
};

var bindReaderT = function bindReaderT(dictBind) {
  return {
    bind: function bind(v) {
      return function (k) {
        return function (r) {
          return Control_Bind.bind(dictBind)(v(r))(function (a) {
            var v1 = k(a);
            return v1(r);
          });
        };
      };
    },
    Apply0: function Apply0() {
      return applyReaderT(dictBind.Apply0());
    }
  };
};

var semigroupReaderT = function semigroupReaderT(dictApply) {
  return function (dictSemigroup) {
    return {
      append: Control_Apply.lift2(applyReaderT(dictApply))(Data_Semigroup.append(dictSemigroup))
    };
  };
};

var applicativeReaderT = function applicativeReaderT(dictApplicative) {
  return {
    pure: function () {
      var $71 = Control_Applicative.pure(dictApplicative);
      return function ($72) {
        return ReaderT(Data_Function["const"]($71($72)));
      };
    }(),
    Apply0: function Apply0() {
      return applyReaderT(dictApplicative.Apply0());
    }
  };
};

var monadReaderT = function monadReaderT(dictMonad) {
  return {
    Applicative0: function Applicative0() {
      return applicativeReaderT(dictMonad.Applicative0());
    },
    Bind1: function Bind1() {
      return bindReaderT(dictMonad.Bind1());
    }
  };
};

var monadAskReaderT = function monadAskReaderT(dictMonad) {
  return {
    ask: Control_Applicative.pure(dictMonad.Applicative0()),
    Monad0: function Monad0() {
      return monadReaderT(dictMonad);
    }
  };
};

var monadReaderReaderT = function monadReaderReaderT(dictMonad) {
  return {
    local: withReaderT,
    MonadAsk0: function MonadAsk0() {
      return monadAskReaderT(dictMonad);
    }
  };
};

var monadContReaderT = function monadContReaderT(dictMonadCont) {
  return {
    callCC: function callCC(f) {
      return function (r) {
        return Control_Monad_Cont_Class.callCC(dictMonadCont)(function (c) {
          var v = f(function ($73) {
            return ReaderT(Data_Function["const"](c($73)));
          });
          return v(r);
        });
      };
    },
    Monad0: function Monad0() {
      return monadReaderT(dictMonadCont.Monad0());
    }
  };
};

var monadEffectReader = function monadEffectReader(dictMonadEffect) {
  return {
    liftEffect: function () {
      var $74 = Control_Monad_Trans_Class.lift(monadTransReaderT)(dictMonadEffect.Monad0());
      var $75 = Effect_Class.liftEffect(dictMonadEffect);
      return function ($76) {
        return $74($75($76));
      };
    }(),
    Monad0: function Monad0() {
      return monadReaderT(dictMonadEffect.Monad0());
    }
  };
};

var monadRecReaderT = function monadRecReaderT(dictMonadRec) {
  return {
    tailRecM: function tailRecM(k) {
      return function (a) {
        var k$prime = function k$prime(r) {
          return function (a$prime) {
            var v = k(a$prime);
            return Control_Bind.bindFlipped(dictMonadRec.Monad0().Bind1())(Control_Applicative.pure(dictMonadRec.Monad0().Applicative0()))(v(r));
          };
        };

        return function (r) {
          return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(k$prime(r))(a);
        };
      };
    },
    Monad0: function Monad0() {
      return monadReaderT(dictMonadRec.Monad0());
    }
  };
};

var monadStateReaderT = function monadStateReaderT(dictMonadState) {
  return {
    state: function () {
      var $77 = Control_Monad_Trans_Class.lift(monadTransReaderT)(dictMonadState.Monad0());
      var $78 = Control_Monad_State_Class.state(dictMonadState);
      return function ($79) {
        return $77($78($79));
      };
    }(),
    Monad0: function Monad0() {
      return monadReaderT(dictMonadState.Monad0());
    }
  };
};

var monadTellReaderT = function monadTellReaderT(dictMonadTell) {
  return {
    tell: function () {
      var $80 = Control_Monad_Trans_Class.lift(monadTransReaderT)(dictMonadTell.Monad1());
      var $81 = Control_Monad_Writer_Class.tell(dictMonadTell);
      return function ($82) {
        return $80($81($82));
      };
    }(),
    Semigroup0: dictMonadTell.Semigroup0,
    Monad1: function Monad1() {
      return monadReaderT(dictMonadTell.Monad1());
    }
  };
};

var monadWriterReaderT = function monadWriterReaderT(dictMonadWriter) {
  return {
    listen: mapReaderT(Control_Monad_Writer_Class.listen(dictMonadWriter)),
    pass: mapReaderT(Control_Monad_Writer_Class.pass(dictMonadWriter)),
    Monoid0: dictMonadWriter.Monoid0,
    MonadTell1: function MonadTell1() {
      return monadTellReaderT(dictMonadWriter.MonadTell1());
    }
  };
};

var monadThrowReaderT = function monadThrowReaderT(dictMonadThrow) {
  return {
    throwError: function () {
      var $83 = Control_Monad_Trans_Class.lift(monadTransReaderT)(dictMonadThrow.Monad0());
      var $84 = Control_Monad_Error_Class.throwError(dictMonadThrow);
      return function ($85) {
        return $83($84($85));
      };
    }(),
    Monad0: function Monad0() {
      return monadReaderT(dictMonadThrow.Monad0());
    }
  };
};

var monadErrorReaderT = function monadErrorReaderT(dictMonadError) {
  return {
    catchError: function catchError(v) {
      return function (h) {
        return function (r) {
          return Control_Monad_Error_Class.catchError(dictMonadError)(v(r))(function (e) {
            var v1 = h(e);
            return v1(r);
          });
        };
      };
    },
    MonadThrow0: function MonadThrow0() {
      return monadThrowReaderT(dictMonadError.MonadThrow0());
    }
  };
};

var monoidReaderT = function monoidReaderT(dictApplicative) {
  return function (dictMonoid) {
    return {
      mempty: Control_Applicative.pure(applicativeReaderT(dictApplicative))(Data_Monoid.mempty(dictMonoid)),
      Semigroup0: function Semigroup0() {
        return semigroupReaderT(dictApplicative.Apply0())(dictMonoid.Semigroup0());
      }
    };
  };
};

var altReaderT = function altReaderT(dictAlt) {
  return {
    alt: function alt(v) {
      return function (v1) {
        return function (r) {
          return Control_Alt.alt(dictAlt)(v(r))(v1(r));
        };
      };
    },
    Functor0: function Functor0() {
      return functorReaderT(dictAlt.Functor0());
    }
  };
};

var plusReaderT = function plusReaderT(dictPlus) {
  return {
    empty: Data_Function["const"](Control_Plus.empty(dictPlus)),
    Alt0: function Alt0() {
      return altReaderT(dictPlus.Alt0());
    }
  };
};

var alternativeReaderT = function alternativeReaderT(dictAlternative) {
  return {
    Applicative0: function Applicative0() {
      return applicativeReaderT(dictAlternative.Applicative0());
    },
    Plus1: function Plus1() {
      return plusReaderT(dictAlternative.Plus1());
    }
  };
};

var monadPlusReaderT = function monadPlusReaderT(dictMonadPlus) {
  return {
    Monad0: function Monad0() {
      return monadReaderT(dictMonadPlus.Monad0());
    },
    Alternative1: function Alternative1() {
      return alternativeReaderT(dictMonadPlus.Alternative1());
    }
  };
};

var monadZeroReaderT = function monadZeroReaderT(dictMonadZero) {
  return {
    Monad0: function Monad0() {
      return monadReaderT(dictMonadZero.Monad0());
    },
    Alternative1: function Alternative1() {
      return alternativeReaderT(dictMonadZero.Alternative1());
    },
    MonadZeroIsDeprecated2: function MonadZeroIsDeprecated2() {
      return undefined;
    }
  };
};

module.exports = {
  ReaderT: ReaderT,
  runReaderT: runReaderT,
  withReaderT: withReaderT,
  mapReaderT: mapReaderT,
  newtypeReaderT: newtypeReaderT,
  functorReaderT: functorReaderT,
  applyReaderT: applyReaderT,
  applicativeReaderT: applicativeReaderT,
  altReaderT: altReaderT,
  plusReaderT: plusReaderT,
  alternativeReaderT: alternativeReaderT,
  bindReaderT: bindReaderT,
  monadReaderT: monadReaderT,
  monadZeroReaderT: monadZeroReaderT,
  semigroupReaderT: semigroupReaderT,
  monoidReaderT: monoidReaderT,
  monadPlusReaderT: monadPlusReaderT,
  monadTransReaderT: monadTransReaderT,
  monadEffectReader: monadEffectReader,
  monadContReaderT: monadContReaderT,
  monadThrowReaderT: monadThrowReaderT,
  monadErrorReaderT: monadErrorReaderT,
  monadAskReaderT: monadAskReaderT,
  monadReaderReaderT: monadReaderReaderT,
  monadStateReaderT: monadStateReaderT,
  monadTellReaderT: monadTellReaderT,
  monadWriterReaderT: monadWriterReaderT,
  distributiveReaderT: distributiveReaderT,
  monadRecReaderT: monadRecReaderT,
  ask: Control_Monad_Reader_Class.ask,
  asks: Control_Monad_Reader_Class.asks,
  local: Control_Monad_Reader_Class.local,
  lift: Control_Monad_Trans_Class.lift
};
},{"../Control.Alt/index.js":"output/Control.Alt/index.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Monad.Cont.Class/index.js":"output/Control.Monad.Cont.Class/index.js","../Control.Monad.Error.Class/index.js":"output/Control.Monad.Error.Class/index.js","../Control.Monad.Reader.Class/index.js":"output/Control.Monad.Reader.Class/index.js","../Control.Monad.Rec.Class/index.js":"output/Control.Monad.Rec.Class/index.js","../Control.Monad.State.Class/index.js":"output/Control.Monad.State.Class/index.js","../Control.Monad.Trans.Class/index.js":"output/Control.Monad.Trans.Class/index.js","../Control.Monad.Writer.Class/index.js":"output/Control.Monad.Writer.Class/index.js","../Control.Plus/index.js":"output/Control.Plus/index.js","../Data.Distributive/index.js":"output/Data.Distributive/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Monoid/index.js":"output/Data.Monoid/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Effect.Class/index.js":"output/Effect.Class/index.js"}],"output/Control.Monad.Writer.Trans/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad_Cont_Class = require("../Control.Monad.Cont.Class/index.js");

var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");

var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class/index.js");

var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");

var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");

var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");

var Control_Monad_Writer_Class = require("../Control.Monad.Writer.Class/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Effect_Class = require("../Effect.Class/index.js");

var WriterT = function WriterT(x) {
  return x;
};

var runWriterT = function runWriterT(v) {
  return v;
};

var newtypeWriterT = {
  Coercible0: function Coercible0() {
    return undefined;
  }
};

var monadTransWriterT = function monadTransWriterT(dictMonoid) {
  return {
    lift: function lift(dictMonad) {
      return function (m) {
        return Control_Bind.bind(dictMonad.Bind1())(m)(function (a) {
          return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(a, Data_Monoid.mempty(dictMonoid)));
        });
      };
    }
  };
};

var mapWriterT = function mapWriterT(f) {
  return function (v) {
    return f(v);
  };
};

var functorWriterT = function functorWriterT(dictFunctor) {
  return {
    map: function map(f) {
      return mapWriterT(Data_Functor.map(dictFunctor)(function (v) {
        return new Data_Tuple.Tuple(f(v.value0), v.value1);
      }));
    }
  };
};

var execWriterT = function execWriterT(dictFunctor) {
  return function (v) {
    return Data_Functor.map(dictFunctor)(Data_Tuple.snd)(v);
  };
};

var applyWriterT = function applyWriterT(dictSemigroup) {
  return function (dictApply) {
    return {
      apply: function apply(v) {
        return function (v1) {
          var k = function k(v3) {
            return function (v4) {
              return new Data_Tuple.Tuple(v3.value0(v4.value0), Data_Semigroup.append(dictSemigroup)(v3.value1)(v4.value1));
            };
          };

          return Control_Apply.apply(dictApply)(Data_Functor.map(dictApply.Functor0())(k)(v))(v1);
        };
      },
      Functor0: function Functor0() {
        return functorWriterT(dictApply.Functor0());
      }
    };
  };
};

var bindWriterT = function bindWriterT(dictSemigroup) {
  return function (dictBind) {
    return {
      bind: function bind(v) {
        return function (k) {
          return Control_Bind.bind(dictBind)(v)(function (v1) {
            var v2 = k(v1.value0);
            return Data_Functor.map(dictBind.Apply0().Functor0())(function (v3) {
              return new Data_Tuple.Tuple(v3.value0, Data_Semigroup.append(dictSemigroup)(v1.value1)(v3.value1));
            })(v2);
          });
        };
      },
      Apply0: function Apply0() {
        return applyWriterT(dictSemigroup)(dictBind.Apply0());
      }
    };
  };
};

var semigroupWriterT = function semigroupWriterT(dictApply) {
  return function (dictSemigroup) {
    return function (dictSemigroup1) {
      return {
        append: Control_Apply.lift2(applyWriterT(dictSemigroup)(dictApply))(Data_Semigroup.append(dictSemigroup1))
      };
    };
  };
};

var applicativeWriterT = function applicativeWriterT(dictMonoid) {
  return function (dictApplicative) {
    return {
      pure: function pure(a) {
        return Control_Applicative.pure(dictApplicative)(new Data_Tuple.Tuple(a, Data_Monoid.mempty(dictMonoid)));
      },
      Apply0: function Apply0() {
        return applyWriterT(dictMonoid.Semigroup0())(dictApplicative.Apply0());
      }
    };
  };
};

var monadWriterT = function monadWriterT(dictMonoid) {
  return function (dictMonad) {
    return {
      Applicative0: function Applicative0() {
        return applicativeWriterT(dictMonoid)(dictMonad.Applicative0());
      },
      Bind1: function Bind1() {
        return bindWriterT(dictMonoid.Semigroup0())(dictMonad.Bind1());
      }
    };
  };
};

var monadAskWriterT = function monadAskWriterT(dictMonoid) {
  return function (dictMonadAsk) {
    return {
      ask: Control_Monad_Trans_Class.lift(monadTransWriterT(dictMonoid))(dictMonadAsk.Monad0())(Control_Monad_Reader_Class.ask(dictMonadAsk)),
      Monad0: function Monad0() {
        return monadWriterT(dictMonoid)(dictMonadAsk.Monad0());
      }
    };
  };
};

var monadReaderWriterT = function monadReaderWriterT(dictMonoid) {
  return function (dictMonadReader) {
    return {
      local: function local(f) {
        return mapWriterT(Control_Monad_Reader_Class.local(dictMonadReader)(f));
      },
      MonadAsk0: function MonadAsk0() {
        return monadAskWriterT(dictMonoid)(dictMonadReader.MonadAsk0());
      }
    };
  };
};

var monadContWriterT = function monadContWriterT(dictMonoid) {
  return function (dictMonadCont) {
    return {
      callCC: function callCC(f) {
        return Control_Monad_Cont_Class.callCC(dictMonadCont)(function (c) {
          var v = f(function (a) {
            return c(new Data_Tuple.Tuple(a, Data_Monoid.mempty(dictMonoid)));
          });
          return v;
        });
      },
      Monad0: function Monad0() {
        return monadWriterT(dictMonoid)(dictMonadCont.Monad0());
      }
    };
  };
};

var monadEffectWriter = function monadEffectWriter(dictMonoid) {
  return function (dictMonadEffect) {
    return {
      liftEffect: function () {
        var $124 = Control_Monad_Trans_Class.lift(monadTransWriterT(dictMonoid))(dictMonadEffect.Monad0());
        var $125 = Effect_Class.liftEffect(dictMonadEffect);
        return function ($126) {
          return $124($125($126));
        };
      }(),
      Monad0: function Monad0() {
        return monadWriterT(dictMonoid)(dictMonadEffect.Monad0());
      }
    };
  };
};

var monadRecWriterT = function monadRecWriterT(dictMonoid) {
  return function (dictMonadRec) {
    return {
      tailRecM: function tailRecM(f) {
        return function (a) {
          var f$prime = function f$prime(v) {
            var v1 = f(v.value0);
            return Control_Bind.bind(dictMonadRec.Monad0().Bind1())(v1)(function (v2) {
              return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(function () {
                if (v2.value0 instanceof Control_Monad_Rec_Class.Loop) {
                  return new Control_Monad_Rec_Class.Loop(new Data_Tuple.Tuple(v2.value0.value0, Data_Semigroup.append(dictMonoid.Semigroup0())(v.value1)(v2.value1)));
                }

                ;

                if (v2.value0 instanceof Control_Monad_Rec_Class.Done) {
                  return new Control_Monad_Rec_Class.Done(new Data_Tuple.Tuple(v2.value0.value0, Data_Semigroup.append(dictMonoid.Semigroup0())(v.value1)(v2.value1)));
                }

                ;
                throw new Error("Failed pattern match at Control.Monad.Writer.Trans (line 84, column 16 - line 86, column 47): " + [v2.value0.constructor.name]);
              }());
            });
          };

          return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(f$prime)(new Data_Tuple.Tuple(a, Data_Monoid.mempty(dictMonoid)));
        };
      },
      Monad0: function Monad0() {
        return monadWriterT(dictMonoid)(dictMonadRec.Monad0());
      }
    };
  };
};

var monadStateWriterT = function monadStateWriterT(dictMonoid) {
  return function (dictMonadState) {
    return {
      state: function state(f) {
        return Control_Monad_Trans_Class.lift(monadTransWriterT(dictMonoid))(dictMonadState.Monad0())(Control_Monad_State_Class.state(dictMonadState)(f));
      },
      Monad0: function Monad0() {
        return monadWriterT(dictMonoid)(dictMonadState.Monad0());
      }
    };
  };
};

var monadTellWriterT = function monadTellWriterT(dictMonoid) {
  return function (dictMonad) {
    return {
      tell: function () {
        var $127 = Control_Applicative.pure(dictMonad.Applicative0());
        var $128 = Data_Tuple.Tuple.create(Data_Unit.unit);
        return function ($129) {
          return WriterT($127($128($129)));
        };
      }(),
      Semigroup0: dictMonoid.Semigroup0,
      Monad1: function Monad1() {
        return monadWriterT(dictMonoid)(dictMonad);
      }
    };
  };
};

var monadWriterWriterT = function monadWriterWriterT(dictMonoid) {
  return function (dictMonad) {
    return {
      listen: function listen(v) {
        return Control_Bind.bind(dictMonad.Bind1())(v)(function (v1) {
          return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v1.value0, v1.value1), v1.value1));
        });
      },
      pass: function pass(v) {
        return Control_Bind.bind(dictMonad.Bind1())(v)(function (v1) {
          return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(v1.value0.value0, v1.value0.value1(v1.value1)));
        });
      },
      Monoid0: function Monoid0() {
        return dictMonoid;
      },
      MonadTell1: function MonadTell1() {
        return monadTellWriterT(dictMonoid)(dictMonad);
      }
    };
  };
};

var monadThrowWriterT = function monadThrowWriterT(dictMonoid) {
  return function (dictMonadThrow) {
    return {
      throwError: function throwError(e) {
        return Control_Monad_Trans_Class.lift(monadTransWriterT(dictMonoid))(dictMonadThrow.Monad0())(Control_Monad_Error_Class.throwError(dictMonadThrow)(e));
      },
      Monad0: function Monad0() {
        return monadWriterT(dictMonoid)(dictMonadThrow.Monad0());
      }
    };
  };
};

var monadErrorWriterT = function monadErrorWriterT(dictMonoid) {
  return function (dictMonadError) {
    return {
      catchError: function catchError(v) {
        return function (h) {
          return Control_Monad_Error_Class.catchError(dictMonadError)(v)(function (e) {
            var v1 = h(e);
            return v1;
          });
        };
      },
      MonadThrow0: function MonadThrow0() {
        return monadThrowWriterT(dictMonoid)(dictMonadError.MonadThrow0());
      }
    };
  };
};

var monoidWriterT = function monoidWriterT(dictApplicative) {
  return function (dictMonoid) {
    return function (dictMonoid1) {
      return {
        mempty: Control_Applicative.pure(applicativeWriterT(dictMonoid)(dictApplicative))(Data_Monoid.mempty(dictMonoid1)),
        Semigroup0: function Semigroup0() {
          return semigroupWriterT(dictApplicative.Apply0())(dictMonoid.Semigroup0())(dictMonoid1.Semigroup0());
        }
      };
    };
  };
};

var altWriterT = function altWriterT(dictAlt) {
  return {
    alt: function alt(v) {
      return function (v1) {
        return Control_Alt.alt(dictAlt)(v)(v1);
      };
    },
    Functor0: function Functor0() {
      return functorWriterT(dictAlt.Functor0());
    }
  };
};

var plusWriterT = function plusWriterT(dictPlus) {
  return {
    empty: Control_Plus.empty(dictPlus),
    Alt0: function Alt0() {
      return altWriterT(dictPlus.Alt0());
    }
  };
};

var alternativeWriterT = function alternativeWriterT(dictMonoid) {
  return function (dictAlternative) {
    return {
      Applicative0: function Applicative0() {
        return applicativeWriterT(dictMonoid)(dictAlternative.Applicative0());
      },
      Plus1: function Plus1() {
        return plusWriterT(dictAlternative.Plus1());
      }
    };
  };
};

var monadPlusWriterT = function monadPlusWriterT(dictMonoid) {
  return function (dictMonadPlus) {
    return {
      Monad0: function Monad0() {
        return monadWriterT(dictMonoid)(dictMonadPlus.Monad0());
      },
      Alternative1: function Alternative1() {
        return alternativeWriterT(dictMonoid)(dictMonadPlus.Alternative1());
      }
    };
  };
};

var monadZeroWriterT = function monadZeroWriterT(dictMonoid) {
  return function (dictMonadZero) {
    return {
      Monad0: function Monad0() {
        return monadWriterT(dictMonoid)(dictMonadZero.Monad0());
      },
      Alternative1: function Alternative1() {
        return alternativeWriterT(dictMonoid)(dictMonadZero.Alternative1());
      },
      MonadZeroIsDeprecated2: function MonadZeroIsDeprecated2() {
        return undefined;
      }
    };
  };
};

module.exports = {
  WriterT: WriterT,
  runWriterT: runWriterT,
  execWriterT: execWriterT,
  mapWriterT: mapWriterT,
  newtypeWriterT: newtypeWriterT,
  functorWriterT: functorWriterT,
  applyWriterT: applyWriterT,
  applicativeWriterT: applicativeWriterT,
  altWriterT: altWriterT,
  plusWriterT: plusWriterT,
  alternativeWriterT: alternativeWriterT,
  bindWriterT: bindWriterT,
  monadWriterT: monadWriterT,
  monadRecWriterT: monadRecWriterT,
  monadZeroWriterT: monadZeroWriterT,
  monadPlusWriterT: monadPlusWriterT,
  monadTransWriterT: monadTransWriterT,
  monadEffectWriter: monadEffectWriter,
  monadContWriterT: monadContWriterT,
  monadThrowWriterT: monadThrowWriterT,
  monadErrorWriterT: monadErrorWriterT,
  monadAskWriterT: monadAskWriterT,
  monadReaderWriterT: monadReaderWriterT,
  monadStateWriterT: monadStateWriterT,
  monadTellWriterT: monadTellWriterT,
  monadWriterWriterT: monadWriterWriterT,
  semigroupWriterT: semigroupWriterT,
  monoidWriterT: monoidWriterT,
  lift: Control_Monad_Trans_Class.lift,
  censor: Control_Monad_Writer_Class.censor,
  listen: Control_Monad_Writer_Class.listen,
  listens: Control_Monad_Writer_Class.listens,
  pass: Control_Monad_Writer_Class.pass,
  tell: Control_Monad_Writer_Class.tell
};
},{"../Control.Alt/index.js":"output/Control.Alt/index.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Monad.Cont.Class/index.js":"output/Control.Monad.Cont.Class/index.js","../Control.Monad.Error.Class/index.js":"output/Control.Monad.Error.Class/index.js","../Control.Monad.Reader.Class/index.js":"output/Control.Monad.Reader.Class/index.js","../Control.Monad.Rec.Class/index.js":"output/Control.Monad.Rec.Class/index.js","../Control.Monad.State.Class/index.js":"output/Control.Monad.State.Class/index.js","../Control.Monad.Trans.Class/index.js":"output/Control.Monad.Trans.Class/index.js","../Control.Monad.Writer.Class/index.js":"output/Control.Monad.Writer.Class/index.js","../Control.Plus/index.js":"output/Control.Plus/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Monoid/index.js":"output/Data.Monoid/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Effect.Class/index.js":"output/Effect.Class/index.js"}],"output/Data.Functor.Contravariant/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Data_Functor = require("../Data.Functor/index.js");

var Data_Void = require("../Data.Void/index.js");

var contravariantConst = {
  cmap: function cmap(v) {
    return function (v1) {
      return v1;
    };
  }
};

var cmap = function cmap(dict) {
  return dict.cmap;
};

var cmapFlipped = function cmapFlipped(dictContravariant) {
  return function (x) {
    return function (f) {
      return cmap(dictContravariant)(f)(x);
    };
  };
};

var coerce = function coerce(dictContravariant) {
  return function (dictFunctor) {
    return function (a) {
      return Data_Functor.map(dictFunctor)(Data_Void.absurd)(cmap(dictContravariant)(Data_Void.absurd)(a));
    };
  };
};

var imapC = function imapC(dictContravariant) {
  return function (v) {
    return function (f) {
      return cmap(dictContravariant)(f);
    };
  };
};

module.exports = {
  cmap: cmap,
  cmapFlipped: cmapFlipped,
  coerce: coerce,
  imapC: imapC,
  contravariantConst: contravariantConst
};
},{"../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Void/index.js":"output/Data.Void/index.js"}],"output/Data.Profunctor/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Control_Category = require("../Control.Category/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var profunctorFn = {
  dimap: function dimap(a2b) {
    return function (c2d) {
      return function (b2c) {
        return function ($8) {
          return c2d(b2c(a2b($8)));
        };
      };
    };
  }
};

var dimap = function dimap(dict) {
  return dict.dimap;
};

var lcmap = function lcmap(dictProfunctor) {
  return function (a2b) {
    return dimap(dictProfunctor)(a2b)(Control_Category.identity(Control_Category.categoryFn));
  };
};

var rmap = function rmap(dictProfunctor) {
  return function (b2c) {
    return dimap(dictProfunctor)(Control_Category.identity(Control_Category.categoryFn))(b2c);
  };
};

var unwrapIso = function unwrapIso(dictProfunctor) {
  return function () {
    return dimap(dictProfunctor)(Data_Newtype.wrap())(Data_Newtype.unwrap());
  };
};

var wrapIso = function wrapIso(dictProfunctor) {
  return function () {
    return function (v) {
      return dimap(dictProfunctor)(Data_Newtype.unwrap())(Data_Newtype.wrap());
    };
  };
};

var arr = function arr(dictCategory) {
  return function (dictProfunctor) {
    return function (f) {
      return rmap(dictProfunctor)(f)(Control_Category.identity(dictCategory));
    };
  };
};

module.exports = {
  dimap: dimap,
  lcmap: lcmap,
  rmap: rmap,
  arr: arr,
  unwrapIso: unwrapIso,
  wrapIso: wrapIso,
  profunctorFn: profunctorFn
};
},{"../Control.Category/index.js":"output/Control.Category/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js"}],"output/Data.Functor.Costar/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Control_Comonad = require("../Control.Comonad/index.js");

var Control_Extend = require("../Control.Extend/index.js");

var Data_Distributive = require("../Data.Distributive/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Functor_Contravariant = require("../Data.Functor.Contravariant/index.js");

var Data_Functor_Invariant = require("../Data.Functor.Invariant/index.js");

var Data_Profunctor = require("../Data.Profunctor/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Costar = function Costar(x) {
  return x;
};

var semigroupoidCostar = function semigroupoidCostar(dictExtend) {
  return {
    compose: function compose(v) {
      return function (v1) {
        return Control_Extend.composeCoKleisliFlipped(dictExtend)(v)(v1);
      };
    }
  };
};

var profunctorCostar = function profunctorCostar(dictFunctor) {
  return {
    dimap: function dimap(f) {
      return function (g) {
        return function (v) {
          var $46 = Data_Functor.map(dictFunctor)(f);
          return function ($47) {
            return g(v($46($47)));
          };
        };
      };
    }
  };
};

var strongCostar = function strongCostar(dictComonad) {
  return {
    first: function first(v) {
      return function (x) {
        return new Data_Tuple.Tuple(v(Data_Functor.map(dictComonad.Extend0().Functor0())(Data_Tuple.fst)(x)), Data_Tuple.snd(Control_Comonad.extract(dictComonad)(x)));
      };
    },
    second: function second(v) {
      return function (x) {
        return new Data_Tuple.Tuple(Data_Tuple.fst(Control_Comonad.extract(dictComonad)(x)), v(Data_Functor.map(dictComonad.Extend0().Functor0())(Data_Tuple.snd)(x)));
      };
    },
    Profunctor0: function Profunctor0() {
      return profunctorCostar(dictComonad.Extend0().Functor0());
    }
  };
};

var newtypeCostar = {
  Coercible0: function Coercible0() {
    return undefined;
  }
};

var hoistCostar = function hoistCostar(f) {
  return function (v) {
    return Data_Profunctor.lcmap(Data_Profunctor.profunctorFn)(f)(v);
  };
};

var functorCostar = {
  map: function map(f) {
    return function (v) {
      return function ($48) {
        return f(v($48));
      };
    };
  }
};
var invariantCostar = {
  imap: Data_Functor_Invariant.imapF(functorCostar)
};
var distributiveCostar = {
  distribute: function distribute(dictFunctor) {
    return function (f) {
      return function (a) {
        return Data_Functor.map(dictFunctor)(function (v) {
          return v(a);
        })(f);
      };
    };
  },
  collect: function collect(dictFunctor) {
    return function (f) {
      var $49 = Data_Distributive.distribute(distributiveCostar)(dictFunctor);
      var $50 = Data_Functor.map(dictFunctor)(f);
      return function ($51) {
        return $49($50($51));
      };
    };
  },
  Functor0: function Functor0() {
    return functorCostar;
  }
};

var closedCostar = function closedCostar(dictFunctor) {
  return {
    closed: function closed(v) {
      return function (g) {
        return function (x) {
          return v(Data_Functor.map(dictFunctor)(function (v1) {
            return v1(x);
          })(g));
        };
      };
    },
    Profunctor0: function Profunctor0() {
      return profunctorCostar(dictFunctor);
    }
  };
};

var categoryCostar = function categoryCostar(dictComonad) {
  return {
    identity: Control_Comonad.extract(dictComonad),
    Semigroupoid0: function Semigroupoid0() {
      return semigroupoidCostar(dictComonad.Extend0());
    }
  };
};

var bifunctorCostar = function bifunctorCostar(dictContravariant) {
  return {
    bimap: function bimap(f) {
      return function (g) {
        return function (v) {
          var $52 = Data_Functor_Contravariant.cmap(dictContravariant)(f);
          return function ($53) {
            return g(v($52($53)));
          };
        };
      };
    }
  };
};

var applyCostar = {
  apply: function apply(v) {
    return function (v1) {
      return function (a) {
        return v(a)(v1(a));
      };
    };
  },
  Functor0: function Functor0() {
    return functorCostar;
  }
};
var bindCostar = {
  bind: function bind(v) {
    return function (f) {
      return function (x) {
        var v1 = f(v(x));
        return v1(x);
      };
    };
  },
  Apply0: function Apply0() {
    return applyCostar;
  }
};
var applicativeCostar = {
  pure: function pure(a) {
    return function (v) {
      return a;
    };
  },
  Apply0: function Apply0() {
    return applyCostar;
  }
};
var monadCostar = {
  Applicative0: function Applicative0() {
    return applicativeCostar;
  },
  Bind1: function Bind1() {
    return bindCostar;
  }
};
module.exports = {
  Costar: Costar,
  hoistCostar: hoistCostar,
  newtypeCostar: newtypeCostar,
  semigroupoidCostar: semigroupoidCostar,
  categoryCostar: categoryCostar,
  functorCostar: functorCostar,
  invariantCostar: invariantCostar,
  applyCostar: applyCostar,
  applicativeCostar: applicativeCostar,
  bindCostar: bindCostar,
  monadCostar: monadCostar,
  distributiveCostar: distributiveCostar,
  bifunctorCostar: bifunctorCostar,
  profunctorCostar: profunctorCostar,
  strongCostar: strongCostar,
  closedCostar: closedCostar
};
},{"../Control.Comonad/index.js":"output/Control.Comonad/index.js","../Control.Extend/index.js":"output/Control.Extend/index.js","../Data.Distributive/index.js":"output/Data.Distributive/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Functor.Contravariant/index.js":"output/Data.Functor.Contravariant/index.js","../Data.Functor.Invariant/index.js":"output/Data.Functor.Invariant/index.js","../Data.Profunctor/index.js":"output/Data.Profunctor/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js"}],"output/Data.Profunctor.Star/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Data_Distributive = require("../Data.Distributive/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Functor_Invariant = require("../Data.Functor.Invariant/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Star = function Star(x) {
  return x;
};

var semigroupoidStar = function semigroupoidStar(dictBind) {
  return {
    compose: function compose(v) {
      return function (v1) {
        return function (x) {
          return Control_Bind.bind(dictBind)(v1(x))(v);
        };
      };
    }
  };
};

var profunctorStar = function profunctorStar(dictFunctor) {
  return {
    dimap: function dimap(f) {
      return function (g) {
        return function (v) {
          var $75 = Data_Functor.map(dictFunctor)(g);
          return function ($76) {
            return $75(v(f($76)));
          };
        };
      };
    }
  };
};

var strongStar = function strongStar(dictFunctor) {
  return {
    first: function first(v) {
      return function (v1) {
        return Data_Functor.map(dictFunctor)(function (v2) {
          return new Data_Tuple.Tuple(v2, v1.value1);
        })(v(v1.value0));
      };
    },
    second: function second(v) {
      return function (v1) {
        return Data_Functor.map(dictFunctor)(Data_Tuple.Tuple.create(v1.value0))(v(v1.value1));
      };
    },
    Profunctor0: function Profunctor0() {
      return profunctorStar(dictFunctor);
    }
  };
};

var newtypeStar = {
  Coercible0: function Coercible0() {
    return undefined;
  }
};

var invariantStar = function invariantStar(dictInvariant) {
  return {
    imap: function imap(f) {
      return function (g) {
        return function (v) {
          var $77 = Data_Functor_Invariant.imap(dictInvariant)(f)(g);
          return function ($78) {
            return $77(v($78));
          };
        };
      };
    }
  };
};

var hoistStar = function hoistStar(f) {
  return function (v) {
    return function ($79) {
      return f(v($79));
    };
  };
};

var functorStar = function functorStar(dictFunctor) {
  return {
    map: function map(f) {
      return function (v) {
        var $80 = Data_Functor.map(dictFunctor)(f);
        return function ($81) {
          return $80(v($81));
        };
      };
    }
  };
};

var distributiveStar = function distributiveStar(dictDistributive) {
  return {
    distribute: function distribute(dictFunctor) {
      return function (f) {
        return function (a) {
          return Data_Distributive.collect(dictDistributive)(dictFunctor)(function (v) {
            return v(a);
          })(f);
        };
      };
    },
    collect: function collect(dictFunctor) {
      return function (f) {
        var $82 = Data_Distributive.distribute(distributiveStar(dictDistributive))(dictFunctor);
        var $83 = Data_Functor.map(dictFunctor)(f);
        return function ($84) {
          return $82($83($84));
        };
      };
    },
    Functor0: function Functor0() {
      return functorStar(dictDistributive.Functor0());
    }
  };
};

var closedStar = function closedStar(dictDistributive) {
  return {
    closed: function closed(v) {
      return function (g) {
        return Data_Distributive.distribute(dictDistributive)(Data_Functor.functorFn)(function ($85) {
          return v(g($85));
        });
      };
    },
    Profunctor0: function Profunctor0() {
      return profunctorStar(dictDistributive.Functor0());
    }
  };
};

var choiceStar = function choiceStar(dictApplicative) {
  return {
    left: function left(v) {
      return Data_Either.either(function () {
        var $86 = Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Either.Left.create);
        return function ($87) {
          return $86(v($87));
        };
      }())(function () {
        var $88 = Control_Applicative.pure(dictApplicative);
        return function ($89) {
          return $88(Data_Either.Right.create($89));
        };
      }());
    },
    right: function right(v) {
      return Data_Either.either(function () {
        var $90 = Control_Applicative.pure(dictApplicative);
        return function ($91) {
          return $90(Data_Either.Left.create($91));
        };
      }())(function () {
        var $92 = Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Either.Right.create);
        return function ($93) {
          return $92(v($93));
        };
      }());
    },
    Profunctor0: function Profunctor0() {
      return profunctorStar(dictApplicative.Apply0().Functor0());
    }
  };
};

var categoryStar = function categoryStar(dictMonad) {
  return {
    identity: Control_Applicative.pure(dictMonad.Applicative0()),
    Semigroupoid0: function Semigroupoid0() {
      return semigroupoidStar(dictMonad.Bind1());
    }
  };
};

var applyStar = function applyStar(dictApply) {
  return {
    apply: function apply(v) {
      return function (v1) {
        return function (a) {
          return Control_Apply.apply(dictApply)(v(a))(v1(a));
        };
      };
    },
    Functor0: function Functor0() {
      return functorStar(dictApply.Functor0());
    }
  };
};

var bindStar = function bindStar(dictBind) {
  return {
    bind: function bind(v) {
      return function (f) {
        return function (x) {
          return Control_Bind.bind(dictBind)(v(x))(function (a) {
            var v1 = f(a);
            return v1(x);
          });
        };
      };
    },
    Apply0: function Apply0() {
      return applyStar(dictBind.Apply0());
    }
  };
};

var applicativeStar = function applicativeStar(dictApplicative) {
  return {
    pure: function pure(a) {
      return function (v) {
        return Control_Applicative.pure(dictApplicative)(a);
      };
    },
    Apply0: function Apply0() {
      return applyStar(dictApplicative.Apply0());
    }
  };
};

var monadStar = function monadStar(dictMonad) {
  return {
    Applicative0: function Applicative0() {
      return applicativeStar(dictMonad.Applicative0());
    },
    Bind1: function Bind1() {
      return bindStar(dictMonad.Bind1());
    }
  };
};

var altStar = function altStar(dictAlt) {
  return {
    alt: function alt(v) {
      return function (v1) {
        return function (a) {
          return Control_Alt.alt(dictAlt)(v(a))(v1(a));
        };
      };
    },
    Functor0: function Functor0() {
      return functorStar(dictAlt.Functor0());
    }
  };
};

var plusStar = function plusStar(dictPlus) {
  return {
    empty: function empty(v) {
      return Control_Plus.empty(dictPlus);
    },
    Alt0: function Alt0() {
      return altStar(dictPlus.Alt0());
    }
  };
};

var alternativeStar = function alternativeStar(dictAlternative) {
  return {
    Applicative0: function Applicative0() {
      return applicativeStar(dictAlternative.Applicative0());
    },
    Plus1: function Plus1() {
      return plusStar(dictAlternative.Plus1());
    }
  };
};

var monadPlusStar = function monadPlusStar(dictMonadPlus) {
  return {
    Monad0: function Monad0() {
      return monadStar(dictMonadPlus.Monad0());
    },
    Alternative1: function Alternative1() {
      return alternativeStar(dictMonadPlus.Alternative1());
    }
  };
};

var monadZeroStar = function monadZeroStar(dictMonadZero) {
  return {
    Monad0: function Monad0() {
      return monadStar(dictMonadZero.Monad0());
    },
    Alternative1: function Alternative1() {
      return alternativeStar(dictMonadZero.Alternative1());
    },
    MonadZeroIsDeprecated2: function MonadZeroIsDeprecated2() {
      return undefined;
    }
  };
};

module.exports = {
  Star: Star,
  hoistStar: hoistStar,
  newtypeStar: newtypeStar,
  semigroupoidStar: semigroupoidStar,
  categoryStar: categoryStar,
  functorStar: functorStar,
  invariantStar: invariantStar,
  applyStar: applyStar,
  applicativeStar: applicativeStar,
  bindStar: bindStar,
  monadStar: monadStar,
  altStar: altStar,
  plusStar: plusStar,
  alternativeStar: alternativeStar,
  monadZeroStar: monadZeroStar,
  monadPlusStar: monadPlusStar,
  distributiveStar: distributiveStar,
  profunctorStar: profunctorStar,
  strongStar: strongStar,
  choiceStar: choiceStar,
  closedStar: closedStar
};
},{"../Control.Alt/index.js":"output/Control.Alt/index.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Plus/index.js":"output/Control.Plus/index.js","../Data.Distributive/index.js":"output/Data.Distributive/index.js","../Data.Either/index.js":"output/Data.Either/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Functor.Invariant/index.js":"output/Data.Functor.Invariant/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js"}],"output/Control.Parallel.Class/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad_Cont_Trans = require("../Control.Monad.Cont.Trans/index.js");

var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans/index.js");

var Control_Monad_Maybe_Trans = require("../Control.Monad.Maybe.Trans/index.js");

var Control_Monad_Reader_Trans = require("../Control.Monad.Reader.Trans/index.js");

var Control_Monad_Writer_Trans = require("../Control.Monad.Writer.Trans/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Functor_Compose = require("../Data.Functor.Compose/index.js");

var Data_Functor_Costar = require("../Data.Functor.Costar/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Profunctor_Star = require("../Data.Profunctor.Star/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Effect_Class = require("../Effect.Class/index.js");

var Effect_Ref = require("../Effect.Ref/index.js");

var ParCont = function ParCont(x) {
  return x;
};

var _sequential = function sequential(dict) {
  return dict.sequential;
};

var _parallel = function parallel(dict) {
  return dict.parallel;
};

var newtypeParCont = {
  Coercible0: function Coercible0() {
    return undefined;
  }
};

var monadParWriterT = function monadParWriterT(dictMonoid) {
  return function (dictParallel) {
    return {
      parallel: Control_Monad_Writer_Trans.mapWriterT(_parallel(dictParallel)),
      sequential: Control_Monad_Writer_Trans.mapWriterT(_sequential(dictParallel)),
      Monad0: function Monad0() {
        return Control_Monad_Writer_Trans.monadWriterT(dictMonoid)(dictParallel.Monad0());
      },
      Applicative1: function Applicative1() {
        return Control_Monad_Writer_Trans.applicativeWriterT(dictMonoid)(dictParallel.Applicative1());
      }
    };
  };
};

var monadParStar = function monadParStar(dictParallel) {
  return {
    parallel: function parallel(v) {
      var $49 = _parallel(dictParallel);

      return function ($50) {
        return $49(v($50));
      };
    },
    sequential: function sequential(v) {
      var $51 = _sequential(dictParallel);

      return function ($52) {
        return $51(v($52));
      };
    },
    Monad0: function Monad0() {
      return Data_Profunctor_Star.monadStar(dictParallel.Monad0());
    },
    Applicative1: function Applicative1() {
      return Data_Profunctor_Star.applicativeStar(dictParallel.Applicative1());
    }
  };
};

var monadParReaderT = function monadParReaderT(dictParallel) {
  return {
    parallel: Control_Monad_Reader_Trans.mapReaderT(_parallel(dictParallel)),
    sequential: Control_Monad_Reader_Trans.mapReaderT(_sequential(dictParallel)),
    Monad0: function Monad0() {
      return Control_Monad_Reader_Trans.monadReaderT(dictParallel.Monad0());
    },
    Applicative1: function Applicative1() {
      return Control_Monad_Reader_Trans.applicativeReaderT(dictParallel.Applicative1());
    }
  };
};

var monadParMaybeT = function monadParMaybeT(dictParallel) {
  return {
    parallel: function parallel(v) {
      return _parallel(dictParallel)(v);
    },
    sequential: function sequential(v) {
      return _sequential(dictParallel)(v);
    },
    Monad0: function Monad0() {
      return Control_Monad_Maybe_Trans.monadMaybeT(dictParallel.Monad0());
    },
    Applicative1: function Applicative1() {
      return Data_Functor_Compose.applicativeCompose(dictParallel.Applicative1())(Data_Maybe.applicativeMaybe);
    }
  };
};

var monadParExceptT = function monadParExceptT(dictParallel) {
  return {
    parallel: function parallel(v) {
      return _parallel(dictParallel)(v);
    },
    sequential: function sequential(v) {
      return _sequential(dictParallel)(v);
    },
    Monad0: function Monad0() {
      return Control_Monad_Except_Trans.monadExceptT(dictParallel.Monad0());
    },
    Applicative1: function Applicative1() {
      return Data_Functor_Compose.applicativeCompose(dictParallel.Applicative1())(Data_Either.applicativeEither);
    }
  };
};

var monadParCostar = function monadParCostar(dictParallel) {
  return {
    parallel: function parallel(v) {
      var $53 = _sequential(dictParallel);

      return function ($54) {
        return v($53($54));
      };
    },
    sequential: function sequential(v) {
      var $55 = _parallel(dictParallel);

      return function ($56) {
        return v($55($56));
      };
    },
    Monad0: function Monad0() {
      return Data_Functor_Costar.monadCostar;
    },
    Applicative1: function Applicative1() {
      return Data_Functor_Costar.applicativeCostar;
    }
  };
};

var monadParParCont = function monadParParCont(dictMonadEffect) {
  return {
    parallel: ParCont,
    sequential: function sequential(v) {
      return v;
    },
    Monad0: function Monad0() {
      return Control_Monad_Cont_Trans.monadContT(dictMonadEffect.Monad0());
    },
    Applicative1: function Applicative1() {
      return applicativeParCont(dictMonadEffect);
    }
  };
};

var functorParCont = function functorParCont(dictMonadEffect) {
  return {
    map: function map(f) {
      var $57 = _parallel(monadParParCont(dictMonadEffect));

      var $58 = Data_Functor.map(Control_Monad_Cont_Trans.functorContT(dictMonadEffect.Monad0().Bind1().Apply0().Functor0()))(f);

      var $59 = _sequential(monadParParCont(dictMonadEffect));

      return function ($60) {
        return $57($58($59($60)));
      };
    }
  };
};

var applyParCont = function applyParCont(dictMonadEffect) {
  return {
    apply: function apply(v) {
      return function (v1) {
        return function (k) {
          return Control_Bind.bind(dictMonadEffect.Monad0().Bind1())(Effect_Class.liftEffect(dictMonadEffect)(Effect_Ref["new"](Data_Maybe.Nothing.value)))(function (ra) {
            return Control_Bind.bind(dictMonadEffect.Monad0().Bind1())(Effect_Class.liftEffect(dictMonadEffect)(Effect_Ref["new"](Data_Maybe.Nothing.value)))(function (rb) {
              return Control_Bind.discard(Control_Bind.discardUnit)(dictMonadEffect.Monad0().Bind1())(Control_Monad_Cont_Trans.runContT(v)(function (a) {
                return Control_Bind.bind(dictMonadEffect.Monad0().Bind1())(Effect_Class.liftEffect(dictMonadEffect)(Effect_Ref.read(rb)))(function (mb) {
                  if (mb instanceof Data_Maybe.Nothing) {
                    return Effect_Class.liftEffect(dictMonadEffect)(Effect_Ref.write(new Data_Maybe.Just(a))(ra));
                  }

                  ;

                  if (mb instanceof Data_Maybe.Just) {
                    return k(a(mb.value0));
                  }

                  ;
                  throw new Error("Failed pattern match at Control.Parallel.Class (line 82, column 7 - line 84, column 26): " + [mb.constructor.name]);
                });
              }))(function () {
                return Control_Monad_Cont_Trans.runContT(v1)(function (b) {
                  return Control_Bind.bind(dictMonadEffect.Monad0().Bind1())(Effect_Class.liftEffect(dictMonadEffect)(Effect_Ref.read(ra)))(function (ma) {
                    if (ma instanceof Data_Maybe.Nothing) {
                      return Effect_Class.liftEffect(dictMonadEffect)(Effect_Ref.write(new Data_Maybe.Just(b))(rb));
                    }

                    ;

                    if (ma instanceof Data_Maybe.Just) {
                      return k(ma.value0(b));
                    }

                    ;
                    throw new Error("Failed pattern match at Control.Parallel.Class (line 88, column 7 - line 90, column 26): " + [ma.constructor.name]);
                  });
                });
              });
            });
          });
        };
      };
    },
    Functor0: function Functor0() {
      return functorParCont(dictMonadEffect);
    }
  };
};

var applicativeParCont = function applicativeParCont(dictMonadEffect) {
  return {
    pure: function () {
      var $61 = _parallel(monadParParCont(dictMonadEffect));

      var $62 = Control_Applicative.pure(Control_Monad_Cont_Trans.applicativeContT(dictMonadEffect.Monad0().Applicative0()));
      return function ($63) {
        return $61($62($63));
      };
    }(),
    Apply0: function Apply0() {
      return applyParCont(dictMonadEffect);
    }
  };
};

var altParCont = function altParCont(dictMonadEffect) {
  return {
    alt: function alt(v) {
      return function (v1) {
        return function (k) {
          return Control_Bind.bind(dictMonadEffect.Monad0().Bind1())(Effect_Class.liftEffect(dictMonadEffect)(Effect_Ref["new"](false)))(function (done) {
            return Control_Bind.discard(Control_Bind.discardUnit)(dictMonadEffect.Monad0().Bind1())(Control_Monad_Cont_Trans.runContT(v)(function (a) {
              return Control_Bind.bind(dictMonadEffect.Monad0().Bind1())(Effect_Class.liftEffect(dictMonadEffect)(Effect_Ref.read(done)))(function (b) {
                if (b) {
                  return Control_Applicative.pure(dictMonadEffect.Monad0().Applicative0())(Data_Unit.unit);
                }

                ;
                return Control_Bind.discard(Control_Bind.discardUnit)(dictMonadEffect.Monad0().Bind1())(Effect_Class.liftEffect(dictMonadEffect)(Effect_Ref.write(true)(done)))(function () {
                  return k(a);
                });
              });
            }))(function () {
              return Control_Monad_Cont_Trans.runContT(v1)(function (a) {
                return Control_Bind.bind(dictMonadEffect.Monad0().Bind1())(Effect_Class.liftEffect(dictMonadEffect)(Effect_Ref.read(done)))(function (b) {
                  if (b) {
                    return Control_Applicative.pure(dictMonadEffect.Monad0().Applicative0())(Data_Unit.unit);
                  }

                  ;
                  return Control_Bind.discard(Control_Bind.discardUnit)(dictMonadEffect.Monad0().Bind1())(Effect_Class.liftEffect(dictMonadEffect)(Effect_Ref.write(true)(done)))(function () {
                    return k(a);
                  });
                });
              });
            });
          });
        };
      };
    },
    Functor0: function Functor0() {
      return functorParCont(dictMonadEffect);
    }
  };
};

var plusParCont = function plusParCont(dictMonadEffect) {
  return {
    empty: function empty(v) {
      return Control_Applicative.pure(dictMonadEffect.Monad0().Applicative0())(Data_Unit.unit);
    },
    Alt0: function Alt0() {
      return altParCont(dictMonadEffect);
    }
  };
};

var alternativeParCont = function alternativeParCont(dictMonadEffect) {
  return {
    Applicative0: function Applicative0() {
      return applicativeParCont(dictMonadEffect);
    },
    Plus1: function Plus1() {
      return plusParCont(dictMonadEffect);
    }
  };
};

module.exports = {
  parallel: _parallel,
  sequential: _sequential,
  ParCont: ParCont,
  monadParExceptT: monadParExceptT,
  monadParReaderT: monadParReaderT,
  monadParWriterT: monadParWriterT,
  monadParMaybeT: monadParMaybeT,
  monadParStar: monadParStar,
  monadParCostar: monadParCostar,
  newtypeParCont: newtypeParCont,
  functorParCont: functorParCont,
  applyParCont: applyParCont,
  applicativeParCont: applicativeParCont,
  altParCont: altParCont,
  plusParCont: plusParCont,
  alternativeParCont: alternativeParCont,
  monadParParCont: monadParParCont
};
},{"../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Monad.Cont.Trans/index.js":"output/Control.Monad.Cont.Trans/index.js","../Control.Monad.Except.Trans/index.js":"output/Control.Monad.Except.Trans/index.js","../Control.Monad.Maybe.Trans/index.js":"output/Control.Monad.Maybe.Trans/index.js","../Control.Monad.Reader.Trans/index.js":"output/Control.Monad.Reader.Trans/index.js","../Control.Monad.Writer.Trans/index.js":"output/Control.Monad.Writer.Trans/index.js","../Data.Either/index.js":"output/Data.Either/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Functor.Compose/index.js":"output/Data.Functor.Compose/index.js","../Data.Functor.Costar/index.js":"output/Data.Functor.Costar/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Profunctor.Star/index.js":"output/Data.Profunctor.Star/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Effect.Class/index.js":"output/Effect.Class/index.js","../Effect.Ref/index.js":"output/Effect.Ref/index.js"}],"output/Control.Parallel/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Control_Apply = require("../Control.Apply/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Parallel_Class = require("../Control.Parallel.Class/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var parTraverse_ = function parTraverse_(dictParallel) {
  return function (dictFoldable) {
    return function (f) {
      var $17 = Control_Parallel_Class.sequential(dictParallel);
      var $18 = Data_Foldable.traverse_(dictParallel.Applicative1())(dictFoldable)(function () {
        var $20 = Control_Parallel_Class.parallel(dictParallel);
        return function ($21) {
          return $20(f($21));
        };
      }());
      return function ($19) {
        return $17($18($19));
      };
    };
  };
};

var parTraverse = function parTraverse(dictParallel) {
  return function (dictTraversable) {
    return function (f) {
      var $22 = Control_Parallel_Class.sequential(dictParallel);
      var $23 = Data_Traversable.traverse(dictTraversable)(dictParallel.Applicative1())(function () {
        var $25 = Control_Parallel_Class.parallel(dictParallel);
        return function ($26) {
          return $25(f($26));
        };
      }());
      return function ($24) {
        return $22($23($24));
      };
    };
  };
};

var parSequence_ = function parSequence_(dictParallel) {
  return function (dictFoldable) {
    return parTraverse_(dictParallel)(dictFoldable)(Control_Category.identity(Control_Category.categoryFn));
  };
};

var parSequence = function parSequence(dictParallel) {
  return function (dictTraversable) {
    return parTraverse(dictParallel)(dictTraversable)(Control_Category.identity(Control_Category.categoryFn));
  };
};

var parOneOfMap = function parOneOfMap(dictParallel) {
  return function (dictAlternative) {
    return function (dictFoldable) {
      return function (dictFunctor) {
        return function (f) {
          var $27 = Control_Parallel_Class.sequential(dictParallel);
          var $28 = Data_Foldable.oneOfMap(dictFoldable)(dictAlternative.Plus1())(function () {
            var $30 = Control_Parallel_Class.parallel(dictParallel);
            return function ($31) {
              return $30(f($31));
            };
          }());
          return function ($29) {
            return $27($28($29));
          };
        };
      };
    };
  };
};

var parOneOf = function parOneOf(dictParallel) {
  return function (dictAlternative) {
    return function (dictFoldable) {
      return function (dictFunctor) {
        var $32 = Control_Parallel_Class.sequential(dictParallel);
        var $33 = Data_Foldable.oneOfMap(dictFoldable)(dictAlternative.Plus1())(Control_Parallel_Class.parallel(dictParallel));
        return function ($34) {
          return $32($33($34));
        };
      };
    };
  };
};

var parApply = function parApply(dictParallel) {
  return function (mf) {
    return function (ma) {
      return Control_Parallel_Class.sequential(dictParallel)(Control_Apply.apply(dictParallel.Applicative1().Apply0())(Control_Parallel_Class.parallel(dictParallel)(mf))(Control_Parallel_Class.parallel(dictParallel)(ma)));
    };
  };
};

module.exports = {
  parApply: parApply,
  parTraverse: parTraverse,
  parTraverse_: parTraverse_,
  parSequence: parSequence,
  parSequence_: parSequence_,
  parOneOf: parOneOf,
  parOneOfMap: parOneOfMap,
  ParCont: Control_Parallel_Class.ParCont,
  parallel: Control_Parallel_Class.parallel,
  sequential: Control_Parallel_Class.sequential
};
},{"../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Category/index.js":"output/Control.Category/index.js","../Control.Parallel.Class/index.js":"output/Control.Parallel.Class/index.js","../Data.Foldable/index.js":"output/Data.Foldable/index.js","../Data.Traversable/index.js":"output/Data.Traversable/index.js"}],"output/Data.Time.Duration/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Control_Category = require("../Control.Category/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ring = require("../Data.Ring/index.js");

var Data_Show = require("../Data.Show/index.js");

var Seconds = function Seconds(x) {
  return x;
};

var Minutes = function Minutes(x) {
  return x;
};

var Milliseconds = function Milliseconds(x) {
  return x;
};

var Hours = function Hours(x) {
  return x;
};

var Days = function Days(x) {
  return x;
};

var toDuration = function toDuration(dict) {
  return dict.toDuration;
};

var showSeconds = {
  show: function show(v) {
    return "(Seconds " + (Data_Show.show(Data_Show.showNumber)(v) + ")");
  }
};
var showMinutes = {
  show: function show(v) {
    return "(Minutes " + (Data_Show.show(Data_Show.showNumber)(v) + ")");
  }
};
var showMilliseconds = {
  show: function show(v) {
    return "(Milliseconds " + (Data_Show.show(Data_Show.showNumber)(v) + ")");
  }
};
var showHours = {
  show: function show(v) {
    return "(Hours " + (Data_Show.show(Data_Show.showNumber)(v) + ")");
  }
};
var showDays = {
  show: function show(v) {
    return "(Days " + (Data_Show.show(Data_Show.showNumber)(v) + ")");
  }
};
var semigroupSeconds = {
  append: function append(v) {
    return function (v1) {
      return v + v1;
    };
  }
};
var semigroupMinutes = {
  append: function append(v) {
    return function (v1) {
      return v + v1;
    };
  }
};
var semigroupMilliseconds = {
  append: function append(v) {
    return function (v1) {
      return v + v1;
    };
  }
};
var semigroupHours = {
  append: function append(v) {
    return function (v1) {
      return v + v1;
    };
  }
};
var semigroupDays = {
  append: function append(v) {
    return function (v1) {
      return v + v1;
    };
  }
};
var ordSeconds = Data_Ord.ordNumber;
var ordMinutes = Data_Ord.ordNumber;
var ordMilliseconds = Data_Ord.ordNumber;
var ordHours = Data_Ord.ordNumber;
var ordDays = Data_Ord.ordNumber;
var newtypeSeconds = {
  Coercible0: function Coercible0() {
    return undefined;
  }
};
var newtypeMinutes = {
  Coercible0: function Coercible0() {
    return undefined;
  }
};
var newtypeMilliseconds = {
  Coercible0: function Coercible0() {
    return undefined;
  }
};
var newtypeHours = {
  Coercible0: function Coercible0() {
    return undefined;
  }
};
var newtypeDays = {
  Coercible0: function Coercible0() {
    return undefined;
  }
};
var monoidSeconds = {
  mempty: 0.0,
  Semigroup0: function Semigroup0() {
    return semigroupSeconds;
  }
};
var monoidMinutes = {
  mempty: 0.0,
  Semigroup0: function Semigroup0() {
    return semigroupMinutes;
  }
};
var monoidMilliseconds = {
  mempty: 0.0,
  Semigroup0: function Semigroup0() {
    return semigroupMilliseconds;
  }
};
var monoidHours = {
  mempty: 0.0,
  Semigroup0: function Semigroup0() {
    return semigroupHours;
  }
};
var monoidDays = {
  mempty: 0.0,
  Semigroup0: function Semigroup0() {
    return semigroupDays;
  }
};

var fromDuration = function fromDuration(dict) {
  return dict.fromDuration;
};

var negateDuration = function negateDuration(dictDuration) {
  var $43 = toDuration(dictDuration);
  var $44 = Data_Newtype.over()()(Milliseconds)(Data_Ring.negate(Data_Ring.ringNumber));
  var $45 = fromDuration(dictDuration);
  return function ($46) {
    return $43($44($45($46)));
  };
};

var eqSeconds = Data_Eq.eqNumber;
var eqMinutes = Data_Eq.eqNumber;
var eqMilliseconds = Data_Eq.eqNumber;
var eqHours = Data_Eq.eqNumber;
var eqDays = Data_Eq.eqNumber;
var durationSeconds = {
  fromDuration: Data_Newtype.over()()(Seconds)(function (v) {
    return v * 1000.0;
  }),
  toDuration: Data_Newtype.over()()(Milliseconds)(function (v) {
    return v / 1000.0;
  })
};
var durationMinutes = {
  fromDuration: Data_Newtype.over()()(Minutes)(function (v) {
    return v * 60000.0;
  }),
  toDuration: Data_Newtype.over()()(Milliseconds)(function (v) {
    return v / 60000.0;
  })
};
var durationMilliseconds = {
  fromDuration: Control_Category.identity(Control_Category.categoryFn),
  toDuration: Control_Category.identity(Control_Category.categoryFn)
};
var durationHours = {
  fromDuration: Data_Newtype.over()()(Hours)(function (v) {
    return v * 3600000.0;
  }),
  toDuration: Data_Newtype.over()()(Milliseconds)(function (v) {
    return v / 3600000.0;
  })
};
var durationDays = {
  fromDuration: Data_Newtype.over()()(Days)(function (v) {
    return v * 8.64e7;
  }),
  toDuration: Data_Newtype.over()()(Milliseconds)(function (v) {
    return v / 8.64e7;
  })
};

var convertDuration = function convertDuration(dictDuration) {
  return function (dictDuration1) {
    var $47 = toDuration(dictDuration1);
    var $48 = fromDuration(dictDuration);
    return function ($49) {
      return $47($48($49));
    };
  };
};

module.exports = {
  fromDuration: fromDuration,
  toDuration: toDuration,
  Milliseconds: Milliseconds,
  Seconds: Seconds,
  Minutes: Minutes,
  Hours: Hours,
  Days: Days,
  convertDuration: convertDuration,
  negateDuration: negateDuration,
  newtypeMilliseconds: newtypeMilliseconds,
  eqMilliseconds: eqMilliseconds,
  ordMilliseconds: ordMilliseconds,
  semigroupMilliseconds: semigroupMilliseconds,
  monoidMilliseconds: monoidMilliseconds,
  showMilliseconds: showMilliseconds,
  newtypeSeconds: newtypeSeconds,
  eqSeconds: eqSeconds,
  ordSeconds: ordSeconds,
  semigroupSeconds: semigroupSeconds,
  monoidSeconds: monoidSeconds,
  showSeconds: showSeconds,
  newtypeMinutes: newtypeMinutes,
  eqMinutes: eqMinutes,
  ordMinutes: ordMinutes,
  semigroupMinutes: semigroupMinutes,
  monoidMinutes: monoidMinutes,
  showMinutes: showMinutes,
  newtypeHours: newtypeHours,
  eqHours: eqHours,
  ordHours: ordHours,
  semigroupHours: semigroupHours,
  monoidHours: monoidHours,
  showHours: showHours,
  newtypeDays: newtypeDays,
  eqDays: eqDays,
  ordDays: ordDays,
  semigroupDays: semigroupDays,
  monoidDays: monoidDays,
  showDays: showDays,
  durationMilliseconds: durationMilliseconds,
  durationSeconds: durationSeconds,
  durationMinutes: durationMinutes,
  durationHours: durationHours,
  durationDays: durationDays
};
},{"../Control.Category/index.js":"output/Control.Category/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ring/index.js":"output/Data.Ring/index.js","../Data.Show/index.js":"output/Data.Show/index.js"}],"output/Effect.Unsafe/foreign.js":[function(require,module,exports) {
"use strict";

exports.unsafePerformEffect = function (f) {
  return f();
};
},{}],"output/Effect.Unsafe/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

module.exports = {
  unsafePerformEffect: $foreign.unsafePerformEffect
};
},{"./foreign.js":"output/Effect.Unsafe/foreign.js"}],"output/Effect.Aff/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");

var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");

var Control_Parallel = require("../Control.Parallel/index.js");

var Control_Parallel_Class = require("../Control.Parallel.Class/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Time_Duration = require("../Data.Time.Duration/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Effect = require("../Effect/index.js");

var Effect_Class = require("../Effect.Class/index.js");

var Effect_Exception = require("../Effect.Exception/index.js");

var Effect_Unsafe = require("../Effect.Unsafe/index.js");

var Partial_Unsafe = require("../Partial.Unsafe/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Fiber = function Fiber(x) {
  return x;
};

var FFIUtil = function FFIUtil(x) {
  return x;
};

var Canceler = function Canceler(x) {
  return x;
};

var suspendAff = $foreign["_fork"](false);
var newtypeCanceler = {
  Coercible0: function Coercible0() {
    return undefined;
  }
};
var functorParAff = {
  map: $foreign["_parAffMap"]
};
var functorAff = {
  map: $foreign["_map"]
};
var forkAff = $foreign["_fork"](true);

var ffiUtil = function () {
  var unsafeFromRight = function unsafeFromRight(v) {
    if (v instanceof Data_Either.Right) {
      return v.value0;
    }

    ;

    if (v instanceof Data_Either.Left) {
      return Partial_Unsafe.unsafeCrashWith("unsafeFromRight: Left");
    }

    ;
    throw new Error("Failed pattern match at Effect.Aff (line 404, column 21 - line 406, column 54): " + [v.constructor.name]);
  };

  var unsafeFromLeft = function unsafeFromLeft(v) {
    if (v instanceof Data_Either.Left) {
      return v.value0;
    }

    ;

    if (v instanceof Data_Either.Right) {
      return Partial_Unsafe.unsafeCrashWith("unsafeFromLeft: Right");
    }

    ;
    throw new Error("Failed pattern match at Effect.Aff (line 399, column 20 - line 401, column 54): " + [v.constructor.name]);
  };

  var isLeft = function isLeft(v) {
    if (v instanceof Data_Either.Left) {
      return true;
    }

    ;

    if (v instanceof Data_Either.Right) {
      return false;
    }

    ;
    throw new Error("Failed pattern match at Effect.Aff (line 394, column 12 - line 396, column 20): " + [v.constructor.name]);
  };

  return {
    isLeft: isLeft,
    fromLeft: unsafeFromLeft,
    fromRight: unsafeFromRight,
    left: Data_Either.Left.create,
    right: Data_Either.Right.create
  };
}();

var makeFiber = function makeFiber(aff) {
  return $foreign["_makeFiber"](ffiUtil, aff);
};

var launchAff = function launchAff(aff) {
  return function __do() {
    var fiber = makeFiber(aff)();
    fiber.run();
    return fiber;
  };
};

var launchAff_ = function () {
  var $40 = Data_Functor["void"](Effect.functorEffect);
  return function ($41) {
    return $40(launchAff($41));
  };
}();

var launchSuspendedAff = makeFiber;

var delay = function delay(v) {
  return $foreign["_delay"](Data_Either.Right.create, v);
};

var bracket = function bracket(acquire) {
  return function (completed) {
    return $foreign.generalBracket(acquire)({
      killed: Data_Function["const"](completed),
      failed: Data_Function["const"](completed),
      completed: Data_Function["const"](completed)
    });
  };
};

var applyParAff = {
  apply: $foreign["_parAffApply"],
  Functor0: function Functor0() {
    return functorParAff;
  }
};

var semigroupParAff = function semigroupParAff(dictSemigroup) {
  return {
    append: Control_Apply.lift2(applyParAff)(Data_Semigroup.append(dictSemigroup))
  };
};

var monadAff = {
  Applicative0: function Applicative0() {
    return applicativeAff;
  },
  Bind1: function Bind1() {
    return bindAff;
  }
};
var bindAff = {
  bind: $foreign["_bind"],
  Apply0: function Apply0() {
    return applyAff;
  }
};
var applyAff = {
  apply: Control_Monad.ap(monadAff),
  Functor0: function Functor0() {
    return functorAff;
  }
};
var applicativeAff = {
  pure: $foreign["_pure"],
  Apply0: function Apply0() {
    return applyAff;
  }
};

var cancelWith = function cancelWith(aff) {
  return function (v) {
    return $foreign.generalBracket(Control_Applicative.pure(applicativeAff)(Data_Unit.unit))({
      killed: function killed(e) {
        return function (v1) {
          return v(e);
        };
      },
      failed: Data_Function["const"](Control_Applicative.pure(applicativeAff)),
      completed: Data_Function["const"](Control_Applicative.pure(applicativeAff))
    })(Data_Function["const"](aff));
  };
};

var $$finally = function $$finally(fin) {
  return function (a) {
    return bracket(Control_Applicative.pure(applicativeAff)(Data_Unit.unit))(Data_Function["const"](fin))(Data_Function["const"](a));
  };
};

var invincible = function invincible(a) {
  return bracket(a)(Data_Function["const"](Control_Applicative.pure(applicativeAff)(Data_Unit.unit)))(Control_Applicative.pure(applicativeAff));
};

var lazyAff = {
  defer: function defer(f) {
    return Control_Bind.bind(bindAff)(Control_Applicative.pure(applicativeAff)(Data_Unit.unit))(f);
  }
};

var semigroupAff = function semigroupAff(dictSemigroup) {
  return {
    append: Control_Apply.lift2(applyAff)(Data_Semigroup.append(dictSemigroup))
  };
};

var monadEffectAff = {
  liftEffect: $foreign["_liftEffect"],
  Monad0: function Monad0() {
    return monadAff;
  }
};

var effectCanceler = function () {
  var $42 = Effect_Class.liftEffect(monadEffectAff);
  return function ($43) {
    return Canceler(Data_Function["const"]($42($43)));
  };
}();

var joinFiber = function joinFiber(v) {
  return $foreign.makeAff(function (k) {
    return Data_Functor.map(Effect.functorEffect)(effectCanceler)(v.join(k));
  });
};

var functorFiber = {
  map: function map(f) {
    return function (t) {
      return Effect_Unsafe.unsafePerformEffect(makeFiber(Data_Functor.map(functorAff)(f)(joinFiber(t))));
    };
  }
};
var applyFiber = {
  apply: function apply(t1) {
    return function (t2) {
      return Effect_Unsafe.unsafePerformEffect(makeFiber(Control_Apply.apply(applyAff)(joinFiber(t1))(joinFiber(t2))));
    };
  },
  Functor0: function Functor0() {
    return functorFiber;
  }
};
var applicativeFiber = {
  pure: function pure(a) {
    return Effect_Unsafe.unsafePerformEffect(makeFiber(Control_Applicative.pure(applicativeAff)(a)));
  },
  Apply0: function Apply0() {
    return applyFiber;
  }
};

var killFiber = function killFiber(e) {
  return function (v) {
    return Control_Bind.bind(bindAff)(Effect_Class.liftEffect(monadEffectAff)(v.isSuspended))(function (v1) {
      if (v1) {
        return Effect_Class.liftEffect(monadEffectAff)(Data_Functor["void"](Effect.functorEffect)(v.kill(e, Data_Function["const"](Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit)))));
      }

      ;
      return $foreign.makeAff(function (k) {
        return Data_Functor.map(Effect.functorEffect)(effectCanceler)(v.kill(e, k));
      });
    });
  };
};

var fiberCanceler = function () {
  var $44 = Data_Function.flip(killFiber);
  return function ($45) {
    return Canceler($44($45));
  };
}();

var monadThrowAff = {
  throwError: $foreign["_throwError"],
  Monad0: function Monad0() {
    return monadAff;
  }
};
var monadErrorAff = {
  catchError: $foreign["_catchError"],
  MonadThrow0: function MonadThrow0() {
    return monadThrowAff;
  }
};
var attempt = Control_Monad_Error_Class["try"](monadErrorAff);

var runAff = function runAff(k) {
  return function (aff) {
    return launchAff(Control_Bind.bindFlipped(bindAff)(function () {
      var $46 = Effect_Class.liftEffect(monadEffectAff);
      return function ($47) {
        return $46(k($47));
      };
    }())(Control_Monad_Error_Class["try"](monadErrorAff)(aff)));
  };
};

var runAff_ = function runAff_(k) {
  return function (aff) {
    return Data_Functor["void"](Effect.functorEffect)(runAff(k)(aff));
  };
};

var runSuspendedAff = function runSuspendedAff(k) {
  return function (aff) {
    return launchSuspendedAff(Control_Bind.bindFlipped(bindAff)(function () {
      var $48 = Effect_Class.liftEffect(monadEffectAff);
      return function ($49) {
        return $48(k($49));
      };
    }())(Control_Monad_Error_Class["try"](monadErrorAff)(aff)));
  };
};

var parallelAff = {
  parallel: Unsafe_Coerce.unsafeCoerce,
  sequential: $foreign["_sequential"],
  Monad0: function Monad0() {
    return monadAff;
  },
  Applicative1: function Applicative1() {
    return applicativeParAff;
  }
};
var applicativeParAff = {
  pure: function () {
    var $50 = Control_Parallel_Class.parallel(parallelAff);
    var $51 = Control_Applicative.pure(applicativeAff);
    return function ($52) {
      return $50($51($52));
    };
  }(),
  Apply0: function Apply0() {
    return applyParAff;
  }
};

var monoidParAff = function monoidParAff(dictMonoid) {
  return {
    mempty: Control_Applicative.pure(applicativeParAff)(Data_Monoid.mempty(dictMonoid)),
    Semigroup0: function Semigroup0() {
      return semigroupParAff(dictMonoid.Semigroup0());
    }
  };
};

var semigroupCanceler = {
  append: function append(v) {
    return function (v1) {
      return function (err) {
        return Control_Parallel.parSequence_(parallelAff)(Data_Foldable.foldableArray)([v(err), v1(err)]);
      };
    };
  }
};

var supervise = function supervise(aff) {
  var killError = Effect_Exception.error("[Aff] Child fiber outlived parent");

  var killAll = function killAll(err) {
    return function (sup) {
      return $foreign.makeAff(function (k) {
        return $foreign["_killAll"](err, sup.supervisor, k(Control_Applicative.pure(Data_Either.applicativeEither)(Data_Unit.unit)));
      });
    };
  };

  var acquire = function __do() {
    var sup = $foreign["_makeSupervisedFiber"](ffiUtil, aff)();
    sup.fiber.run();
    return sup;
  };

  return $foreign.generalBracket(Effect_Class.liftEffect(monadEffectAff)(acquire))({
    killed: function killed(err) {
      return function (sup) {
        return Control_Parallel.parSequence_(parallelAff)(Data_Foldable.foldableArray)([killFiber(err)(sup.fiber), killAll(err)(sup)]);
      };
    },
    failed: Data_Function["const"](killAll(killError)),
    completed: Data_Function["const"](killAll(killError))
  })(function ($53) {
    return joinFiber(function (v) {
      return v.fiber;
    }($53));
  });
};

var monadRecAff = {
  tailRecM: function tailRecM(k) {
    var go = function go(a) {
      return Control_Bind.bind(bindAff)(k(a))(function (res) {
        if (res instanceof Control_Monad_Rec_Class.Done) {
          return Control_Applicative.pure(applicativeAff)(res.value0);
        }

        ;

        if (res instanceof Control_Monad_Rec_Class.Loop) {
          return go(res.value0);
        }

        ;
        throw new Error("Failed pattern match at Effect.Aff (line 102, column 7 - line 104, column 22): " + [res.constructor.name]);
      });
    };

    return go;
  },
  Monad0: function Monad0() {
    return monadAff;
  }
};

var monoidAff = function monoidAff(dictMonoid) {
  return {
    mempty: Control_Applicative.pure(applicativeAff)(Data_Monoid.mempty(dictMonoid)),
    Semigroup0: function Semigroup0() {
      return semigroupAff(dictMonoid.Semigroup0());
    }
  };
};

var nonCanceler = Data_Function["const"](Control_Applicative.pure(applicativeAff)(Data_Unit.unit));
var monoidCanceler = {
  mempty: nonCanceler,
  Semigroup0: function Semigroup0() {
    return semigroupCanceler;
  }
};
var never = $foreign.makeAff(function (v) {
  return Control_Applicative.pure(Effect.applicativeEffect)(Data_Monoid.mempty(monoidCanceler));
});

var apathize = function () {
  var $54 = Data_Functor.map(functorAff)(Data_Function["const"](Data_Unit.unit));
  return function ($55) {
    return $54(attempt($55));
  };
}();

var altParAff = {
  alt: $foreign["_parAffAlt"],
  Functor0: function Functor0() {
    return functorParAff;
  }
};
var altAff = {
  alt: function alt(a1) {
    return function (a2) {
      return Control_Monad_Error_Class.catchError(monadErrorAff)(a1)(Data_Function["const"](a2));
    };
  },
  Functor0: function Functor0() {
    return functorAff;
  }
};
var plusAff = {
  empty: Control_Monad_Error_Class.throwError(monadThrowAff)(Effect_Exception.error("Always fails")),
  Alt0: function Alt0() {
    return altAff;
  }
};
var plusParAff = {
  empty: Control_Parallel_Class.parallel(parallelAff)(Control_Plus.empty(plusAff)),
  Alt0: function Alt0() {
    return altParAff;
  }
};
var alternativeParAff = {
  Applicative0: function Applicative0() {
    return applicativeParAff;
  },
  Plus1: function Plus1() {
    return plusParAff;
  }
};
module.exports = {
  Canceler: Canceler,
  launchAff: launchAff,
  launchAff_: launchAff_,
  launchSuspendedAff: launchSuspendedAff,
  runAff: runAff,
  runAff_: runAff_,
  runSuspendedAff: runSuspendedAff,
  forkAff: forkAff,
  suspendAff: suspendAff,
  supervise: supervise,
  attempt: attempt,
  apathize: apathize,
  delay: delay,
  never: never,
  "finally": $$finally,
  invincible: invincible,
  killFiber: killFiber,
  joinFiber: joinFiber,
  cancelWith: cancelWith,
  bracket: bracket,
  nonCanceler: nonCanceler,
  effectCanceler: effectCanceler,
  fiberCanceler: fiberCanceler,
  functorAff: functorAff,
  applyAff: applyAff,
  applicativeAff: applicativeAff,
  bindAff: bindAff,
  monadAff: monadAff,
  semigroupAff: semigroupAff,
  monoidAff: monoidAff,
  altAff: altAff,
  plusAff: plusAff,
  monadRecAff: monadRecAff,
  monadThrowAff: monadThrowAff,
  monadErrorAff: monadErrorAff,
  monadEffectAff: monadEffectAff,
  lazyAff: lazyAff,
  functorParAff: functorParAff,
  applyParAff: applyParAff,
  applicativeParAff: applicativeParAff,
  semigroupParAff: semigroupParAff,
  monoidParAff: monoidParAff,
  altParAff: altParAff,
  plusParAff: plusParAff,
  alternativeParAff: alternativeParAff,
  parallelAff: parallelAff,
  functorFiber: functorFiber,
  applyFiber: applyFiber,
  applicativeFiber: applicativeFiber,
  newtypeCanceler: newtypeCanceler,
  semigroupCanceler: semigroupCanceler,
  monoidCanceler: monoidCanceler,
  makeAff: $foreign.makeAff,
  generalBracket: $foreign.generalBracket,
  catchError: Control_Monad_Error_Class.catchError,
  throwError: Control_Monad_Error_Class.throwError,
  "try": Control_Monad_Error_Class["try"],
  parallel: Control_Parallel_Class.parallel,
  sequential: Control_Parallel_Class.sequential,
  Milliseconds: Data_Time_Duration.Milliseconds,
  error: Effect_Exception.error,
  message: Effect_Exception.message
};
},{"./foreign.js":"output/Effect.Aff/foreign.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Monad/index.js":"output/Control.Monad/index.js","../Control.Monad.Error.Class/index.js":"output/Control.Monad.Error.Class/index.js","../Control.Monad.Rec.Class/index.js":"output/Control.Monad.Rec.Class/index.js","../Control.Parallel/index.js":"output/Control.Parallel/index.js","../Control.Parallel.Class/index.js":"output/Control.Parallel.Class/index.js","../Control.Plus/index.js":"output/Control.Plus/index.js","../Data.Either/index.js":"output/Data.Either/index.js","../Data.Foldable/index.js":"output/Data.Foldable/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Monoid/index.js":"output/Data.Monoid/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Time.Duration/index.js":"output/Data.Time.Duration/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Effect/index.js":"output/Effect/index.js","../Effect.Class/index.js":"output/Effect.Class/index.js","../Effect.Exception/index.js":"output/Effect.Exception/index.js","../Effect.Unsafe/index.js":"output/Effect.Unsafe/index.js","../Partial.Unsafe/index.js":"output/Partial.Unsafe/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js"}],"output/Effect.Uncurried/foreign.js":[function(require,module,exports) {
"use strict";

exports.mkEffectFn1 = function mkEffectFn1(fn) {
  return function (x) {
    return fn(x)();
  };
};

exports.mkEffectFn2 = function mkEffectFn2(fn) {
  return function (a, b) {
    return fn(a)(b)();
  };
};

exports.mkEffectFn3 = function mkEffectFn3(fn) {
  return function (a, b, c) {
    return fn(a)(b)(c)();
  };
};

exports.mkEffectFn4 = function mkEffectFn4(fn) {
  return function (a, b, c, d) {
    return fn(a)(b)(c)(d)();
  };
};

exports.mkEffectFn5 = function mkEffectFn5(fn) {
  return function (a, b, c, d, e) {
    return fn(a)(b)(c)(d)(e)();
  };
};

exports.mkEffectFn6 = function mkEffectFn6(fn) {
  return function (a, b, c, d, e, f) {
    return fn(a)(b)(c)(d)(e)(f)();
  };
};

exports.mkEffectFn7 = function mkEffectFn7(fn) {
  return function (a, b, c, d, e, f, g) {
    return fn(a)(b)(c)(d)(e)(f)(g)();
  };
};

exports.mkEffectFn8 = function mkEffectFn8(fn) {
  return function (a, b, c, d, e, f, g, h) {
    return fn(a)(b)(c)(d)(e)(f)(g)(h)();
  };
};

exports.mkEffectFn9 = function mkEffectFn9(fn) {
  return function (a, b, c, d, e, f, g, h, i) {
    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i)();
  };
};

exports.mkEffectFn10 = function mkEffectFn10(fn) {
  return function (a, b, c, d, e, f, g, h, i, j) {
    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i)(j)();
  };
};

exports.runEffectFn1 = function runEffectFn1(fn) {
  return function (a) {
    return function () {
      return fn(a);
    };
  };
};

exports.runEffectFn2 = function runEffectFn2(fn) {
  return function (a) {
    return function (b) {
      return function () {
        return fn(a, b);
      };
    };
  };
};

exports.runEffectFn3 = function runEffectFn3(fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function () {
          return fn(a, b, c);
        };
      };
    };
  };
};

exports.runEffectFn4 = function runEffectFn4(fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function () {
            return fn(a, b, c, d);
          };
        };
      };
    };
  };
};

exports.runEffectFn5 = function runEffectFn5(fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function () {
              return fn(a, b, c, d, e);
            };
          };
        };
      };
    };
  };
};

exports.runEffectFn6 = function runEffectFn6(fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function () {
                return fn(a, b, c, d, e, f);
              };
            };
          };
        };
      };
    };
  };
};

exports.runEffectFn7 = function runEffectFn7(fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return function () {
                  return fn(a, b, c, d, e, f, g);
                };
              };
            };
          };
        };
      };
    };
  };
};

exports.runEffectFn8 = function runEffectFn8(fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return function (h) {
                  return function () {
                    return fn(a, b, c, d, e, f, g, h);
                  };
                };
              };
            };
          };
        };
      };
    };
  };
};

exports.runEffectFn9 = function runEffectFn9(fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return function (h) {
                  return function (i) {
                    return function () {
                      return fn(a, b, c, d, e, f, g, h, i);
                    };
                  };
                };
              };
            };
          };
        };
      };
    };
  };
};

exports.runEffectFn10 = function runEffectFn10(fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return function (h) {
                  return function (i) {
                    return function (j) {
                      return function () {
                        return fn(a, b, c, d, e, f, g, h, i, j);
                      };
                    };
                  };
                };
              };
            };
          };
        };
      };
    };
  };
};
},{}],"output/Effect.Uncurried/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Effect = require("../Effect/index.js");

var semigroupEffectFn9 = function semigroupEffectFn9(dictSemigroup) {
  return {
    append: function append(f1) {
      return function (f2) {
        return $foreign.mkEffectFn9(function (a) {
          return function (b) {
            return function (c) {
              return function (d) {
                return function (e) {
                  return function (f) {
                    return function (g) {
                      return function (h) {
                        return function (i) {
                          return Data_Semigroup.append(Effect.semigroupEffect(dictSemigroup))($foreign.runEffectFn9(f1)(a)(b)(c)(d)(e)(f)(g)(h)(i))($foreign.runEffectFn9(f2)(a)(b)(c)(d)(e)(f)(g)(h)(i));
                        };
                      };
                    };
                  };
                };
              };
            };
          };
        });
      };
    }
  };
};

var semigroupEffectFn8 = function semigroupEffectFn8(dictSemigroup) {
  return {
    append: function append(f1) {
      return function (f2) {
        return $foreign.mkEffectFn8(function (a) {
          return function (b) {
            return function (c) {
              return function (d) {
                return function (e) {
                  return function (f) {
                    return function (g) {
                      return function (h) {
                        return Data_Semigroup.append(Effect.semigroupEffect(dictSemigroup))($foreign.runEffectFn8(f1)(a)(b)(c)(d)(e)(f)(g)(h))($foreign.runEffectFn8(f2)(a)(b)(c)(d)(e)(f)(g)(h));
                      };
                    };
                  };
                };
              };
            };
          };
        });
      };
    }
  };
};

var semigroupEffectFn7 = function semigroupEffectFn7(dictSemigroup) {
  return {
    append: function append(f1) {
      return function (f2) {
        return $foreign.mkEffectFn7(function (a) {
          return function (b) {
            return function (c) {
              return function (d) {
                return function (e) {
                  return function (f) {
                    return function (g) {
                      return Data_Semigroup.append(Effect.semigroupEffect(dictSemigroup))($foreign.runEffectFn7(f1)(a)(b)(c)(d)(e)(f)(g))($foreign.runEffectFn7(f2)(a)(b)(c)(d)(e)(f)(g));
                    };
                  };
                };
              };
            };
          };
        });
      };
    }
  };
};

var semigroupEffectFn6 = function semigroupEffectFn6(dictSemigroup) {
  return {
    append: function append(f1) {
      return function (f2) {
        return $foreign.mkEffectFn6(function (a) {
          return function (b) {
            return function (c) {
              return function (d) {
                return function (e) {
                  return function (f) {
                    return Data_Semigroup.append(Effect.semigroupEffect(dictSemigroup))($foreign.runEffectFn6(f1)(a)(b)(c)(d)(e)(f))($foreign.runEffectFn6(f2)(a)(b)(c)(d)(e)(f));
                  };
                };
              };
            };
          };
        });
      };
    }
  };
};

var semigroupEffectFn5 = function semigroupEffectFn5(dictSemigroup) {
  return {
    append: function append(f1) {
      return function (f2) {
        return $foreign.mkEffectFn5(function (a) {
          return function (b) {
            return function (c) {
              return function (d) {
                return function (e) {
                  return Data_Semigroup.append(Effect.semigroupEffect(dictSemigroup))($foreign.runEffectFn5(f1)(a)(b)(c)(d)(e))($foreign.runEffectFn5(f2)(a)(b)(c)(d)(e));
                };
              };
            };
          };
        });
      };
    }
  };
};

var semigroupEffectFn4 = function semigroupEffectFn4(dictSemigroup) {
  return {
    append: function append(f1) {
      return function (f2) {
        return $foreign.mkEffectFn4(function (a) {
          return function (b) {
            return function (c) {
              return function (d) {
                return Data_Semigroup.append(Effect.semigroupEffect(dictSemigroup))($foreign.runEffectFn4(f1)(a)(b)(c)(d))($foreign.runEffectFn4(f2)(a)(b)(c)(d));
              };
            };
          };
        });
      };
    }
  };
};

var semigroupEffectFn3 = function semigroupEffectFn3(dictSemigroup) {
  return {
    append: function append(f1) {
      return function (f2) {
        return $foreign.mkEffectFn3(function (a) {
          return function (b) {
            return function (c) {
              return Data_Semigroup.append(Effect.semigroupEffect(dictSemigroup))($foreign.runEffectFn3(f1)(a)(b)(c))($foreign.runEffectFn3(f2)(a)(b)(c));
            };
          };
        });
      };
    }
  };
};

var semigroupEffectFn2 = function semigroupEffectFn2(dictSemigroup) {
  return {
    append: function append(f1) {
      return function (f2) {
        return $foreign.mkEffectFn2(function (a) {
          return function (b) {
            return Data_Semigroup.append(Effect.semigroupEffect(dictSemigroup))($foreign.runEffectFn2(f1)(a)(b))($foreign.runEffectFn2(f2)(a)(b));
          };
        });
      };
    }
  };
};

var semigroupEffectFn10 = function semigroupEffectFn10(dictSemigroup) {
  return {
    append: function append(f1) {
      return function (f2) {
        return $foreign.mkEffectFn10(function (a) {
          return function (b) {
            return function (c) {
              return function (d) {
                return function (e) {
                  return function (f) {
                    return function (g) {
                      return function (h) {
                        return function (i) {
                          return function (j) {
                            return Data_Semigroup.append(Effect.semigroupEffect(dictSemigroup))($foreign.runEffectFn10(f1)(a)(b)(c)(d)(e)(f)(g)(h)(i)(j))($foreign.runEffectFn10(f2)(a)(b)(c)(d)(e)(f)(g)(h)(i)(j));
                          };
                        };
                      };
                    };
                  };
                };
              };
            };
          };
        });
      };
    }
  };
};

var semigroupEffectFn1 = function semigroupEffectFn1(dictSemigroup) {
  return {
    append: function append(f1) {
      return function (f2) {
        return $foreign.mkEffectFn1(function (a) {
          return Data_Semigroup.append(Effect.semigroupEffect(dictSemigroup))($foreign.runEffectFn1(f1)(a))($foreign.runEffectFn1(f2)(a));
        });
      };
    }
  };
};

var monoidEffectFn9 = function monoidEffectFn9(dictMonoid) {
  return {
    mempty: $foreign.mkEffectFn9(function (v) {
      return function (v1) {
        return function (v2) {
          return function (v3) {
            return function (v4) {
              return function (v5) {
                return function (v6) {
                  return function (v7) {
                    return function (v8) {
                      return Data_Monoid.mempty(Effect.monoidEffect(dictMonoid));
                    };
                  };
                };
              };
            };
          };
        };
      };
    }),
    Semigroup0: function Semigroup0() {
      return semigroupEffectFn9(dictMonoid.Semigroup0());
    }
  };
};

var monoidEffectFn8 = function monoidEffectFn8(dictMonoid) {
  return {
    mempty: $foreign.mkEffectFn8(function (v) {
      return function (v1) {
        return function (v2) {
          return function (v3) {
            return function (v4) {
              return function (v5) {
                return function (v6) {
                  return function (v7) {
                    return Data_Monoid.mempty(Effect.monoidEffect(dictMonoid));
                  };
                };
              };
            };
          };
        };
      };
    }),
    Semigroup0: function Semigroup0() {
      return semigroupEffectFn8(dictMonoid.Semigroup0());
    }
  };
};

var monoidEffectFn7 = function monoidEffectFn7(dictMonoid) {
  return {
    mempty: $foreign.mkEffectFn7(function (v) {
      return function (v1) {
        return function (v2) {
          return function (v3) {
            return function (v4) {
              return function (v5) {
                return function (v6) {
                  return Data_Monoid.mempty(Effect.monoidEffect(dictMonoid));
                };
              };
            };
          };
        };
      };
    }),
    Semigroup0: function Semigroup0() {
      return semigroupEffectFn7(dictMonoid.Semigroup0());
    }
  };
};

var monoidEffectFn6 = function monoidEffectFn6(dictMonoid) {
  return {
    mempty: $foreign.mkEffectFn6(function (v) {
      return function (v1) {
        return function (v2) {
          return function (v3) {
            return function (v4) {
              return function (v5) {
                return Data_Monoid.mempty(Effect.monoidEffect(dictMonoid));
              };
            };
          };
        };
      };
    }),
    Semigroup0: function Semigroup0() {
      return semigroupEffectFn6(dictMonoid.Semigroup0());
    }
  };
};

var monoidEffectFn5 = function monoidEffectFn5(dictMonoid) {
  return {
    mempty: $foreign.mkEffectFn5(function (v) {
      return function (v1) {
        return function (v2) {
          return function (v3) {
            return function (v4) {
              return Data_Monoid.mempty(Effect.monoidEffect(dictMonoid));
            };
          };
        };
      };
    }),
    Semigroup0: function Semigroup0() {
      return semigroupEffectFn5(dictMonoid.Semigroup0());
    }
  };
};

var monoidEffectFn4 = function monoidEffectFn4(dictMonoid) {
  return {
    mempty: $foreign.mkEffectFn4(function (v) {
      return function (v1) {
        return function (v2) {
          return function (v3) {
            return Data_Monoid.mempty(Effect.monoidEffect(dictMonoid));
          };
        };
      };
    }),
    Semigroup0: function Semigroup0() {
      return semigroupEffectFn4(dictMonoid.Semigroup0());
    }
  };
};

var monoidEffectFn3 = function monoidEffectFn3(dictMonoid) {
  return {
    mempty: $foreign.mkEffectFn3(function (v) {
      return function (v1) {
        return function (v2) {
          return Data_Monoid.mempty(Effect.monoidEffect(dictMonoid));
        };
      };
    }),
    Semigroup0: function Semigroup0() {
      return semigroupEffectFn3(dictMonoid.Semigroup0());
    }
  };
};

var monoidEffectFn2 = function monoidEffectFn2(dictMonoid) {
  return {
    mempty: $foreign.mkEffectFn2(function (v) {
      return function (v1) {
        return Data_Monoid.mempty(Effect.monoidEffect(dictMonoid));
      };
    }),
    Semigroup0: function Semigroup0() {
      return semigroupEffectFn2(dictMonoid.Semigroup0());
    }
  };
};

var monoidEffectFn10 = function monoidEffectFn10(dictMonoid) {
  return {
    mempty: $foreign.mkEffectFn10(function (v) {
      return function (v1) {
        return function (v2) {
          return function (v3) {
            return function (v4) {
              return function (v5) {
                return function (v6) {
                  return function (v7) {
                    return function (v8) {
                      return function (v9) {
                        return Data_Monoid.mempty(Effect.monoidEffect(dictMonoid));
                      };
                    };
                  };
                };
              };
            };
          };
        };
      };
    }),
    Semigroup0: function Semigroup0() {
      return semigroupEffectFn10(dictMonoid.Semigroup0());
    }
  };
};

var monoidEffectFn1 = function monoidEffectFn1(dictMonoid) {
  return {
    mempty: $foreign.mkEffectFn1(function (v) {
      return Data_Monoid.mempty(Effect.monoidEffect(dictMonoid));
    }),
    Semigroup0: function Semigroup0() {
      return semigroupEffectFn1(dictMonoid.Semigroup0());
    }
  };
};

module.exports = {
  semigroupEffectFn1: semigroupEffectFn1,
  semigroupEffectFn2: semigroupEffectFn2,
  semigroupEffectFn3: semigroupEffectFn3,
  semigroupEffectFn4: semigroupEffectFn4,
  semigroupEffectFn5: semigroupEffectFn5,
  semigroupEffectFn6: semigroupEffectFn6,
  semigroupEffectFn7: semigroupEffectFn7,
  semigroupEffectFn8: semigroupEffectFn8,
  semigroupEffectFn9: semigroupEffectFn9,
  semigroupEffectFn10: semigroupEffectFn10,
  monoidEffectFn1: monoidEffectFn1,
  monoidEffectFn2: monoidEffectFn2,
  monoidEffectFn3: monoidEffectFn3,
  monoidEffectFn4: monoidEffectFn4,
  monoidEffectFn5: monoidEffectFn5,
  monoidEffectFn6: monoidEffectFn6,
  monoidEffectFn7: monoidEffectFn7,
  monoidEffectFn8: monoidEffectFn8,
  monoidEffectFn9: monoidEffectFn9,
  monoidEffectFn10: monoidEffectFn10,
  mkEffectFn1: $foreign.mkEffectFn1,
  mkEffectFn2: $foreign.mkEffectFn2,
  mkEffectFn3: $foreign.mkEffectFn3,
  mkEffectFn4: $foreign.mkEffectFn4,
  mkEffectFn5: $foreign.mkEffectFn5,
  mkEffectFn6: $foreign.mkEffectFn6,
  mkEffectFn7: $foreign.mkEffectFn7,
  mkEffectFn8: $foreign.mkEffectFn8,
  mkEffectFn9: $foreign.mkEffectFn9,
  mkEffectFn10: $foreign.mkEffectFn10,
  runEffectFn1: $foreign.runEffectFn1,
  runEffectFn2: $foreign.runEffectFn2,
  runEffectFn3: $foreign.runEffectFn3,
  runEffectFn4: $foreign.runEffectFn4,
  runEffectFn5: $foreign.runEffectFn5,
  runEffectFn6: $foreign.runEffectFn6,
  runEffectFn7: $foreign.runEffectFn7,
  runEffectFn8: $foreign.runEffectFn8,
  runEffectFn9: $foreign.runEffectFn9,
  runEffectFn10: $foreign.runEffectFn10
};
},{"./foreign.js":"output/Effect.Uncurried/foreign.js","../Data.Monoid/index.js":"output/Data.Monoid/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Effect/index.js":"output/Effect/index.js"}],"output/Effect.Aff.Compat/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Data_Either = require("../Data.Either/index.js");

var Effect_Aff = require("../Effect.Aff/index.js");

var Effect_Uncurried = require("../Effect.Uncurried/index.js");

var EffectFnCanceler = function EffectFnCanceler(x) {
  return x;
};

var EffectFnAff = function EffectFnAff(x) {
  return x;
};

var fromEffectFnAff = function fromEffectFnAff(v) {
  return Effect_Aff.makeAff(function (k) {
    return function __do() {
      var v1 = v(function ($4) {
        return k(Data_Either.Left.create($4))();
      }, function ($5) {
        return k(Data_Either.Right.create($5))();
      });
      return function (e) {
        return Effect_Aff.makeAff(function (k2) {
          return function __do() {
            v1(e, function ($6) {
              return k2(Data_Either.Left.create($6))();
            }, function ($7) {
              return k2(Data_Either.Right.create($7))();
            });
            return Effect_Aff.nonCanceler;
          };
        });
      };
    };
  });
};

module.exports = {
  EffectFnAff: EffectFnAff,
  EffectFnCanceler: EffectFnCanceler,
  fromEffectFnAff: fromEffectFnAff,
  mkEffectFn1: Effect_Uncurried.mkEffectFn1,
  mkEffectFn2: Effect_Uncurried.mkEffectFn2,
  mkEffectFn3: Effect_Uncurried.mkEffectFn3,
  runEffectFn1: Effect_Uncurried.runEffectFn1,
  runEffectFn2: Effect_Uncurried.runEffectFn2,
  runEffectFn3: Effect_Uncurried.runEffectFn3
};
},{"../Data.Either/index.js":"output/Data.Either/index.js","../Effect.Aff/index.js":"output/Effect.Aff/index.js","../Effect.Uncurried/index.js":"output/Effect.Uncurried/index.js"}],"output/Foreign/foreign.js":[function(require,module,exports) {
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

exports.typeOf = function (value) {
  return _typeof(value);
};

exports.tagOf = function (value) {
  return Object.prototype.toString.call(value).slice(8, -1);
};

exports.isNull = function (value) {
  return value === null;
};

exports.isUndefined = function (value) {
  return value === undefined;
};

exports.isArray = Array.isArray || function (value) {
  return Object.prototype.toString.call(value) === "[object Array]";
};
},{}],"output/Data.Int/foreign.js":[function(require,module,exports) {
"use strict";

exports.fromNumberImpl = function (just) {
  return function (nothing) {
    return function (n) {
      /* jshint bitwise: false */
      return (n | 0) === n ? just(n) : nothing;
    };
  };
};

exports.toNumber = function (n) {
  return n;
};

exports.fromStringAsImpl = function (just) {
  return function (nothing) {
    return function (radix) {
      var digits;

      if (radix < 11) {
        digits = "[0-" + (radix - 1).toString() + "]";
      } else if (radix === 11) {
        digits = "[0-9a]";
      } else {
        digits = "[0-9a-" + String.fromCharCode(86 + radix) + "]";
      }

      var pattern = new RegExp("^[\\+\\-]?" + digits + "+$", "i");
      return function (s) {
        /* jshint bitwise: false */
        if (pattern.test(s)) {
          var i = parseInt(s, radix);
          return (i | 0) === i ? just(i) : nothing;
        } else {
          return nothing;
        }
      };
    };
  };
};

exports.toStringAs = function (radix) {
  return function (i) {
    return i.toString(radix);
  };
};

exports.quot = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x / y | 0;
  };
};

exports.rem = function (x) {
  return function (y) {
    return x % y;
  };
};

exports.pow = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return Math.pow(x, y) | 0;
  };
};
},{}],"output/Data.Number/foreign.js":[function(require,module,exports) {
/* globals exports */
"use strict";

exports.nan = NaN;
exports.isNaN = isNaN;
exports.infinity = Infinity;
exports.isFinite = isFinite;

exports.fromStringImpl = function (str, isFinite, just, nothing) {
  var num = parseFloat(str);

  if (isFinite(num)) {
    return just(num);
  } else {
    return nothing;
  }
};
},{}],"output/Data.Number/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var fromString = function fromString(str) {
  return $foreign.fromStringImpl(str, $foreign["isFinite"], Data_Maybe.Just.create, Data_Maybe.Nothing.value);
};

module.exports = {
  fromString: fromString,
  nan: $foreign.nan,
  "isNaN": $foreign["isNaN"],
  infinity: $foreign.infinity,
  "isFinite": $foreign["isFinite"]
};
},{"./foreign.js":"output/Data.Number/foreign.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js"}],"output/Math/foreign.js":[function(require,module,exports) {
"use strict"; // module Math

exports.abs = Math.abs;
exports.acos = Math.acos;
exports.asin = Math.asin;
exports.atan = Math.atan;

exports.atan2 = function (y) {
  return function (x) {
    return Math.atan2(y, x);
  };
};

exports.ceil = Math.ceil;
exports.cos = Math.cos;
exports.exp = Math.exp;
exports.floor = Math.floor;

function nativeImul(a) {
  return function (b) {
    return Math.imul(a, b);
  };
} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/imul


function emulatedImul(a) {
  /*jshint bitwise: false*/
  return function (b) {
    var ah = a >>> 16 & 0xffff;
    var al = a & 0xffff;
    var bh = b >>> 16 & 0xffff;
    var bl = b & 0xffff; // the shift by 0 fixes the sign on the high part
    // the final |0 converts the unsigned value into a signed value

    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
  };
}

exports.imul = Math.imul ? nativeImul : emulatedImul;

exports.trunc = Math.trunc || function (n) {
  return n < 0 ? Math.ceil(n) : Math.floor(n);
};

exports.log = Math.log;

exports.max = function (n1) {
  return function (n2) {
    return Math.max(n1, n2);
  };
};

exports.min = function (n1) {
  return function (n2) {
    return Math.min(n1, n2);
  };
};

exports.pow = function (n) {
  return function (p) {
    return Math.pow(n, p);
  };
};

exports.remainder = function (n) {
  return function (m) {
    return n % m;
  };
};

exports.round = Math.round;
exports.sin = Math.sin;
exports.sqrt = Math.sqrt;
exports.tan = Math.tan;
exports.e = Math.E;
exports.ln2 = Math.LN2;
exports.ln10 = Math.LN10;
exports.log2e = Math.LOG2E;
exports.log10e = Math.LOG10E;
exports.pi = Math.PI;
exports.tau = 2 * Math.PI;
exports.sqrt1_2 = Math.SQRT1_2;
exports.sqrt2 = Math.SQRT2;
},{}],"output/Math/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

module.exports = {
  abs: $foreign.abs,
  acos: $foreign.acos,
  asin: $foreign.asin,
  atan: $foreign.atan,
  atan2: $foreign.atan2,
  ceil: $foreign.ceil,
  cos: $foreign.cos,
  exp: $foreign.exp,
  floor: $foreign.floor,
  imul: $foreign.imul,
  log: $foreign.log,
  max: $foreign.max,
  min: $foreign.min,
  pow: $foreign.pow,
  round: $foreign.round,
  sin: $foreign.sin,
  sqrt: $foreign.sqrt,
  tan: $foreign.tan,
  trunc: $foreign.trunc,
  remainder: $foreign.remainder,
  e: $foreign.e,
  ln2: $foreign.ln2,
  ln10: $foreign.ln10,
  log2e: $foreign.log2e,
  log10e: $foreign.log10e,
  pi: $foreign.pi,
  tau: $foreign.tau,
  sqrt1_2: $foreign.sqrt1_2,
  sqrt2: $foreign.sqrt2
};
},{"./foreign.js":"output/Math/foreign.js"}],"output/Data.Int/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Control_Category = require("../Control.Category/index.js");

var Data_Boolean = require("../Data.Boolean/index.js");

var Data_Bounded = require("../Data.Bounded/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Number = require("../Data.Number/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var $$Math = require("../Math/index.js");

var Radix = function Radix(x) {
  return x;
};

var Even = function () {
  function Even() {}

  ;
  Even.value = new Even();
  return Even;
}();

var Odd = function () {
  function Odd() {}

  ;
  Odd.value = new Odd();
  return Odd;
}();

var showParity = {
  show: function show(v) {
    if (v instanceof Even) {
      return "Even";
    }

    ;

    if (v instanceof Odd) {
      return "Odd";
    }

    ;
    throw new Error("Failed pattern match at Data.Int (line 111, column 1 - line 113, column 19): " + [v.constructor.name]);
  }
};

var radix = function radix(n) {
  if (n >= 2 && n <= 36) {
    return new Data_Maybe.Just(n);
  }

  ;

  if (Data_Boolean.otherwise) {
    return Data_Maybe.Nothing.value;
  }

  ;
  throw new Error("Failed pattern match at Data.Int (line 192, column 1 - line 192, column 28): " + [n.constructor.name]);
};

var odd = function odd(x) {
  return (x & 1) !== 0;
};

var octal = 8;
var hexadecimal = 16;
var fromStringAs = $foreign.fromStringAsImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var fromString = fromStringAs(10);
var fromNumber = $foreign.fromNumberImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);

var unsafeClamp = function unsafeClamp(x) {
  if (!Data_Number["isFinite"](x)) {
    return 0;
  }

  ;

  if (x >= $foreign.toNumber(Data_Bounded.top(Data_Bounded.boundedInt))) {
    return Data_Bounded.top(Data_Bounded.boundedInt);
  }

  ;

  if (x <= $foreign.toNumber(Data_Bounded.bottom(Data_Bounded.boundedInt))) {
    return Data_Bounded.bottom(Data_Bounded.boundedInt);
  }

  ;

  if (Data_Boolean.otherwise) {
    return Data_Maybe.fromMaybe(0)(fromNumber(x));
  }

  ;
  throw new Error("Failed pattern match at Data.Int (line 66, column 1 - line 66, column 29): " + [x.constructor.name]);
};

var round = function round($23) {
  return unsafeClamp($$Math.round($23));
};

var floor = function floor($24) {
  return unsafeClamp($$Math.floor($24));
};

var even = function even(x) {
  return (x & 1) === 0;
};

var parity = function parity(n) {
  var $14 = even(n);

  if ($14) {
    return Even.value;
  }

  ;
  return Odd.value;
};

var eqParity = {
  eq: function eq(x) {
    return function (y) {
      if (x instanceof Even && y instanceof Even) {
        return true;
      }

      ;

      if (x instanceof Odd && y instanceof Odd) {
        return true;
      }

      ;
      return false;
    };
  }
};
var ordParity = {
  compare: function compare(x) {
    return function (y) {
      if (x instanceof Even && y instanceof Even) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof Even) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof Even) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof Odd && y instanceof Odd) {
        return Data_Ordering.EQ.value;
      }

      ;
      throw new Error("Failed pattern match at Data.Int (line 109, column 1 - line 109, column 40): " + [x.constructor.name, y.constructor.name]);
    };
  },
  Eq0: function Eq0() {
    return eqParity;
  }
};
var semiringParity = {
  zero: Even.value,
  add: function add(x) {
    return function (y) {
      var $19 = Data_Eq.eq(eqParity)(x)(y);

      if ($19) {
        return Even.value;
      }

      ;
      return Odd.value;
    };
  },
  one: Odd.value,
  mul: function mul(v) {
    return function (v1) {
      if (v instanceof Odd && v1 instanceof Odd) {
        return Odd.value;
      }

      ;
      return Even.value;
    };
  }
};
var ringParity = {
  sub: Data_Semiring.add(semiringParity),
  Semiring0: function Semiring0() {
    return semiringParity;
  }
};
var divisionRingParity = {
  recip: Control_Category.identity(Control_Category.categoryFn),
  Ring0: function Ring0() {
    return ringParity;
  }
};
var decimal = 10;
var commutativeRingParity = {
  Ring0: function Ring0() {
    return ringParity;
  }
};
var euclideanRingParity = {
  degree: function degree(v) {
    if (v instanceof Even) {
      return 0;
    }

    ;

    if (v instanceof Odd) {
      return 1;
    }

    ;
    throw new Error("Failed pattern match at Data.Int (line 131, column 1 - line 135, column 17): " + [v.constructor.name]);
  },
  div: function div(x) {
    return function (v) {
      return x;
    };
  },
  mod: function mod(v) {
    return function (v1) {
      return Even.value;
    };
  },
  CommutativeRing0: function CommutativeRing0() {
    return commutativeRingParity;
  }
};

var ceil = function ceil($25) {
  return unsafeClamp($$Math.ceil($25));
};

var boundedParity = {
  bottom: Even.value,
  top: Odd.value,
  Ord0: function Ord0() {
    return ordParity;
  }
};
var binary = 2;
var base36 = 36;
module.exports = {
  fromNumber: fromNumber,
  ceil: ceil,
  floor: floor,
  round: round,
  fromString: fromString,
  radix: radix,
  binary: binary,
  octal: octal,
  decimal: decimal,
  hexadecimal: hexadecimal,
  base36: base36,
  fromStringAs: fromStringAs,
  Even: Even,
  Odd: Odd,
  parity: parity,
  even: even,
  odd: odd,
  eqParity: eqParity,
  ordParity: ordParity,
  showParity: showParity,
  boundedParity: boundedParity,
  semiringParity: semiringParity,
  ringParity: ringParity,
  commutativeRingParity: commutativeRingParity,
  euclideanRingParity: euclideanRingParity,
  divisionRingParity: divisionRingParity,
  toNumber: $foreign.toNumber,
  toStringAs: $foreign.toStringAs,
  quot: $foreign.quot,
  rem: $foreign.rem,
  pow: $foreign.pow
};
},{"./foreign.js":"output/Data.Int/foreign.js","../Control.Category/index.js":"output/Control.Category/index.js","../Data.Boolean/index.js":"output/Data.Boolean/index.js","../Data.Bounded/index.js":"output/Data.Bounded/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Number/index.js":"output/Data.Number/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Data.Semiring/index.js":"output/Data.Semiring/index.js","../Math/index.js":"output/Math/index.js"}],"output/Data.String.CodeUnits/foreign.js":[function(require,module,exports) {
"use strict";

exports.fromCharArray = function (a) {
  return a.join("");
};

exports.toCharArray = function (s) {
  return s.split("");
};

exports.singleton = function (c) {
  return c;
};

exports._charAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (s) {
        return i >= 0 && i < s.length ? just(s.charAt(i)) : nothing;
      };
    };
  };
};

exports._toChar = function (just) {
  return function (nothing) {
    return function (s) {
      return s.length === 1 ? just(s) : nothing;
    };
  };
};

exports.length = function (s) {
  return s.length;
};

exports.countPrefix = function (p) {
  return function (s) {
    var i = 0;

    while (i < s.length && p(s.charAt(i))) {
      i++;
    }

    return i;
  };
};

exports._indexOf = function (just) {
  return function (nothing) {
    return function (x) {
      return function (s) {
        var i = s.indexOf(x);
        return i === -1 ? nothing : just(i);
      };
    };
  };
};

exports._indexOfStartingAt = function (just) {
  return function (nothing) {
    return function (x) {
      return function (startAt) {
        return function (s) {
          if (startAt < 0 || startAt > s.length) return nothing;
          var i = s.indexOf(x, startAt);
          return i === -1 ? nothing : just(i);
        };
      };
    };
  };
};

exports._lastIndexOf = function (just) {
  return function (nothing) {
    return function (x) {
      return function (s) {
        var i = s.lastIndexOf(x);
        return i === -1 ? nothing : just(i);
      };
    };
  };
};

exports._lastIndexOfStartingAt = function (just) {
  return function (nothing) {
    return function (x) {
      return function (startAt) {
        return function (s) {
          var i = s.lastIndexOf(x, startAt);
          return i === -1 ? nothing : just(i);
        };
      };
    };
  };
};

exports.take = function (n) {
  return function (s) {
    return s.substr(0, n);
  };
};

exports.drop = function (n) {
  return function (s) {
    return s.substring(n);
  };
};

exports._slice = function (b) {
  return function (e) {
    return function (s) {
      return s.slice(b, e);
    };
  };
};

exports.splitAt = function (i) {
  return function (s) {
    return {
      before: s.substring(0, i),
      after: s.substring(i)
    };
  };
};
},{}],"output/Data.String.Unsafe/foreign.js":[function(require,module,exports) {
"use strict";

exports.charAt = function (i) {
  return function (s) {
    if (i >= 0 && i < s.length) return s.charAt(i);
    throw new Error("Data.String.Unsafe.charAt: Invalid index.");
  };
};

exports.char = function (s) {
  if (s.length === 1) return s.charAt(0);
  throw new Error("Data.String.Unsafe.char: Expected string of length 1.");
};
},{}],"output/Data.String.Unsafe/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

module.exports = {
  "char": $foreign["char"],
  charAt: $foreign.charAt
};
},{"./foreign.js":"output/Data.String.Unsafe/foreign.js"}],"output/Data.String.CodeUnits/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Data_Boolean = require("../Data.Boolean/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_String_Unsafe = require("../Data.String.Unsafe/index.js");

var uncons = function uncons(v) {
  if (v === "") {
    return Data_Maybe.Nothing.value;
  }

  ;
  return new Data_Maybe.Just({
    head: Data_String_Unsafe.charAt(0)(v),
    tail: $foreign.drop(1)(v)
  });
};

var toChar = $foreign["_toChar"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);

var takeWhile = function takeWhile(p) {
  return function (s) {
    return $foreign.take($foreign.countPrefix(p)(s))(s);
  };
};

var takeRight = function takeRight(i) {
  return function (s) {
    return $foreign.drop($foreign.length(s) - i | 0)(s);
  };
};

var stripSuffix = function stripSuffix(v) {
  return function (str) {
    var v1 = $foreign.splitAt($foreign.length(str) - $foreign.length(v) | 0)(str);
    var $9 = v1.after === v;

    if ($9) {
      return new Data_Maybe.Just(v1.before);
    }

    ;
    return Data_Maybe.Nothing.value;
  };
};

var stripPrefix = function stripPrefix(v) {
  return function (str) {
    var v1 = $foreign.splitAt($foreign.length(v))(str);
    var $15 = v1.before === v;

    if ($15) {
      return new Data_Maybe.Just(v1.after);
    }

    ;
    return Data_Maybe.Nothing.value;
  };
};

var slice = function slice(b) {
  return function (e) {
    return function (s) {
      var l = $foreign.length(s);

      var norm = function norm(x) {
        if (x < 0) {
          return l + x | 0;
        }

        ;

        if (Data_Boolean.otherwise) {
          return x;
        }

        ;
        throw new Error("Failed pattern match at Data.String.CodeUnits (line 319, column 5 - line 320, column 27): " + [x.constructor.name]);
      };

      var e$prime = norm(e);
      var b$prime = norm(b);
      var $19 = b$prime < 0 || b$prime >= l || e$prime < 0 || e$prime > l || b$prime > e$prime;

      if ($19) {
        return Data_Maybe.Nothing.value;
      }

      ;
      return new Data_Maybe.Just($foreign["_slice"](b)(e)(s));
    };
  };
};

var lastIndexOf$prime = $foreign["_lastIndexOfStartingAt"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var lastIndexOf = $foreign["_lastIndexOf"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var indexOf$prime = $foreign["_indexOfStartingAt"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var indexOf = $foreign["_indexOf"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);

var dropWhile = function dropWhile(p) {
  return function (s) {
    return $foreign.drop($foreign.countPrefix(p)(s))(s);
  };
};

var dropRight = function dropRight(i) {
  return function (s) {
    return $foreign.take($foreign.length(s) - i | 0)(s);
  };
};

var contains = function contains(pat) {
  var $20 = indexOf(pat);
  return function ($21) {
    return Data_Maybe.isJust($20($21));
  };
};

var charAt = $foreign["_charAt"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
module.exports = {
  stripPrefix: stripPrefix,
  stripSuffix: stripSuffix,
  contains: contains,
  charAt: charAt,
  toChar: toChar,
  uncons: uncons,
  indexOf: indexOf,
  "indexOf'": indexOf$prime,
  lastIndexOf: lastIndexOf,
  "lastIndexOf'": lastIndexOf$prime,
  takeRight: takeRight,
  takeWhile: takeWhile,
  dropRight: dropRight,
  dropWhile: dropWhile,
  slice: slice,
  singleton: $foreign.singleton,
  fromCharArray: $foreign.fromCharArray,
  toCharArray: $foreign.toCharArray,
  length: $foreign.length,
  countPrefix: $foreign.countPrefix,
  take: $foreign.take,
  drop: $foreign.drop,
  splitAt: $foreign.splitAt
};
},{"./foreign.js":"output/Data.String.CodeUnits/foreign.js","../Data.Boolean/index.js":"output/Data.Boolean/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.String.Unsafe/index.js":"output/Data.String.Unsafe/index.js"}],"output/Foreign/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");

var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans/index.js");

var Data_Boolean = require("../Data.Boolean/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Int = require("../Data.Int/index.js");

var Data_List_NonEmpty = require("../Data.List.NonEmpty/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_String_CodeUnits = require("../Data.String.CodeUnits/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var ForeignError = function () {
  function ForeignError(value0) {
    this.value0 = value0;
  }

  ;

  ForeignError.create = function (value0) {
    return new ForeignError(value0);
  };

  return ForeignError;
}();

var TypeMismatch = function () {
  function TypeMismatch(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  TypeMismatch.create = function (value0) {
    return function (value1) {
      return new TypeMismatch(value0, value1);
    };
  };

  return TypeMismatch;
}();

var ErrorAtIndex = function () {
  function ErrorAtIndex(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  ErrorAtIndex.create = function (value0) {
    return function (value1) {
      return new ErrorAtIndex(value0, value1);
    };
  };

  return ErrorAtIndex;
}();

var ErrorAtProperty = function () {
  function ErrorAtProperty(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  ErrorAtProperty.create = function (value0) {
    return function (value1) {
      return new ErrorAtProperty(value0, value1);
    };
  };

  return ErrorAtProperty;
}();

var unsafeToForeign = Unsafe_Coerce.unsafeCoerce;
var unsafeFromForeign = Unsafe_Coerce.unsafeCoerce;
var showForeignError = {
  show: function show(v) {
    if (v instanceof ForeignError) {
      return "(ForeignError " + (Data_Show.show(Data_Show.showString)(v.value0) + ")");
    }

    ;

    if (v instanceof ErrorAtIndex) {
      return "(ErrorAtIndex " + (Data_Show.show(Data_Show.showInt)(v.value0) + (" " + (Data_Show.show(showForeignError)(v.value1) + ")")));
    }

    ;

    if (v instanceof ErrorAtProperty) {
      return "(ErrorAtProperty " + (Data_Show.show(Data_Show.showString)(v.value0) + (" " + (Data_Show.show(showForeignError)(v.value1) + ")")));
    }

    ;

    if (v instanceof TypeMismatch) {
      return "(TypeMismatch " + (Data_Show.show(Data_Show.showString)(v.value0) + (" " + (Data_Show.show(Data_Show.showString)(v.value1) + ")")));
    }

    ;
    throw new Error("Failed pattern match at Foreign (line 64, column 1 - line 68, column 89): " + [v.constructor.name]);
  }
};

var renderForeignError = function renderForeignError(v) {
  if (v instanceof ForeignError) {
    return v.value0;
  }

  ;

  if (v instanceof ErrorAtIndex) {
    return "Error at array index " + (Data_Show.show(Data_Show.showInt)(v.value0) + (": " + renderForeignError(v.value1)));
  }

  ;

  if (v instanceof ErrorAtProperty) {
    return "Error at property " + (Data_Show.show(Data_Show.showString)(v.value0) + (": " + renderForeignError(v.value1)));
  }

  ;

  if (v instanceof TypeMismatch) {
    return "Type mismatch: expected " + (v.value0 + (", found " + v.value1));
  }

  ;
  throw new Error("Failed pattern match at Foreign (line 73, column 1 - line 73, column 45): " + [v.constructor.name]);
};

var readUndefined = function readUndefined(dictMonad) {
  return function (value) {
    if ($foreign.isUndefined(value)) {
      return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(dictMonad))(Data_Maybe.Nothing.value);
    }

    ;

    if (Data_Boolean.otherwise) {
      return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(dictMonad))(new Data_Maybe.Just(value));
    }

    ;
    throw new Error("Failed pattern match at Foreign (line 161, column 1 - line 161, column 70): " + [value.constructor.name]);
  };
};

var readNullOrUndefined = function readNullOrUndefined(dictMonad) {
  return function (value) {
    if ($foreign.isNull(value) || $foreign.isUndefined(value)) {
      return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(dictMonad))(Data_Maybe.Nothing.value);
    }

    ;

    if (Data_Boolean.otherwise) {
      return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(dictMonad))(new Data_Maybe.Just(value));
    }

    ;
    throw new Error("Failed pattern match at Foreign (line 166, column 1 - line 166, column 76): " + [value.constructor.name]);
  };
};

var readNull = function readNull(dictMonad) {
  return function (value) {
    if ($foreign.isNull(value)) {
      return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(dictMonad))(Data_Maybe.Nothing.value);
    }

    ;

    if (Data_Boolean.otherwise) {
      return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(dictMonad))(new Data_Maybe.Just(value));
    }

    ;
    throw new Error("Failed pattern match at Foreign (line 156, column 1 - line 156, column 65): " + [value.constructor.name]);
  };
};

var fail = function fail(dictMonad) {
  var $118 = Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(dictMonad));
  return function ($119) {
    return $118(Data_List_NonEmpty.singleton($119));
  };
};

var readArray = function readArray(dictMonad) {
  return function (value) {
    if ($foreign.isArray(value)) {
      return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(dictMonad))(unsafeFromForeign(value));
    }

    ;

    if (Data_Boolean.otherwise) {
      return fail(dictMonad)(new TypeMismatch("array", $foreign.tagOf(value)));
    }

    ;
    throw new Error("Failed pattern match at Foreign (line 151, column 1 - line 151, column 66): " + [value.constructor.name]);
  };
};

var unsafeReadTagged = function unsafeReadTagged(dictMonad) {
  return function (tag) {
    return function (value) {
      if ($foreign.tagOf(value) === tag) {
        return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(dictMonad))(unsafeFromForeign(value));
      }

      ;

      if (Data_Boolean.otherwise) {
        return fail(dictMonad)(new TypeMismatch(tag, $foreign.tagOf(value)));
      }

      ;
      throw new Error("Failed pattern match at Foreign (line 110, column 1 - line 110, column 71): " + [tag.constructor.name, value.constructor.name]);
    };
  };
};

var readBoolean = function readBoolean(dictMonad) {
  return unsafeReadTagged(dictMonad)("Boolean");
};

var readNumber = function readNumber(dictMonad) {
  return unsafeReadTagged(dictMonad)("Number");
};

var readInt = function readInt(dictMonad) {
  return function (value) {
    var error = new Data_Either.Left(Data_List_NonEmpty.singleton(new TypeMismatch("Int", $foreign.tagOf(value))));

    var fromNumber = function () {
      var $120 = Data_Maybe.maybe(error)(Control_Applicative.pure(Data_Either.applicativeEither));
      return function ($121) {
        return $120(Data_Int.fromNumber($121));
      };
    }();

    return Control_Monad_Except_Trans.mapExceptT(Data_Functor.map(dictMonad.Bind1().Apply0().Functor0())(Data_Either.either(Data_Function["const"](error))(fromNumber)))(readNumber(dictMonad)(value));
  };
};

var readString = function readString(dictMonad) {
  return unsafeReadTagged(dictMonad)("String");
};

var readChar = function readChar(dictMonad) {
  return function (value) {
    var error = new Data_Either.Left(Data_List_NonEmpty.singleton(new TypeMismatch("Char", $foreign.tagOf(value))));

    var fromString = function () {
      var $122 = Data_Maybe.maybe(error)(Control_Applicative.pure(Data_Either.applicativeEither));
      return function ($123) {
        return $122(Data_String_CodeUnits.toChar($123));
      };
    }();

    return Control_Monad_Except_Trans.mapExceptT(Data_Functor.map(dictMonad.Bind1().Apply0().Functor0())(Data_Either.either(Data_Function["const"](error))(fromString)))(readString(dictMonad)(value));
  };
};

var eqForeignError = {
  eq: function eq(x) {
    return function (y) {
      if (x instanceof ForeignError && y instanceof ForeignError) {
        return x.value0 === y.value0;
      }

      ;

      if (x instanceof TypeMismatch && y instanceof TypeMismatch) {
        return x.value0 === y.value0 && x.value1 === y.value1;
      }

      ;

      if (x instanceof ErrorAtIndex && y instanceof ErrorAtIndex) {
        return x.value0 === y.value0 && Data_Eq.eq(eqForeignError)(x.value1)(y.value1);
      }

      ;

      if (x instanceof ErrorAtProperty && y instanceof ErrorAtProperty) {
        return x.value0 === y.value0 && Data_Eq.eq(eqForeignError)(x.value1)(y.value1);
      }

      ;
      return false;
    };
  }
};
var ordForeignError = {
  compare: function compare(x) {
    return function (y) {
      if (x instanceof ForeignError && y instanceof ForeignError) {
        return Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
      }

      ;

      if (x instanceof ForeignError) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof ForeignError) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof TypeMismatch && y instanceof TypeMismatch) {
        var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);

        if (v instanceof Data_Ordering.LT) {
          return Data_Ordering.LT.value;
        }

        ;

        if (v instanceof Data_Ordering.GT) {
          return Data_Ordering.GT.value;
        }

        ;
        return Data_Ord.compare(Data_Ord.ordString)(x.value1)(y.value1);
      }

      ;

      if (x instanceof TypeMismatch) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof TypeMismatch) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof ErrorAtIndex && y instanceof ErrorAtIndex) {
        var v = Data_Ord.compare(Data_Ord.ordInt)(x.value0)(y.value0);

        if (v instanceof Data_Ordering.LT) {
          return Data_Ordering.LT.value;
        }

        ;

        if (v instanceof Data_Ordering.GT) {
          return Data_Ordering.GT.value;
        }

        ;
        return Data_Ord.compare(ordForeignError)(x.value1)(y.value1);
      }

      ;

      if (x instanceof ErrorAtIndex) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof ErrorAtIndex) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof ErrorAtProperty && y instanceof ErrorAtProperty) {
        var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);

        if (v instanceof Data_Ordering.LT) {
          return Data_Ordering.LT.value;
        }

        ;

        if (v instanceof Data_Ordering.GT) {
          return Data_Ordering.GT.value;
        }

        ;
        return Data_Ord.compare(ordForeignError)(x.value1)(y.value1);
      }

      ;
      throw new Error("Failed pattern match at Foreign (line 62, column 1 - line 62, column 52): " + [x.constructor.name, y.constructor.name]);
    };
  },
  Eq0: function Eq0() {
    return eqForeignError;
  }
};
module.exports = {
  ForeignError: ForeignError,
  TypeMismatch: TypeMismatch,
  ErrorAtIndex: ErrorAtIndex,
  ErrorAtProperty: ErrorAtProperty,
  renderForeignError: renderForeignError,
  unsafeToForeign: unsafeToForeign,
  unsafeFromForeign: unsafeFromForeign,
  unsafeReadTagged: unsafeReadTagged,
  readString: readString,
  readChar: readChar,
  readBoolean: readBoolean,
  readNumber: readNumber,
  readInt: readInt,
  readArray: readArray,
  readNull: readNull,
  readUndefined: readUndefined,
  readNullOrUndefined: readNullOrUndefined,
  fail: fail,
  eqForeignError: eqForeignError,
  ordForeignError: ordForeignError,
  showForeignError: showForeignError,
  typeOf: $foreign.typeOf,
  tagOf: $foreign.tagOf,
  isNull: $foreign.isNull,
  isUndefined: $foreign.isUndefined,
  isArray: $foreign.isArray
};
},{"./foreign.js":"output/Foreign/foreign.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Monad.Error.Class/index.js":"output/Control.Monad.Error.Class/index.js","../Control.Monad.Except.Trans/index.js":"output/Control.Monad.Except.Trans/index.js","../Data.Boolean/index.js":"output/Data.Boolean/index.js","../Data.Either/index.js":"output/Data.Either/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Int/index.js":"output/Data.Int/index.js","../Data.List.NonEmpty/index.js":"output/Data.List.NonEmpty/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Data.String.CodeUnits/index.js":"output/Data.String.CodeUnits/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js"}],"output/Affjax/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Affjax_RequestBody = require("../Affjax.RequestBody/index.js");

var Affjax_RequestHeader = require("../Affjax.RequestHeader/index.js");

var Affjax_ResponseFormat = require("../Affjax.ResponseFormat/index.js");

var Affjax_ResponseHeader = require("../Affjax.ResponseHeader/index.js");

var Control_Alt = require("../Control.Alt/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");

var Control_Monad_Except = require("../Control.Monad.Except/index.js");

var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans/index.js");

var Data_Argonaut_Core = require("../Data.Argonaut.Core/index.js");

var Data_Argonaut_Parser = require("../Data.Argonaut.Parser/index.js");

var Data_Array = require("../Data.Array/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_FormURLEncoded = require("../Data.FormURLEncoded/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_HTTP_Method = require("../Data.HTTP.Method/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Identity = require("../Data.Identity/index.js");

var Data_List_NonEmpty = require("../Data.List.NonEmpty/index.js");

var Data_List_Types = require("../Data.List.Types/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Effect_Aff = require("../Effect.Aff/index.js");

var Effect_Aff_Compat = require("../Effect.Aff.Compat/index.js");

var Effect_Exception = require("../Effect.Exception/index.js");

var Foreign = require("../Foreign/index.js");

var RequestContentError = function () {
  function RequestContentError(value0) {
    this.value0 = value0;
  }

  ;

  RequestContentError.create = function (value0) {
    return new RequestContentError(value0);
  };

  return RequestContentError;
}();

var ResponseBodyError = function () {
  function ResponseBodyError(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  ResponseBodyError.create = function (value0) {
    return function (value1) {
      return new ResponseBodyError(value0, value1);
    };
  };

  return ResponseBodyError;
}();

var TimeoutError = function () {
  function TimeoutError() {}

  ;
  TimeoutError.value = new TimeoutError();
  return TimeoutError;
}();

var RequestFailedError = function () {
  function RequestFailedError() {}

  ;
  RequestFailedError.value = new RequestFailedError();
  return RequestFailedError;
}();

var XHROtherError = function () {
  function XHROtherError(value0) {
    this.value0 = value0;
  }

  ;

  XHROtherError.create = function (value0) {
    return new XHROtherError(value0);
  };

  return XHROtherError;
}();

var request = function request(req) {
  var parseJSON = function parseJSON(v) {
    if (v === "") {
      return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Argonaut_Core.jsonEmptyObject);
    }

    ;
    return Data_Either.either(function () {
      var $51 = Foreign.fail(Data_Identity.monadIdentity);
      return function ($52) {
        return $51(Foreign.ForeignError.create($52));
      };
    }())(Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity)))(Data_Argonaut_Parser.jsonParser(v));
  };

  var fromResponse = function () {
    if (req.responseFormat instanceof Affjax_ResponseFormat["ArrayBuffer"]) {
      return Foreign.unsafeReadTagged(Data_Identity.monadIdentity)("ArrayBuffer");
    }

    ;

    if (req.responseFormat instanceof Affjax_ResponseFormat.Blob) {
      return Foreign.unsafeReadTagged(Data_Identity.monadIdentity)("Blob");
    }

    ;

    if (req.responseFormat instanceof Affjax_ResponseFormat.Document) {
      return function (x) {
        return Control_Alt.alt(Control_Monad_Except_Trans.altExceptT(Data_List_Types.semigroupNonEmptyList)(Data_Identity.monadIdentity))(Control_Alt.alt(Control_Monad_Except_Trans.altExceptT(Data_List_Types.semigroupNonEmptyList)(Data_Identity.monadIdentity))(Foreign.unsafeReadTagged(Data_Identity.monadIdentity)("Document")(x))(Foreign.unsafeReadTagged(Data_Identity.monadIdentity)("XMLDocument")(x)))(Foreign.unsafeReadTagged(Data_Identity.monadIdentity)("HTMLDocument")(x));
      };
    }

    ;

    if (req.responseFormat instanceof Affjax_ResponseFormat.Json) {
      return Control_Bind.composeKleisliFlipped(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(function ($53) {
        return req.responseFormat.value0(parseJSON($53));
      })(Foreign.unsafeReadTagged(Data_Identity.monadIdentity)("String"));
    }

    ;

    if (req.responseFormat instanceof Affjax_ResponseFormat["String"]) {
      return Foreign.unsafeReadTagged(Data_Identity.monadIdentity)("String");
    }

    ;

    if (req.responseFormat instanceof Affjax_ResponseFormat.Ignore) {
      return Data_Function["const"](req.responseFormat.value0(Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Unit.unit)));
    }

    ;
    throw new Error("Failed pattern match at Affjax (line 257, column 18 - line 265, column 57): " + [req.responseFormat.constructor.name]);
  }();

  var extractContent = function extractContent(v) {
    if (v instanceof Affjax_RequestBody.ArrayView) {
      return new Data_Either.Right(v.value0(Foreign.unsafeToForeign));
    }

    ;

    if (v instanceof Affjax_RequestBody.Blob) {
      return new Data_Either.Right(Foreign.unsafeToForeign(v.value0));
    }

    ;

    if (v instanceof Affjax_RequestBody.Document) {
      return new Data_Either.Right(Foreign.unsafeToForeign(v.value0));
    }

    ;

    if (v instanceof Affjax_RequestBody["String"]) {
      return new Data_Either.Right(Foreign.unsafeToForeign(v.value0));
    }

    ;

    if (v instanceof Affjax_RequestBody.FormData) {
      return new Data_Either.Right(Foreign.unsafeToForeign(v.value0));
    }

    ;

    if (v instanceof Affjax_RequestBody.FormURLEncoded) {
      return Data_Either.note("Body contains values that cannot be encoded as application/x-www-form-urlencoded")(Data_Functor.map(Data_Maybe.functorMaybe)(Foreign.unsafeToForeign)(Data_FormURLEncoded.encode(v.value0)));
    }

    ;

    if (v instanceof Affjax_RequestBody.Json) {
      return new Data_Either.Right(Foreign.unsafeToForeign(Data_Argonaut_Core.stringify(v.value0)));
    }

    ;
    throw new Error("Failed pattern match at Affjax (line 217, column 20 - line 232, column 69): " + [v.constructor.name]);
  };

  var addHeader = function addHeader(mh) {
    return function (hs) {
      if (mh instanceof Data_Maybe.Just && !Data_Foldable.any(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(Data_Function.on(Data_Eq.eq(Data_Eq.eqString))(Affjax_RequestHeader.name)(mh.value0))(hs)) {
        return Data_Array.snoc(hs)(mh.value0);
      }

      ;
      return hs;
    };
  };

  var headers = function headers(reqContent) {
    return addHeader(Data_Functor.map(Data_Maybe.functorMaybe)(Affjax_RequestHeader.ContentType.create)(Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Affjax_RequestBody.toMediaType)(reqContent)))(addHeader(Data_Functor.map(Data_Maybe.functorMaybe)(Affjax_RequestHeader.Accept.create)(Affjax_ResponseFormat.toMediaType(req.responseFormat)))(req.headers));
  };

  var ajaxRequest = function ajaxRequest(v) {
    return {
      method: Data_HTTP_Method.print(req.method),
      url: req.url,
      headers: Data_Functor.map(Data_Functor.functorArray)(function (h) {
        return {
          field: Affjax_RequestHeader.name(h),
          value: Affjax_RequestHeader.value(h)
        };
      })(headers(req.content)),
      content: v,
      responseType: Affjax_ResponseFormat.toResponseType(req.responseFormat),
      username: Data_Nullable.toNullable(req.username),
      password: Data_Nullable.toNullable(req.password),
      withCredentials: req.withCredentials,
      timeout: Data_Maybe.fromMaybe(0.0)(Data_Functor.map(Data_Maybe.functorMaybe)(function (v1) {
        return v1;
      })(req.timeout))
    };
  };

  var send = function send(content) {
    return Data_Functor.mapFlipped(Effect_Aff.functorAff)(Control_Monad_Error_Class["try"](Effect_Aff.monadErrorAff)(Effect_Aff_Compat.fromEffectFnAff($foreign["_ajax"]("AffjaxTimeoutErrorMessageIdent", "AffjaxRequestFailedMessageIdent", Affjax_ResponseHeader.ResponseHeader.create, ajaxRequest(content)))))(function (v) {
      if (v instanceof Data_Either.Right) {
        var v1 = Control_Monad_Except.runExcept(fromResponse(v.value0.body));

        if (v1 instanceof Data_Either.Left) {
          return new Data_Either.Left(new ResponseBodyError(Data_List_NonEmpty.head(v1.value0), v.value0));
        }

        ;

        if (v1 instanceof Data_Either.Right) {
          return new Data_Either.Right({
            body: v1.value0,
            headers: v.value0.headers,
            status: v.value0.status,
            statusText: v.value0.statusText
          });
        }

        ;
        throw new Error("Failed pattern match at Affjax (line 193, column 9 - line 195, column 52): " + [v1.constructor.name]);
      }

      ;

      if (v instanceof Data_Either.Left) {
        var message = Effect_Exception.message(v.value0);
        return new Data_Either.Left(function () {
          var $38 = message === "AffjaxTimeoutErrorMessageIdent";

          if ($38) {
            return TimeoutError.value;
          }

          ;
          var $39 = message === "AffjaxRequestFailedMessageIdent";

          if ($39) {
            return RequestFailedError.value;
          }

          ;
          return new XHROtherError(v.value0);
        }());
      }

      ;
      throw new Error("Failed pattern match at Affjax (line 191, column 137 - line 201, column 33): " + [v.constructor.name]);
    });
  };

  if (req.content instanceof Data_Maybe.Nothing) {
    return send(Data_Nullable.toNullable(Data_Maybe.Nothing.value));
  }

  ;

  if (req.content instanceof Data_Maybe.Just) {
    var v = extractContent(req.content.value0);

    if (v instanceof Data_Either.Right) {
      return send(Data_Nullable.toNullable(new Data_Maybe.Just(v.value0)));
    }

    ;

    if (v instanceof Data_Either.Left) {
      return Control_Applicative.pure(Effect_Aff.applicativeAff)(new Data_Either.Left(new RequestContentError(v.value0)));
    }

    ;
    throw new Error("Failed pattern match at Affjax (line 183, column 7 - line 187, column 48): " + [v.constructor.name]);
  }

  ;
  throw new Error("Failed pattern match at Affjax (line 179, column 3 - line 187, column 48): " + [req.content.constructor.name]);
};

var printError = function printError(v) {
  if (v instanceof RequestContentError) {
    return "There was a problem with the request content: " + v.value0;
  }

  ;

  if (v instanceof ResponseBodyError) {
    return "There was a problem with the response body: " + Foreign.renderForeignError(v.value0);
  }

  ;

  if (v instanceof TimeoutError) {
    return "There was a problem making the request: timeout";
  }

  ;

  if (v instanceof RequestFailedError) {
    return "There was a problem making the request: request failed";
  }

  ;

  if (v instanceof XHROtherError) {
    return "There was a problem making the request: " + Effect_Exception.message(v.value0);
  }

  ;
  throw new Error("Failed pattern match at Affjax (line 97, column 14 - line 107, column 66): " + [v.constructor.name]);
};

var defaultRequest = {
  method: new Data_Either.Left(Data_HTTP_Method.GET.value),
  url: "/",
  headers: [],
  content: Data_Maybe.Nothing.value,
  username: Data_Maybe.Nothing.value,
  password: Data_Maybe.Nothing.value,
  withCredentials: false,
  responseFormat: Affjax_ResponseFormat.ignore,
  timeout: Data_Maybe.Nothing.value
};

var $$delete = function $$delete(rf) {
  return function (u) {
    return request({
      method: new Data_Either.Left(Data_HTTP_Method.DELETE.value),
      url: u,
      headers: defaultRequest.headers,
      content: defaultRequest.content,
      username: defaultRequest.username,
      password: defaultRequest.password,
      withCredentials: defaultRequest.withCredentials,
      responseFormat: rf,
      timeout: defaultRequest.timeout
    });
  };
};

var delete_ = function () {
  var $54 = Data_Functor.map(Effect_Aff.functorAff)(Data_Functor["void"](Data_Either.functorEither));
  var $55 = $$delete(Affjax_ResponseFormat.ignore);
  return function ($56) {
    return $54($55($56));
  };
}();

var get = function get(rf) {
  return function (u) {
    return request({
      method: defaultRequest.method,
      url: u,
      headers: defaultRequest.headers,
      content: defaultRequest.content,
      username: defaultRequest.username,
      password: defaultRequest.password,
      withCredentials: defaultRequest.withCredentials,
      responseFormat: rf,
      timeout: defaultRequest.timeout
    });
  };
};

var patch = function patch(rf) {
  return function (u) {
    return function (c) {
      return request({
        method: new Data_Either.Left(Data_HTTP_Method.PATCH.value),
        url: u,
        headers: defaultRequest.headers,
        content: new Data_Maybe.Just(c),
        username: defaultRequest.username,
        password: defaultRequest.password,
        withCredentials: defaultRequest.withCredentials,
        responseFormat: rf,
        timeout: defaultRequest.timeout
      });
    };
  };
};

var patch_ = function patch_(url) {
  var $57 = Data_Functor.map(Effect_Aff.functorAff)(Data_Functor["void"](Data_Either.functorEither));
  var $58 = patch(Affjax_ResponseFormat.ignore)(url);
  return function ($59) {
    return $57($58($59));
  };
};

var post = function post(rf) {
  return function (u) {
    return function (c) {
      return request({
        method: new Data_Either.Left(Data_HTTP_Method.POST.value),
        url: u,
        headers: defaultRequest.headers,
        content: c,
        username: defaultRequest.username,
        password: defaultRequest.password,
        withCredentials: defaultRequest.withCredentials,
        responseFormat: rf,
        timeout: defaultRequest.timeout
      });
    };
  };
};

var post_ = function post_(url) {
  var $60 = Data_Functor.map(Effect_Aff.functorAff)(Data_Functor["void"](Data_Either.functorEither));
  var $61 = post(Affjax_ResponseFormat.ignore)(url);
  return function ($62) {
    return $60($61($62));
  };
};

var put = function put(rf) {
  return function (u) {
    return function (c) {
      return request({
        method: new Data_Either.Left(Data_HTTP_Method.PUT.value),
        url: u,
        headers: defaultRequest.headers,
        content: c,
        username: defaultRequest.username,
        password: defaultRequest.password,
        withCredentials: defaultRequest.withCredentials,
        responseFormat: rf,
        timeout: defaultRequest.timeout
      });
    };
  };
};

var put_ = function put_(url) {
  var $63 = Data_Functor.map(Effect_Aff.functorAff)(Data_Functor["void"](Data_Either.functorEither));
  var $64 = put(Affjax_ResponseFormat.ignore)(url);
  return function ($65) {
    return $63($64($65));
  };
};

module.exports = {
  defaultRequest: defaultRequest,
  RequestContentError: RequestContentError,
  ResponseBodyError: ResponseBodyError,
  TimeoutError: TimeoutError,
  RequestFailedError: RequestFailedError,
  XHROtherError: XHROtherError,
  printError: printError,
  request: request,
  get: get,
  post: post,
  post_: post_,
  put: put,
  put_: put_,
  "delete": $$delete,
  delete_: delete_,
  patch: patch,
  patch_: patch_
};
},{"./foreign.js":"output/Affjax/foreign.js","../Affjax.RequestBody/index.js":"output/Affjax.RequestBody/index.js","../Affjax.RequestHeader/index.js":"output/Affjax.RequestHeader/index.js","../Affjax.ResponseFormat/index.js":"output/Affjax.ResponseFormat/index.js","../Affjax.ResponseHeader/index.js":"output/Affjax.ResponseHeader/index.js","../Control.Alt/index.js":"output/Control.Alt/index.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Monad.Error.Class/index.js":"output/Control.Monad.Error.Class/index.js","../Control.Monad.Except/index.js":"output/Control.Monad.Except/index.js","../Control.Monad.Except.Trans/index.js":"output/Control.Monad.Except.Trans/index.js","../Data.Argonaut.Core/index.js":"output/Data.Argonaut.Core/index.js","../Data.Argonaut.Parser/index.js":"output/Data.Argonaut.Parser/index.js","../Data.Array/index.js":"output/Data.Array/index.js","../Data.Either/index.js":"output/Data.Either/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Foldable/index.js":"output/Data.Foldable/index.js","../Data.FormURLEncoded/index.js":"output/Data.FormURLEncoded/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.HTTP.Method/index.js":"output/Data.HTTP.Method/index.js","../Data.HeytingAlgebra/index.js":"output/Data.HeytingAlgebra/index.js","../Data.Identity/index.js":"output/Data.Identity/index.js","../Data.List.NonEmpty/index.js":"output/Data.List.NonEmpty/index.js","../Data.List.Types/index.js":"output/Data.List.Types/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Nullable/index.js":"output/Data.Nullable/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Effect.Aff/index.js":"output/Effect.Aff/index.js","../Effect.Aff.Compat/index.js":"output/Effect.Aff.Compat/index.js","../Effect.Exception/index.js":"output/Effect.Exception/index.js","../Foreign/index.js":"output/Foreign/index.js"}],"output/DocumentEvent/foreign.js":[function(require,module,exports) {
'use strict';

exports.clickEvent = 'click';
exports.inputEvent = 'input';

exports.addEvent = function (eventType) {
  return function (eventHandler) {
    return function () {
      return document.addEventListener(eventType, function (evt) {
        return eventHandler(evt)();
      });
    };
  };
};

exports.getPosition = function () {
  if (navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(getCurrentWeather);
  } else {
    console.log("Geolocation is not supported by this browser.");
  }
};

function getName(lat, lon) {
  var name = "";
  var scriptUrl = "https://api.openweathermap.org/data/2.5/weather?lat=" + lat + "&lon=" + lon + "&appid=883f70964bc4427b6582c086f8a59ff7&units=imperial";
  $.ajax({
    url: scriptUrl,
    type: 'get',
    dataType: 'json',
    async: false,
    success: function success(data) {
      name = data.name;
    }
  });
  return name;
}

function getCurrentWeather(position) {
  var lat = sessionStorage.getItem("lat");
  var lon = sessionStorage.getItem("lon");
  var name = sessionStorage.getItem("name");

  if (!lat) {
    lat = position.coords.latitude;
    sessionStorage.setItem("lat", lat);
  }

  if (!lon) {
    lon = position.coords.longitude;
    sessionStorage.setItem("lon", lon);
  }

  if (!name) {
    name = getName(lat, lon);
  }

  $.get("https://api.openweathermap.org/data/2.5/onecall?lat=" + lat + "&lon=" + lon + "&exclude=minutely,hourly,daily,alerts&appid=883f70964bc4427b6582c086f8a59ff7&units=imperial", function (resp) {
    console.log(resp);
    document.getElementById("loc").innerHTML = name;
    document.getElementById("temp").innerHTML = "Temperature: " + resp.current.temp + " Degrees Fahrenheit";
    document.getElementById("feel").innerHTML = "Feels Like: " + resp.current.feels_like + " Degrees Fahrenheit";
    var weather = resp.current.weather[0].description;
    var w = weather[0].toUpperCase();

    for (var i = 1; i < weather.length; i++) {
      if (weather[i - 1] == " ") {
        w += weather[i].toUpperCase();
      } else {
        w += weather[i];
      }
    }

    document.getElementById("weather").innerHTML = w;
    var imgSrc = resp.current.weather[0].icon;
    var src = "http://openweathermap.org/img/wn/" + imgSrc + ".png";
    var img = '<img width="150" height="150" src="' + src + '"/>';
    document.getElementById("weatherImg").innerHTML = img;
    document.getElementById("pressure").innerHTML = "Atmospheric Pressure: " + resp.current.pressure + " hPa";
    document.getElementById("humidity").innerHTML = "Humidity: " + resp.current.humidity + "%";
    document.getElementById("dew").innerHTML = "Atmospheric Temperature (Dew Point): " + resp.current.dew_point + " Degrees Fahrenheit";
    document.getElementById("clouds").innerHTML = "Cloudiness: " + resp.current.clouds + "%";
    document.getElementById("uvi").innerHTML = "Midday UV Index: " + resp.current.uvi;
    document.getElementById("visibility").innerHTML = "Average Visibility: " + resp.current.visibility + " m";
    document.getElementById("wind_speed").innerHTML = "Wind Speed: " + resp.current.wind_speed + " miles/hour";

    if (resp.current.wind_gust) {
      document.getElementById("wind_gust").innerHTML = "Wind Gust: " + resp.current.wind_gust + " miles/hour";
    }

    document.getElementById("wind_deg").innerHTML = "Wind Direction: " + resp.current.wind_deg + " degrees (meteorological)";

    if (resp.current.rain) {
      document.getElementById("rain").innerHTML = "Rain Volume: " + resp.current.rain["1h"] + " mm";
    }

    if (resp.current.snow) {
      document.getElementById("snow").innerHTML = "Snow Volume: " + resp.current.snow["1h"] + " mm";
    }

    document.getElementById("timezone").innerHTML = "Timezone: " + resp.timezone.replaceAll("_", " ");
    var sunrise = resp.current.sunrise;
    var riseDate = new Date(sunrise * 1000);
    var riseHours = riseDate.getHours();
    var riseMins = "0" + riseDate.getMinutes();
    var riseSecs = "0" + riseDate.getSeconds();
    var riseTime = riseHours + ':' + riseMins.substr(-2) + ':' + riseSecs.substr(-2);
    document.getElementById("sunrise").innerHTML = "Sunrise: " + riseTime + " am";
    var sunset = resp.current.sunset;
    var setDate = new Date(sunset * 1000);
    var setHours = setDate.getHours() - 12;
    var setMins = "0" + setDate.getMinutes();
    var setSecs = "0" + setDate.getSeconds();
    var setTime = setHours + ':' + setMins.substr(-2) + ':' + setSecs.substr(-2);
    document.getElementById("sunset").innerHTML = "Sunset: " + setTime + " pm";
  });
}

exports.getMinuteWeather = function () {
  var lat = sessionStorage.getItem("lat");
  var lon = sessionStorage.getItem("lon");
  $.get("https://api.openweathermap.org/data/2.5/onecall?lat=" + lat + "&lon=" + lon + "&exclude=hourly,daily,alerts&appid=883f70964bc4427b6582c086f8a59ff7&units=imperial", function (resp) {
    console.log(resp);
    var weather = resp.current.weather[0].description;
    var w = weather[0].toUpperCase();

    for (var i = 1; i < weather.length; i++) {
      if (weather[i - 1] == " ") {
        w += weather[i].toUpperCase();
      } else {
        w += weather[i];
      }
    }

    var imgSrc = resp.current.weather[0].icon;
    var src = "http://openweathermap.org/img/wn/" + imgSrc + ".png";
    var img = '<span class="fa-stack fa-4x"><img width="150" height="150" src="' + src + '"/></span><h4 class="my-3">' + w + '</h4>';
    var mins = resp.minutely;
    var html = "";

    for (var i = 0; i < mins.length; i++) {
      if (i % 3 == 0) {
        if (i != 0) {
          html += '</div>';
        }

        html += '<div class="row text-center">';
      }

      html += '<div class="col-md-4">';
      html += img;
      var day = "";
      var time = mins[i].dt;
      var date = new Date(time * 1000);
      var hours = date.getHours();

      if (hours >= 12) {
        hours -= 12;
        day = "pm";
      } else {
        day = "am";
      }

      var min = "0" + date.getMinutes();
      var secs = "0" + date.getSeconds();
      var t = hours + ':' + min.substr(-2) + ':' + secs.substr(-2);
      html += '<p class="text-muted">' + t + ' ' + day + '</p>';
      html += '<p class="text-muted">Precipitation: ' + mins[i].precipitation + ' mm</p>';
      html += "</div>";
    }

    if (mins.length - 1 % 3 != 0) {
      html += '</div>';
    }

    document.getElementById("min").innerHTML = html;
  });
};

exports.getHourlyWeather = function () {
  var lat = sessionStorage.getItem("lat");
  var lon = sessionStorage.getItem("lon");
  $.get("https://api.openweathermap.org/data/2.5/onecall?lat=" + lat + "&lon=" + lon + "&exclude=current,minutely,daily,alerts&appid=883f70964bc4427b6582c086f8a59ff7&units=imperial", function (resp) {
    console.log(resp);
    var hours = resp.hourly;
    var html = "";

    for (var i = 0; i < hours.length; i++) {
      if (i % 3 == 0) {
        if (i != 0) {
          html += '</div>';
          document.getElementById("hour").innerHTML += html;
          html = "";
        }

        html += '<div class="row text-center">';
      }

      html += '<div class="col-md-4">';
      var weather = hours[i].weather[0].description;
      var w = weather[0].toUpperCase();

      for (var j = 1; j < weather.length; j++) {
        if (weather[j - 1] == " ") {
          w += weather[j].toUpperCase();
        } else {
          w += weather[j];
        }
      }

      var imgSrc = hours[i].weather[0].icon;
      var src = "http://openweathermap.org/img/wn/" + imgSrc + ".png";
      var img = '<span class="fa-stack fa-4x"><img width="150" height="150" src="' + src + '"/></span><h4 class="my-3">' + w + '</h4>';
      html += img;
      var day = "";
      var time = hours[i].dt;
      var date = new Date(time * 1000);
      var hrs = date.getHours();

      if (hrs >= 12) {
        hrs -= 12;
        day = "pm";
      } else {
        day = "am";
      }

      var t = hrs + ':00:00';
      html += '<h4 class="my-3">' + t + ' ' + day + '</h4>';
      html += '<h4 class="my-3">Temperature: ' + hours[i].temp + ' Degrees Fahrenheit</h4>';
      html += '<button id="btn' + i + '" onclick="show(' + i + ')">More</button>';
      html += '<div id="div' + i + '" style="display:none">';
      html += '<p class="text-muted">Feels Like: ' + hours[i].feels_like + ' Degrees Fahrenheit</p>';
      var pop = hours[i].pop;
      var p = pop * 100;
      html += '<p class="text-muted">Precipitation Probability: ' + p + '%</p>';
      html += '<p class="text-muted">Atmospheric Pressure: ' + hours[i].pressure + ' hPa</p>';
      html += '<p class="text-muted">Humidity: ' + hours[i].humidity + '%</p>';
      html += '<p class="text-muted">Atmospheric Temperature (Dew Point): ' + hours[i].dew_point + ' Degrees Fahrenheit</p>';
      html += '<p class="text-muted">Cloudiness: ' + hours[i].clouds + '%</p>';
      html += '<p class="text-muted">Midday UV Index: ' + hours[i].uvi + '</p>';
      html += '<p class="text-muted">Average Visibility: ' + hours[i].visibility + ' m</p>';
      html += '<p class="text-muted">Wind Speed: ' + hours[i].wind_speed + ' miles/hour</p>';

      if (hours[i].wind_gust) {
        html += '<p class="text-muted">Wind Gust: ' + hours[i].wind_gust + ' miles/hour</p>';
      }

      html += '<p class="text-muted">Wind Direction: ' + hours[i].wind_deg + ' degrees (meteorological)</p>';

      if (hours[i].rain) {
        html += '<p class="text-muted">Rain Volume: ' + hours[i].rain["1h"] + ' mm</p>';
      }

      if (hours[i].snow) {
        html += '<p class="text-muted">Snow Volume: ' + hours[i].snow["1h"] + ' mm</p>';
      }

      html += "</div>";
      html += "</div>";
    }

    if (hours.length - 1 % 3 != 0) {
      html += '</div>';
    }

    document.getElementById("hour").innerHTML += html;
  });
};

exports.getDailyWeather = function () {
  var lat = sessionStorage.getItem("lat");
  var lon = sessionStorage.getItem("lon");
  $.get("https://api.openweathermap.org/data/2.5/onecall?lat=" + lat + "&lon=" + lon + "&exclude=current,minutely,hourly,alerts&appid=883f70964bc4427b6582c086f8a59ff7&units=imperial", function (resp) {
    console.log(resp);
    var days = resp.daily;
    var html = "";

    for (var i = 0; i < days.length; i++) {
      if (i % 3 == 0) {
        if (i != 0) {
          html += '</div>';
          document.getElementById("day").innerHTML += html;
          html = "";
        }

        html += '<div class="row text-center">';
      }

      html += '<div class="col-md-4">';
      var weather = days[i].weather[0].description;
      var w = weather[0].toUpperCase();

      for (var j = 1; j < weather.length; j++) {
        if (weather[j - 1] == " ") {
          w += weather[j].toUpperCase();
        } else {
          w += weather[j];
        }
      }

      var imgSrc = days[i].weather[0].icon;
      var src = "http://openweathermap.org/img/wn/" + imgSrc + ".png";
      var img = '<span class="fa-stack fa-4x"><img width="150" height="150" src="' + src + '"/></span><h4 class="my-3">' + w + '</h4>';
      html += img;
      var time = days[i].dt;
      var date = new Date(time * 1000);
      var day = date.getDate();
      var d2 = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];
      var d1 = date.getDay();
      var d = d2[d1];
      var months = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
      var month = date.getMonth();
      var m = months[month];
      var year = date.getFullYear();
      html += '<h4 class="my-3">' + d + ' ' + m + ' ' + day + ', ' + year + '</h4>';
      html += '<p class="text-muted">Minimum Temperature: ' + days[i].temp.min + ' Degrees Fahrenheit</p>';
      html += '<p class="text-muted">Maximum Temperature: ' + days[i].temp.max + ' Degrees Fahrenheit</p>';
      html += '<p class="text-muted">Morning Temperature: ' + days[i].temp.morn + ' Degrees Fahrenheit</p>';
      html += '<p class="text-muted">Daytime Temperature: ' + days[i].temp.day + ' Degrees Fahrenheit</p>';
      html += '<p class="text-muted">Evening Temperature: ' + days[i].temp.eve + ' Degrees Fahrenheit</p>';
      html += '<p class="text-muted">Nighttime Temperature: ' + days[i].temp.night + ' Degrees Fahrenheit</p>';
      html += '<button id="btn' + i + '" onclick="show(' + i + ')">More</button>';
      html += '<div id="div' + i + '" style="display:none">';
      html += '<p class="text-muted">Morning Temperature Feels Like: ' + days[i].feels_like.morn + ' Degrees Fahrenheit</p>';
      html += '<p class="text-muted">Daytime Temperature Feels Like: ' + days[i].feels_like.day + ' Degrees Fahrenheit</p>';
      html += '<p class="text-muted">Evening Temperature Feels Like: ' + days[i].feels_like.eve + ' Degrees Fahrenheit</p>';
      html += '<p class="text-muted">Nighttime Temperature Feels Like: ' + days[i].feels_like.night + ' Degrees Fahrenheit</p>';
      var sunrise = days[i].sunrise;
      var sunriseDate = new Date(sunrise * 1000);
      var sunriseHours = sunriseDate.getHours();
      var sunriseMins = "0" + sunriseDate.getMinutes();
      var sunriseSecs = "0" + sunriseDate.getSeconds();
      var sunriseTime = sunriseHours + ':' + sunriseMins.substr(-2) + ':' + sunriseSecs.substr(-2);
      html += '<p class="text-muted">Sunrise: ' + sunriseTime + ' am</p>';
      var sunset = days[i].sunset;
      var sunsetDate = new Date(sunset * 1000);
      var sunsetHours = sunsetDate.getHours() - 12;
      var sunsetMins = "0" + sunsetDate.getMinutes();
      var sunsetSecs = "0" + sunsetDate.getSeconds();
      var sunsetTime = sunsetHours + ':' + sunsetMins.substr(-2) + ':' + sunsetSecs.substr(-2);
      html += '<p class="text-muted">Sunset: ' + sunsetTime + ' pm</p>';
      var moonrise = days[i].moonrise;
      var moonriseDate = new Date(moonrise * 1000);
      var moonriseHours = moonriseDate.getHours();
      var moonriseMins = "0" + moonriseDate.getMinutes();
      var moonriseSecs = "0" + moonriseDate.getSeconds();
      var amPm = "";

      if (moonriseHours >= 12) {
        moonriseHours -= 12;
        amPm = "pm";
      } else {
        amPm = "am";
      }

      var moonriseTime = moonriseHours + ':' + moonriseMins.substr(-2) + ':' + moonriseSecs.substr(-2);
      html += '<p class="text-muted">Moonrise: ' + moonriseTime + ' ' + amPm + '</p>';
      var moonset = days[i].moonset;
      var moonsetDate = new Date(moonset * 1000);
      var moonsetHours = moonsetDate.getHours();
      var moonsetMins = "0" + moonsetDate.getMinutes();
      var moonsetSecs = "0" + moonsetDate.getSeconds();
      var amPm1 = "";

      if (moonsetHours >= 12) {
        moonsetHours -= 12;
        amPm1 = "pm";
      } else {
        amPm1 = "am";
      }

      var moonsetTime = moonsetHours + ':' + moonsetMins.substr(-2) + ':' + moonsetSecs.substr(-2);
      html += '<p class="text-muted">Moonset: ' + moonsetTime + ' ' + amPm1 + '</p>';
      var phase = days[i].moon_phase;
      var moon = "";

      if (phase == 0 || phase == 1) {
        moon = "New Moon";
      } else if (phase > 0 && phase < 0.25) {
        moon = "Waxing Crescent Moon";
      } else if (phase == 0.25) {
        moon = "First Quarter Moon";
      } else if (phase > 0.25 && phase < 0.5) {
        moon = "Waxing Gibbous Moon";
      } else if (phase == 0.5) {
        moon = "Full Moon";
      } else if (phase > 0.5 && phase < 0.75) {
        moon = "Waning Gibbous Moon";
      } else if (phase == 0.75) {
        moon = "Last Quarter Moon";
      } else if (phase > 0.75 && phase < 1) {
        moon = "Waning Crescent Moon";
      } else {
        moon = "Error: Not a Part of the Lunar Cycle";
      }

      html += '<p class="text-muted">' + moon + '</p>';
      var pop = days[i].pop;
      var p = pop * 100;
      html += '<p class="text-muted">Precipitation Probability: ' + p + '%</p>';
      html += '<p class="text-muted">Atmospheric Pressure: ' + days[i].pressure + ' hPa</p>';
      html += '<p class="text-muted">Humidity: ' + days[i].humidity + '%</p>';
      html += '<p class="text-muted">Atmospheric Temperature (Dew Point): ' + days[i].dew_point + ' Degrees Fahrenheit</p>';
      html += '<p class="text-muted">Cloudiness: ' + days[i].clouds + '%</p>';
      html += '<p class="text-muted">Midday UV Index: ' + days[i].uvi + '</p>';
      html += '<p class="text-muted">Average Visibility: ' + days[i].visibility + ' m</p>';
      html += '<p class="text-muted">Wind Speed: ' + days[i].wind_speed + ' miles/hour</p>';

      if (days[i].wind_gust) {
        html += '<p class="text-muted">Wind Gust: ' + days[i].wind_gust + ' miles/hour</p>';
      }

      html += '<p class="text-muted">Wind Direction: ' + days[i].wind_deg + ' degrees (meteorological)</p>';

      if (days[i].rain) {
        html += '<p class="text-muted">Rain Volume: ' + days[i].rain + ' mm</p>';
      }

      if (days[i].snow) {
        html += '<p class="text-muted">Snow Volume: ' + days[i].snow + ' mm</p>';
      }

      html += "</div>";
      html += "</div>";
    }

    if (days.length - 1 % 3 != 0) {
      html += '</div>';
    }

    document.getElementById("day").innerHTML += html;
  });
};

exports.getAlerts = function () {
  var lat = sessionStorage.getItem("lat");
  var lon = sessionStorage.getItem("lon");
  $.get("https://api.openweathermap.org/data/2.5/onecall?lat=" + lat + "&lon=" + lon + "&exclude=current,minutely,hourly,daily&appid=883f70964bc4427b6582c086f8a59ff7&units=imperial", function (resp) {
    console.log(resp);
    var html = "";

    if (resp.alerts) {
      var alerts = resp.alerts;

      for (var i = 0; i < alerts.length; i++) {
        if (i % 3 == 0) {
          if (i != 0) {
            html += '</div>';
          }

          html += '<div class="row text-center">';
        }

        html += '<div class="col-md-4">';
        html += '<h4 class="my-3">Alert Source: ' + alerts[i].sender_name + '</h4>';
        html += '<h4 class="my-3">Alert Name: ' + alerts[i].event + '</h4>';
        html += '<h4 class="my-3">Alert Description: ' + alerts[i].description + '</h4>';
        var day = "";
        var time = alerts[i].start;
        var date = new Date(time * 1000);
        var hours = date.getHours();

        if (hours >= 12) {
          hours -= 12;
          day = "pm";
        } else {
          day = "am";
        }

        var mins = "0" + date.getMinutes();
        var secs = "0" + date.getSeconds();
        var t = hours + ':' + mins.substr(-2) + ':' + secs.substr(-2);
        html += '<h4 class="my-3">Alert Start Time: ' + t + ' ' + day + '</h4';
        var endDay = "";
        var endTime = alerts[i].end;
        var endDate = new Date(endTime * 1000);
        var endHours = endDate.getHours();

        if (endHours >= 12) {
          endHours -= 12;
          endDay = "pm";
        } else {
          endDay = "am";
        }

        var endMins = "0" + endDate.getMinutes();
        var endSecs = "0" + endDate.getSeconds();
        var t1 = endHours + ':' + endMins.substr(-2) + ':' + endSecs.substr(-2);
        html += '<h4 class="my-3">Alert End Time: ' + t1 + ' ' + endDay + '</h4';
        html += "</div>";
      }

      if (alerts.length - 1 % 3 != 0) {
        html += '</div>';
      }
    } else {
      html += '<div class="row text-center"><h4 class="my-3">No Active Weather Alerts</h4></div>';
    }

    document.getElementById("alerts").innerHTML = html;
  });
};
},{}],"output/DocumentEvent/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

module.exports = {
  addEvent: $foreign.addEvent,
  clickEvent: $foreign.clickEvent,
  inputEvent: $foreign.inputEvent,
  getPosition: $foreign.getPosition,
  getMinuteWeather: $foreign.getMinuteWeather,
  getHourlyWeather: $foreign.getHourlyWeather,
  getDailyWeather: $foreign.getDailyWeather,
  getAlerts: $foreign.getAlerts
};
},{"./foreign.js":"output/DocumentEvent/foreign.js"}],"output/Effect.Console/foreign.js":[function(require,module,exports) {
"use strict";

exports.log = function (s) {
  return function () {
    console.log(s);
  };
};

exports.warn = function (s) {
  return function () {
    console.warn(s);
  };
};

exports.error = function (s) {
  return function () {
    console.error(s);
  };
};

exports.info = function (s) {
  return function () {
    console.info(s);
  };
};

exports.time = function (s) {
  return function () {
    console.time(s);
  };
};

exports.timeLog = function (s) {
  return function () {
    console.timeLog(s);
  };
};

exports.timeEnd = function (s) {
  return function () {
    console.timeEnd(s);
  };
};

exports.clear = function () {
  console.clear();
};
},{}],"output/Effect.Console/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Data_Show = require("../Data.Show/index.js");

var warnShow = function warnShow(dictShow) {
  return function (a) {
    return $foreign.warn(Data_Show.show(dictShow)(a));
  };
};

var logShow = function logShow(dictShow) {
  return function (a) {
    return $foreign.log(Data_Show.show(dictShow)(a));
  };
};

var infoShow = function infoShow(dictShow) {
  return function (a) {
    return $foreign.info(Data_Show.show(dictShow)(a));
  };
};

var errorShow = function errorShow(dictShow) {
  return function (a) {
    return $foreign.error(Data_Show.show(dictShow)(a));
  };
};

module.exports = {
  logShow: logShow,
  warnShow: warnShow,
  errorShow: errorShow,
  infoShow: infoShow,
  log: $foreign.log,
  warn: $foreign.warn,
  error: $foreign.error,
  info: $foreign.info,
  time: $foreign.time,
  timeLog: $foreign.timeLog,
  timeEnd: $foreign.timeEnd,
  clear: $foreign.clear
};
},{"./foreign.js":"output/Effect.Console/foreign.js","../Data.Show/index.js":"output/Data.Show/index.js"}],"output/Effect.Class.Console/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Effect_Class = require("../Effect.Class/index.js");

var Effect_Console = require("../Effect.Console/index.js");

var warnShow = function warnShow(dictMonadEffect) {
  return function (dictShow) {
    var $16 = Effect_Class.liftEffect(dictMonadEffect);
    var $17 = Effect_Console.warnShow(dictShow);
    return function ($18) {
      return $16($17($18));
    };
  };
};

var warn = function warn(dictMonadEffect) {
  var $19 = Effect_Class.liftEffect(dictMonadEffect);
  return function ($20) {
    return $19(Effect_Console.warn($20));
  };
};

var timeLog = function timeLog(dictMonadEffect) {
  var $21 = Effect_Class.liftEffect(dictMonadEffect);
  return function ($22) {
    return $21(Effect_Console.timeLog($22));
  };
};

var timeEnd = function timeEnd(dictMonadEffect) {
  var $23 = Effect_Class.liftEffect(dictMonadEffect);
  return function ($24) {
    return $23(Effect_Console.timeEnd($24));
  };
};

var time = function time(dictMonadEffect) {
  var $25 = Effect_Class.liftEffect(dictMonadEffect);
  return function ($26) {
    return $25(Effect_Console.time($26));
  };
};

var logShow = function logShow(dictMonadEffect) {
  return function (dictShow) {
    var $27 = Effect_Class.liftEffect(dictMonadEffect);
    var $28 = Effect_Console.logShow(dictShow);
    return function ($29) {
      return $27($28($29));
    };
  };
};

var log = function log(dictMonadEffect) {
  var $30 = Effect_Class.liftEffect(dictMonadEffect);
  return function ($31) {
    return $30(Effect_Console.log($31));
  };
};

var infoShow = function infoShow(dictMonadEffect) {
  return function (dictShow) {
    var $32 = Effect_Class.liftEffect(dictMonadEffect);
    var $33 = Effect_Console.infoShow(dictShow);
    return function ($34) {
      return $32($33($34));
    };
  };
};

var info = function info(dictMonadEffect) {
  var $35 = Effect_Class.liftEffect(dictMonadEffect);
  return function ($36) {
    return $35(Effect_Console.info($36));
  };
};

var errorShow = function errorShow(dictMonadEffect) {
  return function (dictShow) {
    var $37 = Effect_Class.liftEffect(dictMonadEffect);
    var $38 = Effect_Console.errorShow(dictShow);
    return function ($39) {
      return $37($38($39));
    };
  };
};

var error = function error(dictMonadEffect) {
  var $40 = Effect_Class.liftEffect(dictMonadEffect);
  return function ($41) {
    return $40(Effect_Console.error($41));
  };
};

var clear = function clear(dictMonadEffect) {
  return Effect_Class.liftEffect(dictMonadEffect)(Effect_Console.clear);
};

module.exports = {
  log: log,
  logShow: logShow,
  warn: warn,
  warnShow: warnShow,
  error: error,
  errorShow: errorShow,
  info: info,
  infoShow: infoShow,
  time: time,
  timeLog: timeLog,
  timeEnd: timeEnd,
  clear: clear
};
},{"../Effect.Class/index.js":"output/Effect.Class/index.js","../Effect.Console/index.js":"output/Effect.Console/index.js"}],"output/Web.DOM.Element/foreign.js":[function(require,module,exports) {
"use strict";

var getProp = function getProp(name) {
  return function (doctype) {
    return doctype[name];
  };
};

exports._namespaceURI = getProp("namespaceURI");
exports._prefix = getProp("prefix");
exports.localName = getProp("localName");
exports.tagName = getProp("tagName");

exports.id = function (node) {
  return function () {
    return node.id;
  };
};

exports.setId = function (id) {
  return function (node) {
    return function () {
      node.id = id;
    };
  };
};

exports.className = function (node) {
  return function () {
    return node.className;
  };
};

exports.classList = function (element) {
  return function () {
    return element.classList;
  };
};

exports.setClassName = function (className) {
  return function (node) {
    return function () {
      node.className = className;
    };
  };
};

exports.getElementsByTagName = function (localName) {
  return function (doc) {
    return function () {
      return doc.getElementsByTagName(localName);
    };
  };
};

exports._getElementsByTagNameNS = function (ns) {
  return function (localName) {
    return function (doc) {
      return function () {
        return doc.getElementsByTagNameNS(ns, localName);
      };
    };
  };
};

exports.getElementsByClassName = function (classNames) {
  return function (doc) {
    return function () {
      return doc.getElementsByClassName(classNames);
    };
  };
};

exports.setAttribute = function (name) {
  return function (value) {
    return function (element) {
      return function () {
        element.setAttribute(name, value);
      };
    };
  };
};

exports._getAttribute = function (name) {
  return function (element) {
    return function () {
      return element.getAttribute(name);
    };
  };
};

exports.hasAttribute = function (name) {
  return function (element) {
    return function () {
      return element.hasAttribute(name);
    };
  };
};

exports.removeAttribute = function (name) {
  return function (element) {
    return function () {
      element.removeAttribute(name);
    };
  };
};

exports.matches = function (selector) {
  return function (element) {
    return function () {
      return element.matches(selector);
    };
  };
};

exports._closest = function (selector) {
  return function (element) {
    return function () {
      return element.closest(selector);
    };
  };
}; // - CSSOM ---------------------------------------------------------------------


exports.scrollTop = function (node) {
  return function () {
    return node.scrollTop;
  };
};

exports.setScrollTop = function (scrollTop) {
  return function (node) {
    return function () {
      node.scrollTop = scrollTop;
    };
  };
};

exports.scrollLeft = function (node) {
  return function () {
    return node.scrollLeft;
  };
};

exports.setScrollLeft = function (scrollLeft) {
  return function (node) {
    return function () {
      node.scrollLeft = scrollLeft;
    };
  };
};

exports.scrollWidth = function (el) {
  return function () {
    return el.scrollWidth;
  };
};

exports.scrollHeight = function (el) {
  return function () {
    return el.scrollHeight;
  };
};

exports.clientTop = function (el) {
  return function () {
    return el.clientTop;
  };
};

exports.clientLeft = function (el) {
  return function () {
    return el.clientLeft;
  };
};

exports.clientWidth = function (el) {
  return function () {
    return el.clientWidth;
  };
};

exports.clientHeight = function (el) {
  return function () {
    return el.clientHeight;
  };
};

exports._attachShadow = function (props) {
  return function (el) {
    return function () {
      return el.attachShadow(props);
    };
  };
};
},{}],"output/Web.DOM.Internal.Types/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

module.exports = {};
},{}],"output/Web.DOM.ParentNode/foreign.js":[function(require,module,exports) {
"use strict";

var getEffProp = function getEffProp(name) {
  return function (node) {
    return function () {
      return node[name];
    };
  };
};

exports.children = getEffProp("children");
exports._firstElementChild = getEffProp("firstElementChild");
exports._lastElementChild = getEffProp("lastElementChild");
exports.childElementCount = getEffProp("childElementCount");

exports._querySelector = function (selector) {
  return function (node) {
    return function () {
      return node.querySelector(selector);
    };
  };
};

exports.querySelectorAll = function (selector) {
  return function (node) {
    return function () {
      return node.querySelectorAll(selector);
    };
  };
};
},{}],"output/Web.DOM.ParentNode/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Effect = require("../Effect/index.js");

var QuerySelector = function QuerySelector(x) {
  return x;
};

var querySelector = function querySelector(qs) {
  var $0 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  var $1 = $foreign["_querySelector"](qs);
  return function ($2) {
    return $0($1($2));
  };
};

var ordQuerySelector = Data_Ord.ordString;
var newtypeQuerySelector = {
  Coercible0: function Coercible0() {
    return undefined;
  }
};

var lastElementChild = function () {
  var $3 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($4) {
    return $3($foreign["_lastElementChild"]($4));
  };
}();

var firstElementChild = function () {
  var $5 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($6) {
    return $5($foreign["_firstElementChild"]($6));
  };
}();

var eqQuerySelector = Data_Eq.eqString;
module.exports = {
  firstElementChild: firstElementChild,
  lastElementChild: lastElementChild,
  QuerySelector: QuerySelector,
  querySelector: querySelector,
  eqQuerySelector: eqQuerySelector,
  ordQuerySelector: ordQuerySelector,
  newtypeQuerySelector: newtypeQuerySelector,
  children: $foreign.children,
  childElementCount: $foreign.childElementCount,
  querySelectorAll: $foreign.querySelectorAll
};
},{"./foreign.js":"output/Web.DOM.ParentNode/foreign.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Nullable/index.js":"output/Data.Nullable/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Effect/index.js":"output/Effect/index.js"}],"output/Web.DOM.ShadowRoot/foreign.js":[function(require,module,exports) {
"use strict";

exports._mode = function (el) {
  return el.mode;
};

exports.host = function (el) {
  return function () {
    return el.host;
  };
};
},{}],"output/Web.DOM.ShadowRoot/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Open = function () {
  function Open() {}

  ;
  Open.value = new Open();
  return Open;
}();

var Closed = function () {
  function Closed() {}

  ;
  Closed.value = new Closed();
  return Closed;
}();

var toNode = Unsafe_Coerce.unsafeCoerce;
var showShadowRootMode = {
  show: function show(v) {
    if (v instanceof Open) {
      return "open";
    }

    ;

    if (v instanceof Closed) {
      return "closed";
    }

    ;
    throw new Error("Failed pattern match at Web.DOM.ShadowRoot (line 22, column 1 - line 24, column 25): " + [v.constructor.name]);
  }
};

var mode = function () {
  var modeFromString = function modeFromString(v) {
    if (v === "open") {
      return new Data_Maybe.Just(Open.value);
    }

    ;

    if (v === "closed") {
      return new Data_Maybe.Just(Closed.value);
    }

    ;
    return Data_Maybe.Nothing.value;
  };

  return function ($4) {
    return modeFromString($foreign["_mode"]($4));
  };
}();

module.exports = {
  Open: Open,
  Closed: Closed,
  toNode: toNode,
  mode: mode,
  showShadowRootMode: showShadowRootMode,
  host: $foreign.host
};
},{"./foreign.js":"output/Web.DOM.ShadowRoot/foreign.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js"}],"output/Web.Internal.FFI/foreign.js":[function(require,module,exports) {
"use strict";

exports._unsafeReadProtoTagged = function (nothing, just, name, value) {
  if (typeof window !== "undefined") {
    var ty = window[name];

    if (ty != null && value instanceof ty) {
      return just(value);
    }
  }

  var obj = value;

  while (obj != null) {
    var proto = Object.getPrototypeOf(obj);
    var constructorName = proto.constructor.name;

    if (constructorName === name) {
      return just(value);
    } else if (constructorName === "Object") {
      return nothing;
    }

    obj = proto;
  }

  return nothing;
};
},{}],"output/Web.Internal.FFI/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var unsafeReadProtoTagged = function unsafeReadProtoTagged(name) {
  return function (value) {
    return $foreign["_unsafeReadProtoTagged"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, name, value);
  };
};

module.exports = {
  unsafeReadProtoTagged: unsafeReadProtoTagged
};
},{"./foreign.js":"output/Web.Internal.FFI/foreign.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js"}],"output/Web.DOM.Element/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Data_Show = require("../Data.Show/index.js");

var Effect = require("../Effect/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM_Internal_Types = require("../Web.DOM.Internal.Types/index.js");

var Web_DOM_ParentNode = require("../Web.DOM.ParentNode/index.js");

var Web_DOM_ShadowRoot = require("../Web.DOM.ShadowRoot/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;

var prefix = function prefix($0) {
  return Data_Nullable.toMaybe($foreign["_prefix"]($0));
};

var namespaceURI = function namespaceURI($1) {
  return Data_Nullable.toMaybe($foreign["_namespaceURI"]($1));
};

var initToProps = function initToProps(init) {
  return {
    mode: Data_Show.show(Web_DOM_ShadowRoot.showShadowRootMode)(init.mode),
    delegatesFocus: init.delegatesFocus
  };
};

var getElementsByTagNameNS = function getElementsByTagNameNS($2) {
  return $foreign["_getElementsByTagNameNS"](Data_Nullable.toNullable($2));
};

var getAttribute = function getAttribute(attr) {
  var $3 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  var $4 = $foreign["_getAttribute"](attr);
  return function ($5) {
    return $3($4($5));
  };
};

var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("Element");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("Element");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("Element");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("Element");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("Element");

var closest = function closest(qs) {
  var $6 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  var $7 = $foreign["_closest"](qs);
  return function ($8) {
    return $6($7($8));
  };
};

var attachShadow = function attachShadow($9) {
  return $foreign["_attachShadow"](initToProps($9));
};

module.exports = {
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  namespaceURI: namespaceURI,
  prefix: prefix,
  getElementsByTagNameNS: getElementsByTagNameNS,
  getAttribute: getAttribute,
  closest: closest,
  attachShadow: attachShadow,
  localName: $foreign.localName,
  tagName: $foreign.tagName,
  id: $foreign.id,
  setId: $foreign.setId,
  className: $foreign.className,
  classList: $foreign.classList,
  setClassName: $foreign.setClassName,
  getElementsByTagName: $foreign.getElementsByTagName,
  getElementsByClassName: $foreign.getElementsByClassName,
  setAttribute: $foreign.setAttribute,
  hasAttribute: $foreign.hasAttribute,
  removeAttribute: $foreign.removeAttribute,
  matches: $foreign.matches,
  scrollTop: $foreign.scrollTop,
  setScrollTop: $foreign.setScrollTop,
  scrollLeft: $foreign.scrollLeft,
  setScrollLeft: $foreign.setScrollLeft,
  scrollWidth: $foreign.scrollWidth,
  scrollHeight: $foreign.scrollHeight,
  clientTop: $foreign.clientTop,
  clientLeft: $foreign.clientLeft,
  clientWidth: $foreign.clientWidth,
  clientHeight: $foreign.clientHeight
};
},{"./foreign.js":"output/Web.DOM.Element/foreign.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Nullable/index.js":"output/Data.Nullable/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Effect/index.js":"output/Effect/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM.Internal.Types/index.js":"output/Web.DOM.Internal.Types/index.js","../Web.DOM.ParentNode/index.js":"output/Web.DOM.ParentNode/index.js","../Web.DOM.ShadowRoot/index.js":"output/Web.DOM.ShadowRoot/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.DOM.Node/foreign.js":[function(require,module,exports) {
"use strict";

var getEffProp = function getEffProp(name) {
  return function (node) {
    return function () {
      return node[name];
    };
  };
};

exports.nodeTypeIndex = function (node) {
  return node.nodeType;
};

exports.nodeName = function (node) {
  return node.nodeName;
};

exports.baseURI = getEffProp("baseURI");
exports._ownerDocument = getEffProp("ownerDocument");
exports._parentNode = getEffProp("parentNode");
exports._parentElement = getEffProp("parentElement");

exports.hasChildNodes = function (node) {
  return function () {
    return node.hasChildNodes();
  };
};

exports.childNodes = getEffProp("childNodes");
exports._firstChild = getEffProp("firstChild");
exports._lastChild = getEffProp("lastChild");
exports._previousSibling = getEffProp("previousSibling");
exports._nextSibling = getEffProp("nextSibling");
exports._nodeValue = getEffProp("nodeValue");

exports.setNodeValue = function (value) {
  return function (node) {
    return function () {
      node.nodeValue = value;
    };
  };
};

exports.textContent = getEffProp("textContent");

exports.setTextContent = function (value) {
  return function (node) {
    return function () {
      node.textContent = value;
    };
  };
};

exports.normalize = function (node) {
  return function () {
    node.normalize();
  };
};

exports.clone = function (node) {
  return function () {
    return node.cloneNode(false);
  };
};

exports.deepClone = function (node) {
  return function () {
    return node.cloneNode(true);
  };
};

exports.isEqualNode = function (node1) {
  return function (node2) {
    return function () {
      return node1.isEqualNode(node2);
    };
  };
};

exports.compareDocumentPositionBits = function (node1) {
  return function (node2) {
    return function () {
      return node1.compareDocumentPosition(node2);
    };
  };
};

exports.contains = function (node1) {
  return function (node2) {
    return function () {
      return node1.contains(node2);
    };
  };
};

exports._lookupPrefix = function (prefix) {
  return function (node) {
    return function () {
      return node.lookupPrefix(prefix);
    };
  };
};

exports._lookupNamespaceURI = function (ns) {
  return function (node) {
    return function () {
      return node.lookupNamespaceURI(ns);
    };
  };
};

exports.isDefaultNamespace = function (ns) {
  return function (node) {
    return function () {
      return node.isDefaultNamespace(ns);
    };
  };
};

exports.insertBefore = function (node1) {
  return function (node2) {
    return function (parent) {
      return function () {
        parent.insertBefore(node1, node2);
      };
    };
  };
};

exports.appendChild = function (node) {
  return function (parent) {
    return function () {
      parent.appendChild(node);
    };
  };
};

exports.replaceChild = function (newChild) {
  return function (oldChild) {
    return function (parent) {
      return function () {
        parent.replaceChild(newChild, oldChild);
      };
    };
  };
};

exports.removeChild = function (node) {
  return function (parent) {
    return function () {
      parent.removeChild(node);
    };
  };
};
},{}],"output/Data.Enum/foreign.js":[function(require,module,exports) {
"use strict";

exports.toCharCode = function (c) {
  return c.charCodeAt(0);
};

exports.fromCharCode = function (c) {
  return String.fromCharCode(c);
};
},{}],"output/Control.Alternative/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var guard = function guard(dictAlternative) {
  return function (v) {
    if (v) {
      return Control_Applicative.pure(dictAlternative.Applicative0())(Data_Unit.unit);
    }

    ;

    if (!v) {
      return Control_Plus.empty(dictAlternative.Plus1());
    }

    ;
    throw new Error("Failed pattern match at Control.Alternative (line 48, column 1 - line 48, column 54): " + [v.constructor.name]);
  };
};

var alternativeArray = {
  Applicative0: function Applicative0() {
    return Control_Applicative.applicativeArray;
  },
  Plus1: function Plus1() {
    return Control_Plus.plusArray;
  }
};
module.exports = {
  guard: guard,
  alternativeArray: alternativeArray,
  alt: Control_Alt.alt,
  liftA1: Control_Applicative.liftA1,
  pure: Control_Applicative.pure,
  unless: Control_Applicative.unless,
  when: Control_Applicative.when,
  apply: Control_Apply.apply,
  empty: Control_Plus.empty,
  map: Data_Functor.map,
  "void": Data_Functor["void"]
};
},{"../Control.Alt/index.js":"output/Control.Alt/index.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Plus/index.js":"output/Control.Plus/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js"}],"output/Data.Enum/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Data_Boolean = require("../Data.Boolean/index.js");

var Data_Bounded = require("../Data.Bounded/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unfoldable = require("../Data.Unfoldable/index.js");

var Data_Unfoldable1 = require("../Data.Unfoldable1/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Cardinality = function Cardinality(x) {
  return x;
};

var toEnum = function toEnum(dict) {
  return dict.toEnum;
};

var _succ = function succ(dict) {
  return dict.succ;
};

var upFromIncluding = function upFromIncluding(dictEnum) {
  return function (dictUnfoldable1) {
    return Data_Unfoldable1.unfoldr1(dictUnfoldable1)(Control_Apply.apply(Control_Apply.applyFn)(Data_Tuple.Tuple.create)(_succ(dictEnum)));
  };
};

var showCardinality = {
  show: function show(v) {
    return "(Cardinality " + (Data_Show.show(Data_Show.showInt)(v) + ")");
  }
};

var _pred = function pred(dict) {
  return dict.pred;
};

var ordCardinality = Data_Ord.ordInt;
var newtypeCardinality = {
  Coercible0: function Coercible0() {
    return undefined;
  }
};

var fromEnum = function fromEnum(dict) {
  return dict.fromEnum;
};

var toEnumWithDefaults = function toEnumWithDefaults(dictBoundedEnum) {
  return function (low) {
    return function (high) {
      return function (x) {
        var v = toEnum(dictBoundedEnum)(x);

        if (v instanceof Data_Maybe.Just) {
          return v.value0;
        }

        ;

        if (v instanceof Data_Maybe.Nothing) {
          var $54 = x < fromEnum(dictBoundedEnum)(Data_Bounded.bottom(dictBoundedEnum.Bounded0()));

          if ($54) {
            return low;
          }

          ;
          return high;
        }

        ;
        throw new Error("Failed pattern match at Data.Enum (line 158, column 33 - line 160, column 62): " + [v.constructor.name]);
      };
    };
  };
};

var eqCardinality = Data_Eq.eqInt;
var enumUnit = {
  succ: Data_Function["const"](Data_Maybe.Nothing.value),
  pred: Data_Function["const"](Data_Maybe.Nothing.value),
  Ord0: function Ord0() {
    return Data_Ord.ordUnit;
  }
};

var enumTuple = function enumTuple(dictEnum) {
  return function (dictBoundedEnum) {
    return {
      succ: function succ(v) {
        return Data_Maybe.maybe(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Function.flip(Data_Tuple.Tuple.create)(Data_Bounded.bottom(dictBoundedEnum.Bounded0())))(_succ(dictEnum)(v.value0)))(function () {
          var $97 = Data_Tuple.Tuple.create(v.value0);
          return function ($98) {
            return Data_Maybe.Just.create($97($98));
          };
        }())(_succ(dictBoundedEnum.Enum1())(v.value1));
      },
      pred: function pred(v) {
        return Data_Maybe.maybe(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Function.flip(Data_Tuple.Tuple.create)(Data_Bounded.top(dictBoundedEnum.Bounded0())))(_pred(dictEnum)(v.value0)))(function () {
          var $99 = Data_Tuple.Tuple.create(v.value0);
          return function ($100) {
            return Data_Maybe.Just.create($99($100));
          };
        }())(_pred(dictBoundedEnum.Enum1())(v.value1));
      },
      Ord0: function Ord0() {
        return Data_Tuple.ordTuple(dictEnum.Ord0())(dictBoundedEnum.Enum1().Ord0());
      }
    };
  };
};

var enumOrdering = {
  succ: function succ(v) {
    if (v instanceof Data_Ordering.LT) {
      return new Data_Maybe.Just(Data_Ordering.EQ.value);
    }

    ;

    if (v instanceof Data_Ordering.EQ) {
      return new Data_Maybe.Just(Data_Ordering.GT.value);
    }

    ;

    if (v instanceof Data_Ordering.GT) {
      return Data_Maybe.Nothing.value;
    }

    ;
    throw new Error("Failed pattern match at Data.Enum (line 72, column 1 - line 78, column 20): " + [v.constructor.name]);
  },
  pred: function pred(v) {
    if (v instanceof Data_Ordering.LT) {
      return Data_Maybe.Nothing.value;
    }

    ;

    if (v instanceof Data_Ordering.EQ) {
      return new Data_Maybe.Just(Data_Ordering.LT.value);
    }

    ;

    if (v instanceof Data_Ordering.GT) {
      return new Data_Maybe.Just(Data_Ordering.EQ.value);
    }

    ;
    throw new Error("Failed pattern match at Data.Enum (line 72, column 1 - line 78, column 20): " + [v.constructor.name]);
  },
  Ord0: function Ord0() {
    return Data_Ord.ordOrdering;
  }
};

var enumMaybe = function enumMaybe(dictBoundedEnum) {
  return {
    succ: function succ(v) {
      if (v instanceof Data_Maybe.Nothing) {
        return new Data_Maybe.Just(new Data_Maybe.Just(Data_Bounded.bottom(dictBoundedEnum.Bounded0())));
      }

      ;

      if (v instanceof Data_Maybe.Just) {
        return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Maybe.Just.create)(_succ(dictBoundedEnum.Enum1())(v.value0));
      }

      ;
      throw new Error("Failed pattern match at Data.Enum (line 80, column 1 - line 84, column 32): " + [v.constructor.name]);
    },
    pred: function pred(v) {
      if (v instanceof Data_Maybe.Nothing) {
        return Data_Maybe.Nothing.value;
      }

      ;

      if (v instanceof Data_Maybe.Just) {
        return new Data_Maybe.Just(_pred(dictBoundedEnum.Enum1())(v.value0));
      }

      ;
      throw new Error("Failed pattern match at Data.Enum (line 80, column 1 - line 84, column 32): " + [v.constructor.name]);
    },
    Ord0: function Ord0() {
      return Data_Maybe.ordMaybe(dictBoundedEnum.Enum1().Ord0());
    }
  };
};

var enumInt = {
  succ: function succ(n) {
    var $67 = n < Data_Bounded.top(Data_Bounded.boundedInt);

    if ($67) {
      return new Data_Maybe.Just(n + 1 | 0);
    }

    ;
    return Data_Maybe.Nothing.value;
  },
  pred: function pred(n) {
    var $68 = n > Data_Bounded.bottom(Data_Bounded.boundedInt);

    if ($68) {
      return new Data_Maybe.Just(n - 1 | 0);
    }

    ;
    return Data_Maybe.Nothing.value;
  },
  Ord0: function Ord0() {
    return Data_Ord.ordInt;
  }
};

var enumFromTo = function enumFromTo(dictEnum) {
  return function (dictUnfoldable1) {
    var go = function go(step) {
      return function (op) {
        return function (to) {
          return function (a) {
            return new Data_Tuple.Tuple(a, Control_Bind.bind(Data_Maybe.bindMaybe)(step(a))(function (a$prime) {
              return Data_Functor.voidLeft(Data_Maybe.functorMaybe)(Control_Alternative.guard(Data_Maybe.alternativeMaybe)(op(a$prime)(to)))(a$prime);
            }));
          };
        };
      };
    };

    return function (v) {
      return function (v1) {
        if (Data_Eq.eq(dictEnum.Ord0().Eq0())(v)(v1)) {
          return Data_Unfoldable1.singleton(dictUnfoldable1)(v);
        }

        ;

        if (Data_Ord.lessThan(dictEnum.Ord0())(v)(v1)) {
          return Data_Unfoldable1.unfoldr1(dictUnfoldable1)(go(_succ(dictEnum))(Data_Ord.lessThanOrEq(dictEnum.Ord0()))(v1))(v);
        }

        ;

        if (Data_Boolean.otherwise) {
          return Data_Unfoldable1.unfoldr1(dictUnfoldable1)(go(_pred(dictEnum))(Data_Ord.greaterThanOrEq(dictEnum.Ord0()))(v1))(v);
        }

        ;
        throw new Error("Failed pattern match at Data.Enum (line 186, column 14 - line 190, column 51): " + [v.constructor.name, v1.constructor.name]);
      };
    };
  };
};

var enumFromThenTo = function enumFromThenTo(dictUnfoldable) {
  return function (dictFunctor) {
    return function (dictBoundedEnum) {
      var go = function go(step) {
        return function (to) {
          return function (e) {
            if (e <= to) {
              return new Data_Maybe.Just(new Data_Tuple.Tuple(e, e + step | 0));
            }

            ;

            if (Data_Boolean.otherwise) {
              return Data_Maybe.Nothing.value;
            }

            ;
            throw new Error("Failed pattern match at Data.Enum (line 217, column 5 - line 219, column 28): " + [step.constructor.name, to.constructor.name, e.constructor.name]);
          };
        };
      };

      return function (a) {
        return function (b) {
          return function (c) {
            var c$prime = fromEnum(dictBoundedEnum)(c);
            var b$prime = fromEnum(dictBoundedEnum)(b);
            var a$prime = fromEnum(dictBoundedEnum)(a);
            return Data_Functor.map(dictFunctor)(function () {
              var $101 = Data_Maybe.fromJust();
              var $102 = toEnum(dictBoundedEnum);
              return function ($103) {
                return $101($102($103));
              };
            }())(Data_Unfoldable.unfoldr(dictUnfoldable)(go(b$prime - a$prime | 0)(c$prime))(a$prime));
          };
        };
      };
    };
  };
};

var enumEither = function enumEither(dictBoundedEnum) {
  return function (dictBoundedEnum1) {
    return {
      succ: function succ(v) {
        if (v instanceof Data_Either.Left) {
          return Data_Maybe.maybe(new Data_Maybe.Just(new Data_Either.Right(Data_Bounded.bottom(dictBoundedEnum1.Bounded0()))))(function ($104) {
            return Data_Maybe.Just.create(Data_Either.Left.create($104));
          })(_succ(dictBoundedEnum.Enum1())(v.value0));
        }

        ;

        if (v instanceof Data_Either.Right) {
          return Data_Maybe.maybe(Data_Maybe.Nothing.value)(function ($105) {
            return Data_Maybe.Just.create(Data_Either.Right.create($105));
          })(_succ(dictBoundedEnum1.Enum1())(v.value0));
        }

        ;
        throw new Error("Failed pattern match at Data.Enum (line 86, column 1 - line 90, column 69): " + [v.constructor.name]);
      },
      pred: function pred(v) {
        if (v instanceof Data_Either.Left) {
          return Data_Maybe.maybe(Data_Maybe.Nothing.value)(function ($106) {
            return Data_Maybe.Just.create(Data_Either.Left.create($106));
          })(_pred(dictBoundedEnum.Enum1())(v.value0));
        }

        ;

        if (v instanceof Data_Either.Right) {
          return Data_Maybe.maybe(new Data_Maybe.Just(new Data_Either.Left(Data_Bounded.top(dictBoundedEnum.Bounded0()))))(function ($107) {
            return Data_Maybe.Just.create(Data_Either.Right.create($107));
          })(_pred(dictBoundedEnum1.Enum1())(v.value0));
        }

        ;
        throw new Error("Failed pattern match at Data.Enum (line 86, column 1 - line 90, column 69): " + [v.constructor.name]);
      },
      Ord0: function Ord0() {
        return Data_Either.ordEither(dictBoundedEnum.Enum1().Ord0())(dictBoundedEnum1.Enum1().Ord0());
      }
    };
  };
};

var enumBoolean = {
  succ: function succ(v) {
    if (!v) {
      return new Data_Maybe.Just(true);
    }

    ;
    return Data_Maybe.Nothing.value;
  },
  pred: function pred(v) {
    if (v) {
      return new Data_Maybe.Just(false);
    }

    ;
    return Data_Maybe.Nothing.value;
  },
  Ord0: function Ord0() {
    return Data_Ord.ordBoolean;
  }
};

var downFromIncluding = function downFromIncluding(dictEnum) {
  return function (dictUnfoldable1) {
    return Data_Unfoldable1.unfoldr1(dictUnfoldable1)(Control_Apply.apply(Control_Apply.applyFn)(Data_Tuple.Tuple.create)(_pred(dictEnum)));
  };
};

var diag = function diag(a) {
  return new Data_Tuple.Tuple(a, a);
};

var downFrom = function downFrom(dictEnum) {
  return function (dictUnfoldable) {
    return Data_Unfoldable.unfoldr(dictUnfoldable)(function () {
      var $108 = Data_Functor.map(Data_Maybe.functorMaybe)(diag);

      var $109 = _pred(dictEnum);

      return function ($110) {
        return $108($109($110));
      };
    }());
  };
};

var upFrom = function upFrom(dictEnum) {
  return function (dictUnfoldable) {
    return Data_Unfoldable.unfoldr(dictUnfoldable)(function () {
      var $111 = Data_Functor.map(Data_Maybe.functorMaybe)(diag);

      var $112 = _succ(dictEnum);

      return function ($113) {
        return $111($112($113));
      };
    }());
  };
};

var defaultToEnum = function defaultToEnum(dictBounded) {
  return function (dictEnum) {
    return function (i$prime) {
      var go = function go($copy_i) {
        return function ($copy_x) {
          var $tco_var_i = $copy_i;
          var $tco_done = false;
          var $tco_result;

          function $tco_loop(i, x) {
            var $82 = i === 0;

            if ($82) {
              $tco_done = true;
              return new Data_Maybe.Just(x);
            }

            ;

            var v = _succ(dictEnum)(x);

            if (v instanceof Data_Maybe.Just) {
              $tco_var_i = i - 1 | 0;
              $copy_x = v.value0;
              return;
            }

            ;

            if (v instanceof Data_Maybe.Nothing) {
              $tco_done = true;
              return Data_Maybe.Nothing.value;
            }

            ;
            throw new Error("Failed pattern match at Data.Enum (line 296, column 12 - line 298, column 33): " + [v.constructor.name]);
          }

          ;

          while (!$tco_done) {
            $tco_result = $tco_loop($tco_var_i, $copy_x);
          }

          ;
          return $tco_result;
        };
      };

      var $85 = i$prime < 0;

      if ($85) {
        return Data_Maybe.Nothing.value;
      }

      ;
      return go(i$prime)(Data_Bounded.bottom(dictBounded));
    };
  };
};

var defaultSucc = function defaultSucc(toEnum$prime) {
  return function (fromEnum$prime) {
    return function (a) {
      return toEnum$prime(fromEnum$prime(a) + 1 | 0);
    };
  };
};

var defaultPred = function defaultPred(toEnum$prime) {
  return function (fromEnum$prime) {
    return function (a) {
      return toEnum$prime(fromEnum$prime(a) - 1 | 0);
    };
  };
};

var defaultFromEnum = function defaultFromEnum(dictEnum) {
  var go = function go($copy_i) {
    return function ($copy_x) {
      var $tco_var_i = $copy_i;
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(i, x) {
        var v = _pred(dictEnum)(x);

        if (v instanceof Data_Maybe.Just) {
          $tco_var_i = i + 1 | 0;
          $copy_x = v.value0;
          return;
        }

        ;

        if (v instanceof Data_Maybe.Nothing) {
          $tco_done = true;
          return i;
        }

        ;
        throw new Error("Failed pattern match at Data.Enum (line 309, column 5 - line 311, column 19): " + [v.constructor.name]);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_i, $copy_x);
      }

      ;
      return $tco_result;
    };
  };

  return go(0);
};

var defaultCardinality = function defaultCardinality(dictBounded) {
  return function (dictEnum) {
    var go = function go($copy_i) {
      return function ($copy_x) {
        var $tco_var_i = $copy_i;
        var $tco_done = false;
        var $tco_result;

        function $tco_loop(i, x) {
          var v = _succ(dictEnum)(x);

          if (v instanceof Data_Maybe.Just) {
            $tco_var_i = i + 1 | 0;
            $copy_x = v.value0;
            return;
          }

          ;

          if (v instanceof Data_Maybe.Nothing) {
            $tco_done = true;
            return i;
          }

          ;
          throw new Error("Failed pattern match at Data.Enum (line 276, column 5 - line 278, column 19): " + [v.constructor.name]);
        }

        ;

        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_i, $copy_x);
        }

        ;
        return $tco_result;
      };
    };

    return go(1)(Data_Bounded.bottom(dictBounded));
  };
};

var charToEnum = function charToEnum(v) {
  if (v >= Data_Bounded.bottom(Data_Bounded.boundedInt) && v <= Data_Bounded.top(Data_Bounded.boundedInt)) {
    return new Data_Maybe.Just($foreign.fromCharCode(v));
  }

  ;
  return Data_Maybe.Nothing.value;
};

var enumChar = {
  succ: defaultSucc(charToEnum)($foreign.toCharCode),
  pred: defaultPred(charToEnum)($foreign.toCharCode),
  Ord0: function Ord0() {
    return Data_Ord.ordChar;
  }
};

var cardinality = function cardinality(dict) {
  return dict.cardinality;
};

var boundedEnumUnit = {
  cardinality: 1,
  toEnum: function toEnum(v) {
    if (v === 0) {
      return new Data_Maybe.Just(Data_Unit.unit);
    }

    ;
    return Data_Maybe.Nothing.value;
  },
  fromEnum: Data_Function["const"](0),
  Bounded0: function Bounded0() {
    return Data_Bounded.boundedUnit;
  },
  Enum1: function Enum1() {
    return enumUnit;
  }
};
var boundedEnumOrdering = {
  cardinality: 3,
  toEnum: function toEnum(v) {
    if (v === 0) {
      return new Data_Maybe.Just(Data_Ordering.LT.value);
    }

    ;

    if (v === 1) {
      return new Data_Maybe.Just(Data_Ordering.EQ.value);
    }

    ;

    if (v === 2) {
      return new Data_Maybe.Just(Data_Ordering.GT.value);
    }

    ;
    return Data_Maybe.Nothing.value;
  },
  fromEnum: function fromEnum(v) {
    if (v instanceof Data_Ordering.LT) {
      return 0;
    }

    ;

    if (v instanceof Data_Ordering.EQ) {
      return 1;
    }

    ;

    if (v instanceof Data_Ordering.GT) {
      return 2;
    }

    ;
    throw new Error("Failed pattern match at Data.Enum (line 137, column 1 - line 145, column 18): " + [v.constructor.name]);
  },
  Bounded0: function Bounded0() {
    return Data_Bounded.boundedOrdering;
  },
  Enum1: function Enum1() {
    return enumOrdering;
  }
};
var boundedEnumChar = {
  cardinality: $foreign.toCharCode(Data_Bounded.top(Data_Bounded.boundedChar)) - $foreign.toCharCode(Data_Bounded.bottom(Data_Bounded.boundedChar)) | 0,
  toEnum: charToEnum,
  fromEnum: $foreign.toCharCode,
  Bounded0: function Bounded0() {
    return Data_Bounded.boundedChar;
  },
  Enum1: function Enum1() {
    return enumChar;
  }
};
var boundedEnumBoolean = {
  cardinality: 2,
  toEnum: function toEnum(v) {
    if (v === 0) {
      return new Data_Maybe.Just(false);
    }

    ;

    if (v === 1) {
      return new Data_Maybe.Just(true);
    }

    ;
    return Data_Maybe.Nothing.value;
  },
  fromEnum: function fromEnum(v) {
    if (!v) {
      return 0;
    }

    ;

    if (v) {
      return 1;
    }

    ;
    throw new Error("Failed pattern match at Data.Enum (line 118, column 1 - line 124, column 20): " + [v.constructor.name]);
  },
  Bounded0: function Bounded0() {
    return Data_Bounded.boundedBoolean;
  },
  Enum1: function Enum1() {
    return enumBoolean;
  }
};
module.exports = {
  succ: _succ,
  pred: _pred,
  cardinality: cardinality,
  toEnum: toEnum,
  fromEnum: fromEnum,
  toEnumWithDefaults: toEnumWithDefaults,
  Cardinality: Cardinality,
  enumFromTo: enumFromTo,
  enumFromThenTo: enumFromThenTo,
  upFrom: upFrom,
  upFromIncluding: upFromIncluding,
  downFrom: downFrom,
  downFromIncluding: downFromIncluding,
  defaultSucc: defaultSucc,
  defaultPred: defaultPred,
  defaultCardinality: defaultCardinality,
  defaultToEnum: defaultToEnum,
  defaultFromEnum: defaultFromEnum,
  enumBoolean: enumBoolean,
  enumInt: enumInt,
  enumChar: enumChar,
  enumUnit: enumUnit,
  enumOrdering: enumOrdering,
  enumMaybe: enumMaybe,
  enumEither: enumEither,
  enumTuple: enumTuple,
  boundedEnumBoolean: boundedEnumBoolean,
  boundedEnumChar: boundedEnumChar,
  boundedEnumUnit: boundedEnumUnit,
  boundedEnumOrdering: boundedEnumOrdering,
  newtypeCardinality: newtypeCardinality,
  eqCardinality: eqCardinality,
  ordCardinality: ordCardinality,
  showCardinality: showCardinality
};
},{"./foreign.js":"output/Data.Enum/foreign.js","../Control.Alternative/index.js":"output/Control.Alternative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Data.Boolean/index.js":"output/Data.Boolean/index.js","../Data.Bounded/index.js":"output/Data.Bounded/index.js","../Data.Either/index.js":"output/Data.Either/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Data.Unfoldable/index.js":"output/Data.Unfoldable/index.js","../Data.Unfoldable1/index.js":"output/Data.Unfoldable1/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js"}],"output/Web.DOM.NodeType/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Data_Enum = require("../Data.Enum/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var ElementNode = function () {
  function ElementNode() {}

  ;
  ElementNode.value = new ElementNode();
  return ElementNode;
}();

var AttributeNode = function () {
  function AttributeNode() {}

  ;
  AttributeNode.value = new AttributeNode();
  return AttributeNode;
}();

var TextNode = function () {
  function TextNode() {}

  ;
  TextNode.value = new TextNode();
  return TextNode;
}();

var CDATASectionNode = function () {
  function CDATASectionNode() {}

  ;
  CDATASectionNode.value = new CDATASectionNode();
  return CDATASectionNode;
}();

var EntityReferenceNode = function () {
  function EntityReferenceNode() {}

  ;
  EntityReferenceNode.value = new EntityReferenceNode();
  return EntityReferenceNode;
}();

var EntityNode = function () {
  function EntityNode() {}

  ;
  EntityNode.value = new EntityNode();
  return EntityNode;
}();

var ProcessingInstructionNode = function () {
  function ProcessingInstructionNode() {}

  ;
  ProcessingInstructionNode.value = new ProcessingInstructionNode();
  return ProcessingInstructionNode;
}();

var CommentNode = function () {
  function CommentNode() {}

  ;
  CommentNode.value = new CommentNode();
  return CommentNode;
}();

var DocumentNode = function () {
  function DocumentNode() {}

  ;
  DocumentNode.value = new DocumentNode();
  return DocumentNode;
}();

var DocumentTypeNode = function () {
  function DocumentTypeNode() {}

  ;
  DocumentTypeNode.value = new DocumentTypeNode();
  return DocumentTypeNode;
}();

var DocumentFragmentNode = function () {
  function DocumentFragmentNode() {}

  ;
  DocumentFragmentNode.value = new DocumentFragmentNode();
  return DocumentFragmentNode;
}();

var NotationNode = function () {
  function NotationNode() {}

  ;
  NotationNode.value = new NotationNode();
  return NotationNode;
}();

var toEnumNodeType = function toEnumNodeType(v) {
  if (v === 1) {
    return new Data_Maybe.Just(ElementNode.value);
  }

  ;

  if (v === 2) {
    return new Data_Maybe.Just(AttributeNode.value);
  }

  ;

  if (v === 3) {
    return new Data_Maybe.Just(TextNode.value);
  }

  ;

  if (v === 4) {
    return new Data_Maybe.Just(CDATASectionNode.value);
  }

  ;

  if (v === 5) {
    return new Data_Maybe.Just(EntityReferenceNode.value);
  }

  ;

  if (v === 6) {
    return new Data_Maybe.Just(EntityNode.value);
  }

  ;

  if (v === 7) {
    return new Data_Maybe.Just(ProcessingInstructionNode.value);
  }

  ;

  if (v === 8) {
    return new Data_Maybe.Just(CommentNode.value);
  }

  ;

  if (v === 9) {
    return new Data_Maybe.Just(DocumentNode.value);
  }

  ;

  if (v === 10) {
    return new Data_Maybe.Just(DocumentTypeNode.value);
  }

  ;

  if (v === 11) {
    return new Data_Maybe.Just(DocumentFragmentNode.value);
  }

  ;

  if (v === 12) {
    return new Data_Maybe.Just(NotationNode.value);
  }

  ;
  return Data_Maybe.Nothing.value;
};

var showNodeType = {
  show: function show(v) {
    if (v instanceof ElementNode) {
      return "ElementNode";
    }

    ;

    if (v instanceof AttributeNode) {
      return "AttributeNode";
    }

    ;

    if (v instanceof TextNode) {
      return "TextNode";
    }

    ;

    if (v instanceof CDATASectionNode) {
      return "CDATASectionNode";
    }

    ;

    if (v instanceof EntityReferenceNode) {
      return "EntityReferenceNode";
    }

    ;

    if (v instanceof EntityNode) {
      return "EntityNode";
    }

    ;

    if (v instanceof ProcessingInstructionNode) {
      return "ProcessingInstructionNode";
    }

    ;

    if (v instanceof CommentNode) {
      return "CommentNode";
    }

    ;

    if (v instanceof DocumentNode) {
      return "DocumentNode";
    }

    ;

    if (v instanceof DocumentTypeNode) {
      return "DocumentTypeNode";
    }

    ;

    if (v instanceof DocumentFragmentNode) {
      return "DocumentFragmentNode";
    }

    ;

    if (v instanceof NotationNode) {
      return "NotationNode";
    }

    ;
    throw new Error("Failed pattern match at Web.DOM.NodeType (line 39, column 1 - line 51, column 37): " + [v.constructor.name]);
  }
};

var fromEnumNodeType = function fromEnumNodeType(v) {
  if (v instanceof ElementNode) {
    return 1;
  }

  ;

  if (v instanceof AttributeNode) {
    return 2;
  }

  ;

  if (v instanceof TextNode) {
    return 3;
  }

  ;

  if (v instanceof CDATASectionNode) {
    return 4;
  }

  ;

  if (v instanceof EntityReferenceNode) {
    return 5;
  }

  ;

  if (v instanceof EntityNode) {
    return 6;
  }

  ;

  if (v instanceof ProcessingInstructionNode) {
    return 7;
  }

  ;

  if (v instanceof CommentNode) {
    return 8;
  }

  ;

  if (v instanceof DocumentNode) {
    return 9;
  }

  ;

  if (v instanceof DocumentTypeNode) {
    return 10;
  }

  ;

  if (v instanceof DocumentFragmentNode) {
    return 11;
  }

  ;

  if (v instanceof NotationNode) {
    return 12;
  }

  ;
  throw new Error("Failed pattern match at Web.DOM.NodeType (line 68, column 1 - line 68, column 36): " + [v.constructor.name]);
};

var eqNodeType = {
  eq: function eq(x) {
    return function (y) {
      if (x instanceof ElementNode && y instanceof ElementNode) {
        return true;
      }

      ;

      if (x instanceof AttributeNode && y instanceof AttributeNode) {
        return true;
      }

      ;

      if (x instanceof TextNode && y instanceof TextNode) {
        return true;
      }

      ;

      if (x instanceof CDATASectionNode && y instanceof CDATASectionNode) {
        return true;
      }

      ;

      if (x instanceof EntityReferenceNode && y instanceof EntityReferenceNode) {
        return true;
      }

      ;

      if (x instanceof EntityNode && y instanceof EntityNode) {
        return true;
      }

      ;

      if (x instanceof ProcessingInstructionNode && y instanceof ProcessingInstructionNode) {
        return true;
      }

      ;

      if (x instanceof CommentNode && y instanceof CommentNode) {
        return true;
      }

      ;

      if (x instanceof DocumentNode && y instanceof DocumentNode) {
        return true;
      }

      ;

      if (x instanceof DocumentTypeNode && y instanceof DocumentTypeNode) {
        return true;
      }

      ;

      if (x instanceof DocumentFragmentNode && y instanceof DocumentFragmentNode) {
        return true;
      }

      ;

      if (x instanceof NotationNode && y instanceof NotationNode) {
        return true;
      }

      ;
      return false;
    };
  }
};
var ordNodeType = {
  compare: function compare(x) {
    return function (y) {
      return Data_Ord.compare(Data_Ord.ordInt)(fromEnumNodeType(x))(fromEnumNodeType(y));
    };
  },
  Eq0: function Eq0() {
    return eqNodeType;
  }
};
var enumNodeType = {
  succ: Data_Enum.defaultSucc(toEnumNodeType)(fromEnumNodeType),
  pred: Data_Enum.defaultPred(toEnumNodeType)(fromEnumNodeType),
  Ord0: function Ord0() {
    return ordNodeType;
  }
};
var boundedNodeType = {
  bottom: ElementNode.value,
  top: NotationNode.value,
  Ord0: function Ord0() {
    return ordNodeType;
  }
};
var boundedEnumNodeType = {
  cardinality: 12,
  toEnum: toEnumNodeType,
  fromEnum: fromEnumNodeType,
  Bounded0: function Bounded0() {
    return boundedNodeType;
  },
  Enum1: function Enum1() {
    return enumNodeType;
  }
};
module.exports = {
  ElementNode: ElementNode,
  AttributeNode: AttributeNode,
  TextNode: TextNode,
  CDATASectionNode: CDATASectionNode,
  EntityReferenceNode: EntityReferenceNode,
  EntityNode: EntityNode,
  ProcessingInstructionNode: ProcessingInstructionNode,
  CommentNode: CommentNode,
  DocumentNode: DocumentNode,
  DocumentTypeNode: DocumentTypeNode,
  DocumentFragmentNode: DocumentFragmentNode,
  NotationNode: NotationNode,
  eqNodeType: eqNodeType,
  ordNodeType: ordNodeType,
  boundedNodeType: boundedNodeType,
  enumNodeType: enumNodeType,
  boundedEnumNodeType: boundedEnumNodeType,
  showNodeType: showNodeType
};
},{"../Data.Enum/index.js":"output/Data.Enum/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js"}],"output/Web.DOM.Node/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Data_Enum = require("../Data.Enum/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Effect = require("../Effect/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM_Internal_Types = require("../Web.DOM.Internal.Types/index.js");

var Web_DOM_NodeType = require("../Web.DOM.NodeType/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toEventTarget = Unsafe_Coerce.unsafeCoerce;

var previousSibling = function () {
  var $0 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($1) {
    return $0($foreign["_previousSibling"]($1));
  };
}();

var parentNode = function () {
  var $2 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($3) {
    return $2($foreign["_parentNode"]($3));
  };
}();

var parentElement = function () {
  var $4 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($5) {
    return $4($foreign["_parentElement"]($5));
  };
}();

var ownerDocument = function () {
  var $6 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($7) {
    return $6($foreign["_ownerDocument"]($7));
  };
}();

var nodeValue = function () {
  var $8 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($9) {
    return $8($foreign["_nodeValue"]($9));
  };
}();

var nodeType = function nodeType() {
  var $10 = Data_Maybe.fromJust();
  var $11 = Data_Enum.toEnum(Web_DOM_NodeType.boundedEnumNodeType);
  return function ($12) {
    return $10($11($foreign.nodeTypeIndex($12)));
  };
};

var nextSibling = function () {
  var $13 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($14) {
    return $13($foreign["_nextSibling"]($14));
  };
}();

var lookupPrefix = function lookupPrefix(p) {
  var $15 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  var $16 = $foreign["_lookupPrefix"](p);
  return function ($17) {
    return $15($16($17));
  };
};

var lookupNamespaceURI = function lookupNamespaceURI(ns) {
  var $18 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  var $19 = $foreign["_lookupNamespaceURI"](ns);
  return function ($20) {
    return $18($19($20));
  };
};

var lastChild = function () {
  var $21 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($22) {
    return $21($foreign["_lastChild"]($22));
  };
}();

var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("Node");

var firstChild = function () {
  var $23 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($24) {
    return $23($foreign["_firstChild"]($24));
  };
}();

module.exports = {
  fromEventTarget: fromEventTarget,
  toEventTarget: toEventTarget,
  nodeType: nodeType,
  ownerDocument: ownerDocument,
  parentNode: parentNode,
  parentElement: parentElement,
  firstChild: firstChild,
  lastChild: lastChild,
  previousSibling: previousSibling,
  nextSibling: nextSibling,
  nodeValue: nodeValue,
  lookupPrefix: lookupPrefix,
  lookupNamespaceURI: lookupNamespaceURI,
  nodeTypeIndex: $foreign.nodeTypeIndex,
  nodeName: $foreign.nodeName,
  baseURI: $foreign.baseURI,
  hasChildNodes: $foreign.hasChildNodes,
  childNodes: $foreign.childNodes,
  setNodeValue: $foreign.setNodeValue,
  textContent: $foreign.textContent,
  setTextContent: $foreign.setTextContent,
  normalize: $foreign.normalize,
  clone: $foreign.clone,
  deepClone: $foreign.deepClone,
  isEqualNode: $foreign.isEqualNode,
  compareDocumentPositionBits: $foreign.compareDocumentPositionBits,
  contains: $foreign.contains,
  isDefaultNamespace: $foreign.isDefaultNamespace,
  insertBefore: $foreign.insertBefore,
  appendChild: $foreign.appendChild,
  replaceChild: $foreign.replaceChild,
  removeChild: $foreign.removeChild
};
},{"./foreign.js":"output/Web.DOM.Node/foreign.js","../Data.Enum/index.js":"output/Data.Enum/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Nullable/index.js":"output/Data.Nullable/index.js","../Effect/index.js":"output/Effect/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM.Internal.Types/index.js":"output/Web.DOM.Internal.Types/index.js","../Web.DOM.NodeType/index.js":"output/Web.DOM.NodeType/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.Event.Event/foreign.js":[function(require,module,exports) {
"use strict";

exports.bubbles = function (e) {
  return e.bubbles;
};

exports.cancelable = function (e) {
  return e.cancelable;
};

exports._currentTarget = function (e) {
  return e.currentTarget;
};

exports.defaultPrevented = function (e) {
  return function () {
    return e.defaultPrevented;
  };
};

exports.eventPhaseIndex = function (e) {
  return e.eventPhase;
};

exports._target = function (e) {
  return e.target;
};

exports.timeStamp = function (e) {
  return e.timeStamp;
};

exports.type_ = function (e) {
  return e.type;
};

exports.preventDefault = function (e) {
  return function () {
    return e.preventDefault();
  };
};

exports.stopImmediatePropagation = function (e) {
  return function () {
    return e.stopImmediatePropagation();
  };
};

exports.stopPropagation = function (e) {
  return function () {
    return e.stopPropagation();
  };
};
},{}],"output/Web.Event.EventPhase/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Data_Enum = require("../Data.Enum/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var None = function () {
  function None() {}

  ;
  None.value = new None();
  return None;
}();

var Capturing = function () {
  function Capturing() {}

  ;
  Capturing.value = new Capturing();
  return Capturing;
}();

var AtTarget = function () {
  function AtTarget() {}

  ;
  AtTarget.value = new AtTarget();
  return AtTarget;
}();

var Bubbling = function () {
  function Bubbling() {}

  ;
  Bubbling.value = new Bubbling();
  return Bubbling;
}();

var toEnumEventPhase = function toEnumEventPhase(v) {
  if (v === 0) {
    return new Data_Maybe.Just(None.value);
  }

  ;

  if (v === 1) {
    return new Data_Maybe.Just(Capturing.value);
  }

  ;

  if (v === 2) {
    return new Data_Maybe.Just(AtTarget.value);
  }

  ;

  if (v === 3) {
    return new Data_Maybe.Just(Bubbling.value);
  }

  ;
  return Data_Maybe.Nothing.value;
};

var fromEnumEventPhase = function fromEnumEventPhase(v) {
  if (v instanceof None) {
    return 0;
  }

  ;

  if (v instanceof Capturing) {
    return 1;
  }

  ;

  if (v instanceof AtTarget) {
    return 2;
  }

  ;

  if (v instanceof Bubbling) {
    return 3;
  }

  ;
  throw new Error("Failed pattern match at Web.Event.EventPhase (line 40, column 3 - line 44, column 18): " + [v.constructor.name]);
};

var eqEventPhase = {
  eq: function eq(x) {
    return function (y) {
      if (x instanceof None && y instanceof None) {
        return true;
      }

      ;

      if (x instanceof Capturing && y instanceof Capturing) {
        return true;
      }

      ;

      if (x instanceof AtTarget && y instanceof AtTarget) {
        return true;
      }

      ;

      if (x instanceof Bubbling && y instanceof Bubbling) {
        return true;
      }

      ;
      return false;
    };
  }
};
var ordEventPhase = {
  compare: function compare(x) {
    return function (y) {
      if (x instanceof None && y instanceof None) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof None) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof None) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof Capturing && y instanceof Capturing) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof Capturing) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof Capturing) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof AtTarget && y instanceof AtTarget) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof AtTarget) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof AtTarget) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof Bubbling && y instanceof Bubbling) {
        return Data_Ordering.EQ.value;
      }

      ;
      throw new Error("Failed pattern match at Web.Event.EventPhase (line 14, column 1 - line 14, column 48): " + [x.constructor.name, y.constructor.name]);
    };
  },
  Eq0: function Eq0() {
    return eqEventPhase;
  }
};
var enumEventPhase = {
  succ: Data_Enum.defaultSucc(toEnumEventPhase)(fromEnumEventPhase),
  pred: Data_Enum.defaultPred(toEnumEventPhase)(fromEnumEventPhase),
  Ord0: function Ord0() {
    return ordEventPhase;
  }
};
var boundedEventPhase = {
  bottom: None.value,
  top: Bubbling.value,
  Ord0: function Ord0() {
    return ordEventPhase;
  }
};
var boundedEnumEventPhase = {
  cardinality: 4,
  toEnum: toEnumEventPhase,
  fromEnum: fromEnumEventPhase,
  Bounded0: function Bounded0() {
    return boundedEventPhase;
  },
  Enum1: function Enum1() {
    return enumEventPhase;
  }
};
module.exports = {
  None: None,
  Capturing: Capturing,
  AtTarget: AtTarget,
  Bubbling: Bubbling,
  toEnumEventPhase: toEnumEventPhase,
  fromEnumEventPhase: fromEnumEventPhase,
  eqEventPhase: eqEventPhase,
  ordEventPhase: ordEventPhase,
  boundedEventPhase: boundedEventPhase,
  enumEventPhase: enumEventPhase,
  boundedEnumEventPhase: boundedEnumEventPhase
};
},{"../Data.Enum/index.js":"output/Data.Enum/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js"}],"output/Web.Event.Internal.Types/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

module.exports = {};
},{}],"output/Web.Event.Event/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Data_Enum = require("../Data.Enum/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Web_Event_EventPhase = require("../Web.Event.EventPhase/index.js");

var Web_Event_Internal_Types = require("../Web.Event.Internal.Types/index.js");

var EventType = function EventType(x) {
  return x;
};

var target = function target($0) {
  return Data_Nullable.toMaybe($foreign["_target"]($0));
};

var ordEventType = Data_Ord.ordString;
var newtypeEventType = {
  Coercible0: function Coercible0() {
    return undefined;
  }
};

var eventPhase = function eventPhase() {
  var $1 = Data_Maybe.fromJust();
  var $2 = Data_Enum.toEnum(Web_Event_EventPhase.boundedEnumEventPhase);
  return function ($3) {
    return $1($2($foreign.eventPhaseIndex($3)));
  };
};

var eqEventType = Data_Eq.eqString;

var currentTarget = function currentTarget($4) {
  return Data_Nullable.toMaybe($foreign["_currentTarget"]($4));
};

module.exports = {
  EventType: EventType,
  target: target,
  currentTarget: currentTarget,
  eventPhase: eventPhase,
  newtypeEventType: newtypeEventType,
  eqEventType: eqEventType,
  ordEventType: ordEventType,
  type_: $foreign.type_,
  stopPropagation: $foreign.stopPropagation,
  stopImmediatePropagation: $foreign.stopImmediatePropagation,
  bubbles: $foreign.bubbles,
  cancelable: $foreign.cancelable,
  preventDefault: $foreign.preventDefault,
  defaultPrevented: $foreign.defaultPrevented,
  timeStamp: $foreign.timeStamp
};
},{"./foreign.js":"output/Web.Event.Event/foreign.js","../Data.Enum/index.js":"output/Data.Enum/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Nullable/index.js":"output/Data.Nullable/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Web.Event.EventPhase/index.js":"output/Web.Event.EventPhase/index.js","../Web.Event.Internal.Types/index.js":"output/Web.Event.Internal.Types/index.js"}],"output/Web.HTML/foreign.js":[function(require,module,exports) {
"use strict";

exports.window = function () {
  return window;
};
},{}],"output/Web.HTML.Common/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Data_Eq = require("../Data.Eq/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var PropName = function PropName(x) {
  return x;
};

var ClassName = function ClassName(x) {
  return x;
};

var AttrName = function AttrName(x) {
  return x;
};

var ordPropName = Data_Ord.ordString;
var ordClassName = Data_Ord.ordString;
var ordAttrName = Data_Ord.ordString;
var newtypePropName = {
  Coercible0: function Coercible0() {
    return undefined;
  }
};
var newtypeClassName = {
  Coercible0: function Coercible0() {
    return undefined;
  }
};
var newtypeAttrName = {
  Coercible0: function Coercible0() {
    return undefined;
  }
};
var eqPropName = Data_Eq.eqString;
var eqClassName = Data_Eq.eqString;
var eqAttrName = Data_Eq.eqString;
module.exports = {
  PropName: PropName,
  AttrName: AttrName,
  ClassName: ClassName,
  newtypePropName: newtypePropName,
  eqPropName: eqPropName,
  ordPropName: ordPropName,
  newtypeAttrName: newtypeAttrName,
  eqAttrName: eqAttrName,
  ordAttrName: ordAttrName,
  newtypeClassName: newtypeClassName,
  eqClassName: eqClassName,
  ordClassName: ordClassName
};
},{"../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js"}],"output/Web.HTML.HTMLAnchorElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.target = function (a) {
  return function () {
    return a.target;
  };
};

exports.setTarget = function (target) {
  return function (a) {
    return function () {
      a.target = target;
    };
  };
}; // ----------------------------------------------------------------------------


exports.download = function (a) {
  return function () {
    return a.download;
  };
};

exports.setDownload = function (download) {
  return function (a) {
    return function () {
      a.download = download;
    };
  };
}; // ----------------------------------------------------------------------------


exports.rel = function (a) {
  return function () {
    return a.rel;
  };
};

exports.setRel = function (rel) {
  return function (a) {
    return function () {
      a.rel = rel;
    };
  };
}; // ----------------------------------------------------------------------------


exports.rev = function (a) {
  return function () {
    return a.rev;
  };
};

exports.setRev = function (rev) {
  return function (a) {
    return function () {
      a.rev = rev;
    };
  };
}; // ----------------------------------------------------------------------------


exports.relList = function (a) {
  return function () {
    return a.relList;
  };
}; // ----------------------------------------------------------------------------


exports.hreflang = function (a) {
  return function () {
    return a.hreflang;
  };
};

exports.setHreflang = function (hreflang) {
  return function (a) {
    return function () {
      a.hreflang = hreflang;
    };
  };
}; // ----------------------------------------------------------------------------


exports.type_ = function (a) {
  return function () {
    return a.type;
  };
};

exports.setType = function (type) {
  return function (a) {
    return function () {
      a.type = type;
    };
  };
}; // ----------------------------------------------------------------------------


exports.text = function (a) {
  return function () {
    return a.text;
  };
};

exports.setText = function (text) {
  return function (a) {
    return function () {
      a.text = text;
    };
  };
};
},{}],"output/Web.HTML.HTMLAnchorElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLHyperlinkElementUtils = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAnchorElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAnchorElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAnchorElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAnchorElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAnchorElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAnchorElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAnchorElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  toHTMLHyperlinkElementUtils: toHTMLHyperlinkElementUtils,
  target: $foreign.target,
  setTarget: $foreign.setTarget,
  download: $foreign.download,
  setDownload: $foreign.setDownload,
  rel: $foreign.rel,
  setRel: $foreign.setRel,
  rev: $foreign.rev,
  setRev: $foreign.setRev,
  relList: $foreign.relList,
  hreflang: $foreign.hreflang,
  setHreflang: $foreign.setHreflang,
  type_: $foreign.type_,
  setType: $foreign.setType,
  text: $foreign.text,
  setText: $foreign.setText
};
},{"./foreign.js":"output/Web.HTML.HTMLAnchorElement/foreign.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLAreaElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.alt = function (area) {
  return function () {
    return area.alt;
  };
};

exports.setAlt = function (alt) {
  return function (area) {
    return function () {
      area.alt = alt;
    };
  };
}; // ----------------------------------------------------------------------------


exports.coords = function (area) {
  return function () {
    return area.coords;
  };
};

exports.setCoords = function (coords) {
  return function (area) {
    return function () {
      area.coords = coords;
    };
  };
}; // ----------------------------------------------------------------------------


exports.shape = function (area) {
  return function () {
    return area.shape;
  };
};

exports.setShape = function (shape) {
  return function (area) {
    return function () {
      area.shape = shape;
    };
  };
}; // ----------------------------------------------------------------------------


exports.target = function (area) {
  return function () {
    return area.target;
  };
};

exports.setTarget = function (target) {
  return function (area) {
    return function () {
      area.target = target;
    };
  };
}; // ----------------------------------------------------------------------------


exports.download = function (area) {
  return function () {
    return area.download;
  };
};

exports.setDownload = function (download) {
  return function (area) {
    return function () {
      area.download = download;
    };
  };
}; // ----------------------------------------------------------------------------


exports.rel = function (area) {
  return function () {
    return area.rel;
  };
};

exports.setRel = function (rel) {
  return function (area) {
    return function () {
      area.rel = rel;
    };
  };
}; // ----------------------------------------------------------------------------


exports.relList = function (area) {
  return function () {
    return area.relList;
  };
}; // ----------------------------------------------------------------------------


exports.hreflang = function (area) {
  return function () {
    return area.hreflang;
  };
};

exports.setHreflang = function (hreflang) {
  return function (area) {
    return function () {
      area.hreflang = hreflang;
    };
  };
}; // ----------------------------------------------------------------------------


exports.type_ = function (area) {
  return function () {
    return area.type;
  };
};

exports.setType = function (type) {
  return function (area) {
    return function () {
      area.type = type;
    };
  };
};
},{}],"output/Web.HTML.HTMLAreaElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAreaElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAreaElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAreaElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAreaElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAreaElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAreaElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAreaElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  alt: $foreign.alt,
  setAlt: $foreign.setAlt,
  coords: $foreign.coords,
  setCoords: $foreign.setCoords,
  shape: $foreign.shape,
  setShape: $foreign.setShape,
  target: $foreign.target,
  setTarget: $foreign.setTarget,
  download: $foreign.download,
  setDownload: $foreign.setDownload,
  rel: $foreign.rel,
  setRel: $foreign.setRel,
  relList: $foreign.relList,
  hreflang: $foreign.hreflang,
  setHreflang: $foreign.setHreflang,
  type_: $foreign.type_,
  setType: $foreign.setType
};
},{"./foreign.js":"output/Web.HTML.HTMLAreaElement/foreign.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLAudioElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.create = function () {
  return new Audio();
};

exports.createWithURL = function (url) {
  return function () {
    return new Audio(url);
  };
};
},{}],"output/Web.HTML.HTMLAudioElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLMediaElement = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAudioElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAudioElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAudioElement");
var fromHTMLMediaElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAudioElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAudioElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAudioElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAudioElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAudioElement");
var create$prime = $foreign.createWithURL;
module.exports = {
  fromHTMLMediaElement: fromHTMLMediaElement,
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLMediaElement: toHTMLMediaElement,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  "create'": create$prime,
  create: $foreign.create
};
},{"./foreign.js":"output/Web.HTML.HTMLAudioElement/foreign.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLBRElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBRElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBRElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBRElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBRElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBRElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBRElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBRElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget
};
},{"../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLBaseElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.href = function (base) {
  return function () {
    return base.href;
  };
};

exports.setHref = function (href) {
  return function (base) {
    return function () {
      base.href = href;
    };
  };
}; // ----------------------------------------------------------------------------


exports.target = function (base) {
  return function () {
    return base.target;
  };
};

exports.setTarget = function (target) {
  return function (base) {
    return function () {
      base.target = target;
    };
  };
};
},{}],"output/Web.HTML.HTMLBaseElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBaseElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBaseElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBaseElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBaseElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBaseElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBaseElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBaseElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  href: $foreign.href,
  setHref: $foreign.setHref,
  target: $foreign.target,
  setTarget: $foreign.setTarget
};
},{"./foreign.js":"output/Web.HTML.HTMLBaseElement/foreign.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLBodyElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBodyElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBodyElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBodyElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBodyElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBodyElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBodyElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBodyElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget
};
},{"../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLButtonElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.autofocus = function (button) {
  return function () {
    return button.autofocus;
  };
};

exports.setAutofocus = function (autofocus) {
  return function (button) {
    return function () {
      button.autofocus = autofocus;
    };
  };
}; // ----------------------------------------------------------------------------


exports.disabled = function (button) {
  return function () {
    return button.disabled;
  };
};

exports.setDisabled = function (disabled) {
  return function (button) {
    return function () {
      button.disabled = disabled;
    };
  };
}; // ----------------------------------------------------------------------------


exports._form = function (button) {
  return function () {
    return button.form;
  };
}; // ----------------------------------------------------------------------------


exports.formAction = function (button) {
  return function () {
    return button.formAction;
  };
};

exports.setFormAction = function (formAction) {
  return function (button) {
    return function () {
      button.formAction = formAction;
    };
  };
}; // ----------------------------------------------------------------------------


exports.formEnctype = function (button) {
  return function () {
    return button.formEnctype;
  };
};

exports.setFormEnctype = function (formEnctype) {
  return function (button) {
    return function () {
      button.formEnctype = formEnctype;
    };
  };
}; // ----------------------------------------------------------------------------


exports.formMethod = function (button) {
  return function () {
    return button.formMethod;
  };
};

exports.setFormMethod = function (formMethod) {
  return function (button) {
    return function () {
      button.formMethod = formMethod;
    };
  };
}; // ----------------------------------------------------------------------------


exports.formNoValidate = function (button) {
  return function () {
    return button.formNoValidate;
  };
};

exports.setFormNoValidate = function (formNoValidate) {
  return function (button) {
    return function () {
      button.formNoValidate = formNoValidate;
    };
  };
}; // ----------------------------------------------------------------------------


exports.formTarget = function (button) {
  return function () {
    return button.formTarget;
  };
};

exports.setFormTarget = function (formTarget) {
  return function (button) {
    return function () {
      button.formTarget = formTarget;
    };
  };
}; // ----------------------------------------------------------------------------


exports.name = function (button) {
  return function () {
    return button.name;
  };
};

exports.setName = function (name) {
  return function (button) {
    return function () {
      button.name = name;
    };
  };
}; // ----------------------------------------------------------------------------


exports.type_ = function (button) {
  return function () {
    return button.type;
  };
};

exports.setType = function (type) {
  return function (button) {
    return function () {
      button.type = type;
    };
  };
}; // ----------------------------------------------------------------------------


exports.value = function (button) {
  return function () {
    return button.value;
  };
};

exports.setValue = function (value) {
  return function (button) {
    return function () {
      button.value = value;
    };
  };
}; // ----------------------------------------------------------------------------


exports.willValidate = function (button) {
  return function () {
    return button.willValidate;
  };
}; // ----------------------------------------------------------------------------


exports.validity = function (button) {
  return function () {
    return button.validity;
  };
}; // ----------------------------------------------------------------------------


exports.validationMessage = function (button) {
  return function () {
    return button.validationMessage;
  };
}; // ----------------------------------------------------------------------------


exports.checkValidity = function (button) {
  return function () {
    return button.checkValidity();
  };
}; // ----------------------------------------------------------------------------


exports.reportValidity = function (button) {
  return function () {
    return button.reportValidity();
  };
}; // ----------------------------------------------------------------------------


exports.setCustomValidity = function (value) {
  return function (button) {
    return function () {
      button.setCustomValidity(value);
    };
  };
}; // ----------------------------------------------------------------------------


exports.labels = function (button) {
  return function () {
    return button.labels;
  };
};
},{}],"output/Web.HTML.HTMLButtonElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Effect = require("../Effect/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLButtonElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLButtonElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLButtonElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLButtonElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLButtonElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLButtonElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLButtonElement");

var form = function () {
  var $0 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($1) {
    return $0($foreign["_form"]($1));
  };
}();

module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  form: form,
  autofocus: $foreign.autofocus,
  setAutofocus: $foreign.setAutofocus,
  disabled: $foreign.disabled,
  setDisabled: $foreign.setDisabled,
  formAction: $foreign.formAction,
  setFormAction: $foreign.setFormAction,
  formEnctype: $foreign.formEnctype,
  setFormEnctype: $foreign.setFormEnctype,
  formMethod: $foreign.formMethod,
  setFormMethod: $foreign.setFormMethod,
  formNoValidate: $foreign.formNoValidate,
  setFormNoValidate: $foreign.setFormNoValidate,
  formTarget: $foreign.formTarget,
  setFormTarget: $foreign.setFormTarget,
  name: $foreign.name,
  setName: $foreign.setName,
  type_: $foreign.type_,
  setType: $foreign.setType,
  value: $foreign.value,
  setValue: $foreign.setValue,
  willValidate: $foreign.willValidate,
  validity: $foreign.validity,
  validationMessage: $foreign.validationMessage,
  checkValidity: $foreign.checkValidity,
  reportValidity: $foreign.reportValidity,
  setCustomValidity: $foreign.setCustomValidity,
  labels: $foreign.labels
};
},{"./foreign.js":"output/Web.HTML.HTMLButtonElement/foreign.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Nullable/index.js":"output/Data.Nullable/index.js","../Effect/index.js":"output/Effect/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLCanvasElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.width = function (canvas) {
  return function () {
    return canvas.width;
  };
};

exports.setWidth = function (width) {
  return function (canvas) {
    return function () {
      canvas.width = width;
    };
  };
}; // ----------------------------------------------------------------------------


exports.height = function (canvas) {
  return function () {
    return canvas.height;
  };
};

exports.setHeight = function (height) {
  return function (canvas) {
    return function () {
      canvas.height = height;
    };
  };
};
},{}],"output/Web.HTML.HTMLCanvasElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLCanvasElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLCanvasElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLCanvasElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLCanvasElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLCanvasElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLCanvasElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLCanvasElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  width: $foreign.width,
  setWidth: $foreign.setWidth,
  height: $foreign.height,
  setHeight: $foreign.setHeight
};
},{"./foreign.js":"output/Web.HTML.HTMLCanvasElement/foreign.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLDListElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDListElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDListElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDListElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDListElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDListElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDListElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDListElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget
};
},{"../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLDataElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.value = function (data) {
  return function () {
    return data.value;
  };
};

exports.setValue = function (value) {
  return function (data) {
    return function () {
      data.value = value;
    };
  };
};
},{}],"output/Web.HTML.HTMLDataElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDataElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDataElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDataElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDataElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDataElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDataElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDataElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  value: $foreign.value,
  setValue: $foreign.setValue
};
},{"./foreign.js":"output/Web.HTML.HTMLDataElement/foreign.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLDataListElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.options = function (dle) {
  return function () {
    return dle.options;
  };
};
},{}],"output/Web.HTML.HTMLDataListElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDataListElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDataListElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDataListElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDataListElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDataListElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDataListElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDataListElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  options: $foreign.options
};
},{"./foreign.js":"output/Web.HTML.HTMLDataListElement/foreign.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLDivElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDivElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDivElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDivElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDivElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDivElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDivElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDivElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget
};
},{"../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLDocument/foreign.js":[function(require,module,exports) {
"use strict";

exports._documentElement = function (doc) {
  return function () {
    return doc.documentElement;
  };
};

exports._head = function (doc) {
  return function () {
    return doc.head;
  };
};

exports._body = function (doc) {
  return function () {
    return doc.body;
  };
};

exports._readyState = function (doc) {
  return function () {
    return doc.readyState;
  };
};

exports._activeElement = function (doc) {
  return function () {
    return doc.activeElement;
  };
};

exports._currentScript = function (doc) {
  return function () {
    return doc.currentScript;
  };
};

exports.referrer = function (doc) {
  return function () {
    return doc.referrer;
  };
};

exports.title = function (doc) {
  return function () {
    return doc.title;
  };
};

exports.setTitle = function (title) {
  return function (doc) {
    return function () {
      doc.title = title;
    };
  };
};
},{}],"output/Web.HTML.HTMLDocument.ReadyState/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Loading = function () {
  function Loading() {}

  ;
  Loading.value = new Loading();
  return Loading;
}();

var Interactive = function () {
  function Interactive() {}

  ;
  Interactive.value = new Interactive();
  return Interactive;
}();

var Complete = function () {
  function Complete() {}

  ;
  Complete.value = new Complete();
  return Complete;
}();

var showReadyState = {
  show: function show(v) {
    if (v instanceof Loading) {
      return "Loading";
    }

    ;

    if (v instanceof Interactive) {
      return "Interactive";
    }

    ;

    if (v instanceof Complete) {
      return "Complete";
    }

    ;
    throw new Error("Failed pattern match at Web.HTML.HTMLDocument.ReadyState (line 15, column 10 - line 18, column 27): " + [v.constructor.name]);
  }
};

var print = function print(v) {
  if (v instanceof Loading) {
    return "loading";
  }

  ;

  if (v instanceof Interactive) {
    return "interactive";
  }

  ;

  if (v instanceof Complete) {
    return "complete";
  }

  ;
  throw new Error("Failed pattern match at Web.HTML.HTMLDocument.ReadyState (line 21, column 9 - line 24, column 25): " + [v.constructor.name]);
};

var parse = function parse(v) {
  if (v === "loading") {
    return new Data_Maybe.Just(Loading.value);
  }

  ;

  if (v === "interactive") {
    return new Data_Maybe.Just(Interactive.value);
  }

  ;

  if (v === "complete") {
    return new Data_Maybe.Just(Complete.value);
  }

  ;
  return Data_Maybe.Nothing.value;
};

var eqReadyState = {
  eq: function eq(x) {
    return function (y) {
      if (x instanceof Loading && y instanceof Loading) {
        return true;
      }

      ;

      if (x instanceof Interactive && y instanceof Interactive) {
        return true;
      }

      ;

      if (x instanceof Complete && y instanceof Complete) {
        return true;
      }

      ;
      return false;
    };
  }
};
var ordReadyState = {
  compare: function compare(x) {
    return function (y) {
      if (x instanceof Loading && y instanceof Loading) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof Loading) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof Loading) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof Interactive && y instanceof Interactive) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof Interactive) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof Interactive) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof Complete && y instanceof Complete) {
        return Data_Ordering.EQ.value;
      }

      ;
      throw new Error("Failed pattern match at Web.HTML.HTMLDocument.ReadyState (line 12, column 1 - line 12, column 48): " + [x.constructor.name, y.constructor.name]);
    };
  },
  Eq0: function Eq0() {
    return eqReadyState;
  }
};
module.exports = {
  Loading: Loading,
  Interactive: Interactive,
  Complete: Complete,
  print: print,
  parse: parse,
  eqReadyState: eqReadyState,
  ordReadyState: ordReadyState,
  showReadyState: showReadyState
};
},{"../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js"}],"output/Web.HTML.HTMLDocument/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Effect = require("../Effect/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_HTML_HTMLDocument_ReadyState = require("../Web.HTML.HTMLDocument.ReadyState/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonElementParentNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toDocument = Unsafe_Coerce.unsafeCoerce;

var readyState = function () {
  var $0 = Data_Functor.map(Effect.functorEffect)(function () {
    var $2 = Data_Maybe.fromMaybe(Web_HTML_HTMLDocument_ReadyState.Loading.value);
    return function ($3) {
      return $2(Web_HTML_HTMLDocument_ReadyState.parse($3));
    };
  }());
  return function ($1) {
    return $0($foreign["_readyState"]($1));
  };
}();

var head = function () {
  var $4 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($5) {
    return $4($foreign["_head"]($5));
  };
}();

var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDocument");
var fromNonElementParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDocument");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDocument");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDocument");
var fromDocument = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDocument");

var documentElement = function () {
  var $6 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($7) {
    return $6($foreign["_documentElement"]($7));
  };
}();

var currentScript = function () {
  var $8 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($9) {
    return $8($foreign["_currentScript"]($9));
  };
}();

var body = function () {
  var $10 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($11) {
    return $10($foreign["_body"]($11));
  };
}();

var activeElement = function () {
  var $12 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($13) {
    return $12($foreign["_activeElement"]($13));
  };
}();

module.exports = {
  fromDocument: fromDocument,
  fromNode: fromNode,
  fromParentNode: fromParentNode,
  fromNonElementParentNode: fromNonElementParentNode,
  fromEventTarget: fromEventTarget,
  toDocument: toDocument,
  toNode: toNode,
  toParentNode: toParentNode,
  toNonElementParentNode: toNonElementParentNode,
  toEventTarget: toEventTarget,
  documentElement: documentElement,
  head: head,
  body: body,
  readyState: readyState,
  activeElement: activeElement,
  currentScript: currentScript,
  referrer: $foreign.referrer,
  title: $foreign.title,
  setTitle: $foreign.setTitle
};
},{"./foreign.js":"output/Web.HTML.HTMLDocument/foreign.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Nullable/index.js":"output/Data.Nullable/index.js","../Effect/index.js":"output/Effect/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.HTML.HTMLDocument.ReadyState/index.js":"output/Web.HTML.HTMLDocument.ReadyState/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLElement/foreign.js":[function(require,module,exports) {
"use strict";

exports._read = function (nothing, just, value) {
  var tag = Object.prototype.toString.call(value);

  if (tag.indexOf("[object HTML") === 0 && tag.indexOf("Element]") === tag.length - 8) {
    return just(value);
  } else {
    return nothing;
  }
}; // ----------------------------------------------------------------------------


exports.title = function (elt) {
  return function () {
    return elt.title;
  };
};

exports.setTitle = function (title) {
  return function (elt) {
    return function () {
      elt.title = title;
    };
  };
}; // ----------------------------------------------------------------------------


exports.lang = function (elt) {
  return function () {
    return elt.lang;
  };
};

exports.setLang = function (lang) {
  return function (elt) {
    return function () {
      elt.lang = lang;
    };
  };
}; // ----------------------------------------------------------------------------


exports.dir = function (elt) {
  return function () {
    return elt.dir;
  };
};

exports.setDir = function (dir) {
  return function (elt) {
    return function () {
      elt.dir = dir;
    };
  };
}; // ----------------------------------------------------------------------------


exports.className = function (elt) {
  return function () {
    return elt.className;
  };
};

exports.setClassName = function (className) {
  return function (elt) {
    return function () {
      elt.className = className;
    };
  };
};

exports.classList = function (element) {
  return function () {
    return element.classList;
  };
}; // ----------------------------------------------------------------------------


exports.hidden = function (elt) {
  return function () {
    return elt.hidden;
  };
};

exports.setHidden = function (hidden) {
  return function (elt) {
    return function () {
      elt.hidden = hidden;
    };
  };
}; // ----------------------------------------------------------------------------


exports.tabIndex = function (elt) {
  return function () {
    return elt.tabIndex;
  };
};

exports.setTabIndex = function (tabIndex) {
  return function (elt) {
    return function () {
      elt.tabIndex = tabIndex;
    };
  };
}; // ----------------------------------------------------------------------------


exports.draggable = function (elt) {
  return function () {
    return elt.draggable;
  };
};

exports.setDraggable = function (draggable) {
  return function (elt) {
    return function () {
      elt.draggable = draggable;
    };
  };
}; // ----------------------------------------------------------------------------


exports.contentEditable = function (elt) {
  return function () {
    return elt.contentEditable;
  };
};

exports.setContentEditable = function (contentEditable) {
  return function (elt) {
    return function () {
      elt.contentEditable = contentEditable;
    };
  };
};

exports.isContentEditable = function (elt) {
  return function () {
    return elt.isContentEditable;
  };
}; // ----------------------------------------------------------------------------


exports.spellcheck = function (elt) {
  return function () {
    return elt.spellcheck;
  };
};

exports.setSpellcheck = function (spellcheck) {
  return function (elt) {
    return function () {
      elt.spellcheck = spellcheck;
    };
  };
}; // ----------------------------------------------------------------------------


exports.click = function (elt) {
  return function () {
    return elt.click();
  };
};

exports.focus = function (elt) {
  return function () {
    return elt.focus();
  };
};

exports.blur = function (elt) {
  return function () {
    return elt.blur();
  };
}; // - CSSOM ---------------------------------------------------------------------


exports.getBoundingClientRect = function (el) {
  return function () {
    var rect = el.getBoundingClientRect();
    return {
      top: rect.top,
      right: rect.right,
      bottom: rect.bottom,
      left: rect.left,
      width: rect.width,
      height: rect.height
    };
  };
};

exports._offsetParent = function (el) {
  return function () {
    return el.offsetParent;
  };
};

exports.offsetTop = function (el) {
  return function () {
    return el.offsetTop;
  };
};

exports.offsetLeft = function (el) {
  return function () {
    return el.offsetLeft;
  };
};

exports.offsetWidth = function (el) {
  return function () {
    return el.offsetWidth;
  };
};

exports.offsetHeight = function (el) {
  return function () {
    return el.offsetHeight;
  };
};
},{}],"output/Web.HTML.HTMLElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Effect = require("../Effect/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;

var offsetParent = function () {
  var $0 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($1) {
    return $0($foreign["_offsetParent"]($1));
  };
}();

var fromParentNode = function fromParentNode(x) {
  return $foreign["_read"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);
};

var fromNonDocumentTypeChildNode = function fromNonDocumentTypeChildNode(x) {
  return $foreign["_read"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);
};

var fromNode = function fromNode(x) {
  return $foreign["_read"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);
};

var fromEventTarget = function fromEventTarget(x) {
  return $foreign["_read"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);
};

var fromElement = function fromElement(x) {
  return $foreign["_read"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);
};

var fromChildNode = function fromChildNode(x) {
  return $foreign["_read"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);
};

module.exports = {
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  offsetParent: offsetParent,
  title: $foreign.title,
  setTitle: $foreign.setTitle,
  lang: $foreign.lang,
  setLang: $foreign.setLang,
  dir: $foreign.dir,
  setDir: $foreign.setDir,
  className: $foreign.className,
  setClassName: $foreign.setClassName,
  classList: $foreign.classList,
  hidden: $foreign.hidden,
  setHidden: $foreign.setHidden,
  tabIndex: $foreign.tabIndex,
  setTabIndex: $foreign.setTabIndex,
  draggable: $foreign.draggable,
  setDraggable: $foreign.setDraggable,
  contentEditable: $foreign.contentEditable,
  setContentEditable: $foreign.setContentEditable,
  isContentEditable: $foreign.isContentEditable,
  spellcheck: $foreign.spellcheck,
  setSpellcheck: $foreign.setSpellcheck,
  click: $foreign.click,
  focus: $foreign.focus,
  blur: $foreign.blur,
  getBoundingClientRect: $foreign.getBoundingClientRect,
  offsetTop: $foreign.offsetTop,
  offsetLeft: $foreign.offsetLeft,
  offsetWidth: $foreign.offsetWidth,
  offsetHeight: $foreign.offsetHeight
};
},{"./foreign.js":"output/Web.HTML.HTMLElement/foreign.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Nullable/index.js":"output/Data.Nullable/index.js","../Effect/index.js":"output/Effect/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js"}],"output/Web.HTML.HTMLEmbedElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.src = function (embed) {
  return function () {
    return embed.src;
  };
};

exports.setSrc = function (src) {
  return function (embed) {
    return function () {
      embed.src = src;
    };
  };
}; // ----------------------------------------------------------------------------


exports.type_ = function (embed) {
  return function () {
    return embed.type;
  };
};

exports.setType = function (type) {
  return function (embed) {
    return function () {
      embed.type = type;
    };
  };
}; // ----------------------------------------------------------------------------


exports.width = function (embed) {
  return function () {
    return embed.width;
  };
};

exports.setWidth = function (width) {
  return function (embed) {
    return function () {
      embed.width = width;
    };
  };
}; // ----------------------------------------------------------------------------


exports.height = function (embed) {
  return function () {
    return embed.height;
  };
};

exports.setHeight = function (height) {
  return function (embed) {
    return function () {
      embed.height = height;
    };
  };
};
},{}],"output/Web.HTML.HTMLEmbedElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLEmbedElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLEmbedElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLEmbedElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLEmbedElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLEmbedElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLEmbedElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLEmbedElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  src: $foreign.src,
  setSrc: $foreign.setSrc,
  type_: $foreign.type_,
  setType: $foreign.setType,
  width: $foreign.width,
  setWidth: $foreign.setWidth,
  height: $foreign.height,
  setHeight: $foreign.setHeight
};
},{"./foreign.js":"output/Web.HTML.HTMLEmbedElement/foreign.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLFieldSetElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.disabled = function (fieldset) {
  return function () {
    return fieldset.disabled;
  };
};

exports.setDisabled = function (disabled) {
  return function (fieldset) {
    return function () {
      fieldset.disabled = disabled;
    };
  };
}; // ----------------------------------------------------------------------------


exports._form = function (fieldset) {
  return function () {
    return fieldset.form;
  };
}; // ----------------------------------------------------------------------------


exports.name = function (fieldset) {
  return function () {
    return fieldset.name;
  };
};

exports.setName = function (name) {
  return function (fieldset) {
    return function () {
      fieldset.name = name;
    };
  };
}; // ----------------------------------------------------------------------------


exports.type_ = function (fieldset) {
  return function () {
    return fieldset.type;
  };
};

exports.setType = function (type) {
  return function (fieldset) {
    return function () {
      fieldset.type = type;
    };
  };
}; // ----------------------------------------------------------------------------


exports.willValidate = function (fieldset) {
  return function () {
    return fieldset.willValidate;
  };
}; // ----------------------------------------------------------------------------


exports.validity = function (fieldset) {
  return function () {
    return fieldset.validity;
  };
}; // ----------------------------------------------------------------------------


exports.validationMessage = function (fieldset) {
  return function () {
    return fieldset.validationMessage;
  };
}; // ----------------------------------------------------------------------------


exports.checkValidity = function (fieldset) {
  return function () {
    return fieldset.checkValidity();
  };
}; // ----------------------------------------------------------------------------


exports.reportValidity = function (fieldset) {
  return function () {
    return fieldset.reportValidity();
  };
}; // ----------------------------------------------------------------------------


exports.setCustomValidity = function (value) {
  return function (fieldset) {
    return function () {
      fieldset.setCustomValidity(value);
    };
  };
};
},{}],"output/Web.HTML.HTMLFieldSetElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Effect = require("../Effect/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLFieldSetElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLFieldSetElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLFieldSetElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLFieldSetElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLFieldSetElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLFieldSetElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLFieldSetElement");

var form = function () {
  var $0 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($1) {
    return $0($foreign["_form"]($1));
  };
}();

module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  form: form,
  disabled: $foreign.disabled,
  setDisabled: $foreign.setDisabled,
  name: $foreign.name,
  setName: $foreign.setName,
  type_: $foreign.type_,
  setType: $foreign.setType,
  willValidate: $foreign.willValidate,
  validity: $foreign.validity,
  validationMessage: $foreign.validationMessage,
  checkValidity: $foreign.checkValidity,
  reportValidity: $foreign.reportValidity,
  setCustomValidity: $foreign.setCustomValidity
};
},{"./foreign.js":"output/Web.HTML.HTMLFieldSetElement/foreign.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Nullable/index.js":"output/Data.Nullable/index.js","../Effect/index.js":"output/Effect/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLFormElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.acceptCharset = function (form) {
  return function () {
    return form.acceptCharset;
  };
};

exports.setAcceptCharset = function (acceptCharset) {
  return function (form) {
    return function () {
      form.acceptCharset = acceptCharset;
    };
  };
}; // ----------------------------------------------------------------------------


exports.action = function (form) {
  return function () {
    return form.action;
  };
};

exports.setAction = function (action) {
  return function (form) {
    return function () {
      form.action = action;
    };
  };
}; // ----------------------------------------------------------------------------


exports.autocomplete = function (form) {
  return function () {
    return form.autocomplete;
  };
};

exports.setAutocomplete = function (autocomplete) {
  return function (form) {
    return function () {
      form.autocomplete = autocomplete;
    };
  };
}; // ----------------------------------------------------------------------------


exports.enctype = function (form) {
  return function () {
    return form.enctype;
  };
};

exports.setEnctype = function (enctype) {
  return function (form) {
    return function () {
      form.enctype = enctype;
    };
  };
}; // ----------------------------------------------------------------------------


exports.encoding = function (form) {
  return function () {
    return form.encoding;
  };
};

exports.setEncoding = function (encoding) {
  return function (form) {
    return function () {
      form.encoding = encoding;
    };
  };
}; // ----------------------------------------------------------------------------


exports.method = function (form) {
  return function () {
    return form.method;
  };
};

exports.setMethod = function (method) {
  return function (form) {
    return function () {
      form.method = method;
    };
  };
}; // ----------------------------------------------------------------------------


exports.name = function (form) {
  return function () {
    return form.name;
  };
};

exports.setName = function (name) {
  return function (form) {
    return function () {
      form.name = name;
    };
  };
}; // ----------------------------------------------------------------------------


exports.noValidate = function (form) {
  return function () {
    return form.noValidate;
  };
};

exports.setNoValidate = function (noValidate) {
  return function (form) {
    return function () {
      form.noValidate = noValidate;
    };
  };
}; // ----------------------------------------------------------------------------


exports.target = function (form) {
  return function () {
    return form.target;
  };
};

exports.setTarget = function (target) {
  return function (form) {
    return function () {
      form.target = target;
    };
  };
}; // ----------------------------------------------------------------------------


exports.length = function (form) {
  return function () {
    return form.length;
  };
}; // ----------------------------------------------------------------------------


exports.submit = function (form) {
  return function () {
    form.submit();
  };
}; // ----------------------------------------------------------------------------


exports.reset = function (form) {
  return function () {
    form.reset();
  };
}; // ----------------------------------------------------------------------------


exports.checkValidity = function (form) {
  return function () {
    return form.checkValidity();
  };
}; // ----------------------------------------------------------------------------


exports.reportValidity = function (form) {
  return function () {
    return form.reportValidity();
  };
};
},{}],"output/Web.HTML.HTMLFormElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLFormElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLFormElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLFormElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLFormElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLFormElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLFormElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLFormElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  acceptCharset: $foreign.acceptCharset,
  setAcceptCharset: $foreign.setAcceptCharset,
  action: $foreign.action,
  setAction: $foreign.setAction,
  autocomplete: $foreign.autocomplete,
  setAutocomplete: $foreign.setAutocomplete,
  enctype: $foreign.enctype,
  setEnctype: $foreign.setEnctype,
  encoding: $foreign.encoding,
  setEncoding: $foreign.setEncoding,
  method: $foreign.method,
  setMethod: $foreign.setMethod,
  name: $foreign.name,
  setName: $foreign.setName,
  noValidate: $foreign.noValidate,
  setNoValidate: $foreign.setNoValidate,
  target: $foreign.target,
  setTarget: $foreign.setTarget,
  length: $foreign.length,
  submit: $foreign.submit,
  reset: $foreign.reset,
  checkValidity: $foreign.checkValidity,
  reportValidity: $foreign.reportValidity
};
},{"./foreign.js":"output/Web.HTML.HTMLFormElement/foreign.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLHRElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHRElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHRElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHRElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHRElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHRElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHRElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHRElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget
};
},{"../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLHeadElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHeadElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHeadElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHeadElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHeadElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHeadElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHeadElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHeadElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget
};
},{"../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLHeadingElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHeadingElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHeadingElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHeadingElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHeadingElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHeadingElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHeadingElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHeadingElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget
};
},{"../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLIFrameElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.src = function (iframe) {
  return function () {
    return iframe.src;
  };
};

exports.setSrc = function (src) {
  return function (iframe) {
    return function () {
      iframe.src = src;
    };
  };
}; // ----------------------------------------------------------------------------


exports.srcdoc = function (iframe) {
  return function () {
    return iframe.srcdoc;
  };
};

exports.setSrcdoc = function (srcdoc) {
  return function (iframe) {
    return function () {
      iframe.srcdoc = srcdoc;
    };
  };
}; // ----------------------------------------------------------------------------


exports.name = function (iframe) {
  return function () {
    return iframe.name;
  };
};

exports.setName = function (name) {
  return function (iframe) {
    return function () {
      iframe.name = name;
    };
  };
}; // ----------------------------------------------------------------------------


exports.width = function (iframe) {
  return function () {
    return iframe.width;
  };
};

exports.setWidth = function (width) {
  return function (iframe) {
    return function () {
      iframe.width = width;
    };
  };
}; // ----------------------------------------------------------------------------


exports.height = function (iframe) {
  return function () {
    return iframe.height;
  };
};

exports.setHeight = function (height) {
  return function (iframe) {
    return function () {
      iframe.height = height;
    };
  };
}; // ----------------------------------------------------------------------------


exports._contentDocument = function (iframe) {
  return function () {
    return iframe.contentDocument;
  };
};

exports._contentWindow = function (iframe) {
  return function () {
    return iframe.contentWindow;
  };
};
},{}],"output/Web.HTML.HTMLIFrameElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Effect = require("../Effect/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLIFrameElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLIFrameElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLIFrameElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLIFrameElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLIFrameElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLIFrameElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLIFrameElement");

var contentWindow = function () {
  var $0 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($1) {
    return $0($foreign["_contentWindow"]($1));
  };
}();

var contentDocument = function () {
  var $2 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($3) {
    return $2($foreign["_contentDocument"]($3));
  };
}();

module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  contentDocument: contentDocument,
  contentWindow: contentWindow,
  src: $foreign.src,
  setSrc: $foreign.setSrc,
  srcdoc: $foreign.srcdoc,
  setSrcdoc: $foreign.setSrcdoc,
  name: $foreign.name,
  setName: $foreign.setName,
  width: $foreign.width,
  setWidth: $foreign.setWidth,
  height: $foreign.height,
  setHeight: $foreign.setHeight
};
},{"./foreign.js":"output/Web.HTML.HTMLIFrameElement/foreign.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Nullable/index.js":"output/Data.Nullable/index.js","../Effect/index.js":"output/Effect/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLImageElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.create = function () {
  return new Image();
};

exports.createWithDimensions = function (width) {
  return function (height) {
    return function () {
      return new Image(width, height);
    };
  };
}; // ----------------------------------------------------------------------------


exports.alt = function (image) {
  return function () {
    return image.alt;
  };
};

exports.setAlt = function (alt) {
  return function (image) {
    return function () {
      image.alt = alt;
    };
  };
}; // ----------------------------------------------------------------------------


exports.src = function (image) {
  return function () {
    return image.src;
  };
};

exports.setSrc = function (src) {
  return function (image) {
    return function () {
      image.src = src;
    };
  };
}; // ----------------------------------------------------------------------------


exports.srcset = function (image) {
  return function () {
    return image.srcset;
  };
};

exports.setSrcset = function (srcset) {
  return function (image) {
    return function () {
      image.srcset = srcset;
    };
  };
}; // ----------------------------------------------------------------------------


exports.sizes = function (image) {
  return function () {
    return image.sizes;
  };
};

exports.setSizes = function (sizes) {
  return function (image) {
    return function () {
      image.sizes = sizes;
    };
  };
}; // ----------------------------------------------------------------------------


exports.currentSrc = function (image) {
  return function () {
    return image.currentSrc;
  };
}; // ----------------------------------------------------------------------------


exports._crossOrigin = function (image) {
  return image.crossOrigin;
};

exports._setCrossOrigin = function (crossOrigin, image) {
  image.crossOrigin = crossOrigin;
}; // ----------------------------------------------------------------------------


exports.useMap = function (image) {
  return function () {
    return image.useMap;
  };
};

exports.setUseMap = function (useMap) {
  return function (image) {
    return function () {
      image.useMap = useMap;
    };
  };
}; // ----------------------------------------------------------------------------


exports.isMap = function (image) {
  return function () {
    return image.isMap;
  };
};

exports.setIsMap = function (isMap) {
  return function (image) {
    return function () {
      image.isMap = isMap;
    };
  };
}; // ----------------------------------------------------------------------------


exports.width = function (image) {
  return function () {
    return image.width;
  };
};

exports.setWidth = function (width) {
  return function (image) {
    return function () {
      image.width = width;
    };
  };
}; // ----------------------------------------------------------------------------


exports.height = function (image) {
  return function () {
    return image.height;
  };
};

exports.setHeight = function (height) {
  return function (image) {
    return function () {
      image.height = height;
    };
  };
}; // ----------------------------------------------------------------------------


exports.naturalWidth = function (image) {
  return function () {
    return image.naturalWidth;
  };
};

exports.naturalHeight = function (image) {
  return function () {
    return image.naturalHeight;
  };
}; // ----------------------------------------------------------------------------


exports.referrerPolicy = function (image) {
  return function () {
    return image.referrerPolicy;
  };
};

exports.setReferrerPolicy = function (referrerPolicy) {
  return function (image) {
    return function () {
      image.referrerPolicy = referrerPolicy;
    };
  };
}; // ----------------------------------------------------------------------------


exports._decoding = function (image) {
  return image.decoding;
};

exports._setDecoding = function (decoding, image) {
  image.decoding = decoding;
}; // ----------------------------------------------------------------------------


exports._loading = function (image) {
  return image.loading;
};

exports._setLoading = function (loading, image) {
  image.loading = loading;
}; // ----------------------------------------------------------------------------


exports.complete = function (image) {
  return function () {
    return image.complete;
  };
};
},{}],"output/Web.HTML.HTMLImageElement.CORSMode/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Anonymous = function () {
  function Anonymous() {}

  ;
  Anonymous.value = new Anonymous();
  return Anonymous;
}();

var UseCredentials = function () {
  function UseCredentials() {}

  ;
  UseCredentials.value = new UseCredentials();
  return UseCredentials;
}();

var showDecodingHint = {
  show: function show(v) {
    if (v instanceof Anonymous) {
      return "Anonymous";
    }

    ;

    if (v instanceof UseCredentials) {
      return "UseCredentials";
    }

    ;
    throw new Error("Failed pattern match at Web.HTML.HTMLImageElement.CORSMode (line 18, column 10 - line 20, column 39): " + [v.constructor.name]);
  }
};

var print = function print(v) {
  if (v instanceof Anonymous) {
    return "anonymous";
  }

  ;

  if (v instanceof UseCredentials) {
    return "use-credentials";
  }

  ;
  throw new Error("Failed pattern match at Web.HTML.HTMLImageElement.CORSMode (line 30, column 9 - line 32, column 38): " + [v.constructor.name]);
};

var parse = function parse(v) {
  if (v === "") {
    return new Data_Maybe.Just(Anonymous.value);
  }

  ;

  if (v === "anonymous") {
    return new Data_Maybe.Just(Anonymous.value);
  }

  ;

  if (v === "use-credentials") {
    return new Data_Maybe.Just(UseCredentials.value);
  }

  ;
  return Data_Maybe.Nothing.value;
};

var eqCORSMode = {
  eq: function eq(x) {
    return function (y) {
      if (x instanceof Anonymous && y instanceof Anonymous) {
        return true;
      }

      ;

      if (x instanceof UseCredentials && y instanceof UseCredentials) {
        return true;
      }

      ;
      return false;
    };
  }
};
var ordCORSMode = {
  compare: function compare(x) {
    return function (y) {
      if (x instanceof Anonymous && y instanceof Anonymous) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof Anonymous) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof Anonymous) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof UseCredentials && y instanceof UseCredentials) {
        return Data_Ordering.EQ.value;
      }

      ;
      throw new Error("Failed pattern match at Web.HTML.HTMLImageElement.CORSMode (line 15, column 1 - line 15, column 44): " + [x.constructor.name, y.constructor.name]);
    };
  },
  Eq0: function Eq0() {
    return eqCORSMode;
  }
};
module.exports = {
  Anonymous: Anonymous,
  UseCredentials: UseCredentials,
  parse: parse,
  print: print,
  eqCORSMode: eqCORSMode,
  ordCORSMode: ordCORSMode,
  showDecodingHint: showDecodingHint
};
},{"../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js"}],"output/Web.HTML.HTMLImageElement.DecodingHint/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Sync = function () {
  function Sync() {}

  ;
  Sync.value = new Sync();
  return Sync;
}();

var Async = function () {
  function Async() {}

  ;
  Async.value = new Async();
  return Async;
}();

var Auto = function () {
  function Auto() {}

  ;
  Auto.value = new Auto();
  return Auto;
}();

var showDecodingHint = {
  show: function show(v) {
    if (v instanceof Sync) {
      return "Sync";
    }

    ;

    if (v instanceof Async) {
      return "Async";
    }

    ;

    if (v instanceof Auto) {
      return "Auto";
    }

    ;
    throw new Error("Failed pattern match at Web.HTML.HTMLImageElement.DecodingHint (line 19, column 10 - line 22, column 19): " + [v.constructor.name]);
  }
};

var print = function print(v) {
  if (v instanceof Sync) {
    return "sync";
  }

  ;

  if (v instanceof Async) {
    return "async";
  }

  ;

  if (v instanceof Auto) {
    return "auto";
  }

  ;
  throw new Error("Failed pattern match at Web.HTML.HTMLImageElement.DecodingHint (line 33, column 9 - line 36, column 17): " + [v.constructor.name]);
};

var parse = function parse(v) {
  if (v === "") {
    return new Data_Maybe.Just(Auto.value);
  }

  ;

  if (v === "sync") {
    return new Data_Maybe.Just(Sync.value);
  }

  ;

  if (v === "async") {
    return new Data_Maybe.Just(Async.value);
  }

  ;

  if (v === "auto") {
    return new Data_Maybe.Just(Auto.value);
  }

  ;
  return Data_Maybe.Nothing.value;
};

var eqDecodingHint = {
  eq: function eq(x) {
    return function (y) {
      if (x instanceof Sync && y instanceof Sync) {
        return true;
      }

      ;

      if (x instanceof Async && y instanceof Async) {
        return true;
      }

      ;

      if (x instanceof Auto && y instanceof Auto) {
        return true;
      }

      ;
      return false;
    };
  }
};
var ordDecodingHint = {
  compare: function compare(x) {
    return function (y) {
      if (x instanceof Sync && y instanceof Sync) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof Sync) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof Sync) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof Async && y instanceof Async) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof Async) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof Async) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof Auto && y instanceof Auto) {
        return Data_Ordering.EQ.value;
      }

      ;
      throw new Error("Failed pattern match at Web.HTML.HTMLImageElement.DecodingHint (line 16, column 1 - line 16, column 52): " + [x.constructor.name, y.constructor.name]);
    };
  },
  Eq0: function Eq0() {
    return eqDecodingHint;
  }
};
module.exports = {
  Sync: Sync,
  Async: Async,
  Auto: Auto,
  parse: parse,
  print: print,
  eqDecodingHint: eqDecodingHint,
  ordDecodingHint: ordDecodingHint,
  showDecodingHint: showDecodingHint
};
},{"../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js"}],"output/Web.HTML.HTMLImageElement.Laziness/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Eager = function () {
  function Eager() {}

  ;
  Eager.value = new Eager();
  return Eager;
}();

var Lazy = function () {
  function Lazy() {}

  ;
  Lazy.value = new Lazy();
  return Lazy;
}();

var showDecodingHint = {
  show: function show(v) {
    if (v instanceof Eager) {
      return "Eager";
    }

    ;

    if (v instanceof Lazy) {
      return "Lazy";
    }

    ;
    throw new Error("Failed pattern match at Web.HTML.HTMLImageElement.Laziness (line 18, column 10 - line 20, column 19): " + [v.constructor.name]);
  }
};

var print = function print(v) {
  if (v instanceof Eager) {
    return "eager";
  }

  ;

  if (v instanceof Lazy) {
    return "lazy";
  }

  ;
  throw new Error("Failed pattern match at Web.HTML.HTMLImageElement.Laziness (line 31, column 9 - line 33, column 17): " + [v.constructor.name]);
};

var parse = function parse(v) {
  if (v === "") {
    return new Data_Maybe.Just(Eager.value);
  }

  ;

  if (v === "eager") {
    return new Data_Maybe.Just(Eager.value);
  }

  ;

  if (v === "lazy") {
    return new Data_Maybe.Just(Lazy.value);
  }

  ;
  return Data_Maybe.Nothing.value;
};

var eqDecodingHint = {
  eq: function eq(x) {
    return function (y) {
      if (x instanceof Eager && y instanceof Eager) {
        return true;
      }

      ;

      if (x instanceof Lazy && y instanceof Lazy) {
        return true;
      }

      ;
      return false;
    };
  }
};
var ordDecodingHint = {
  compare: function compare(x) {
    return function (y) {
      if (x instanceof Eager && y instanceof Eager) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof Eager) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof Eager) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof Lazy && y instanceof Lazy) {
        return Data_Ordering.EQ.value;
      }

      ;
      throw new Error("Failed pattern match at Web.HTML.HTMLImageElement.Laziness (line 15, column 1 - line 15, column 48): " + [x.constructor.name, y.constructor.name]);
    };
  },
  Eq0: function Eq0() {
    return eqDecodingHint;
  }
};
module.exports = {
  Eager: Eager,
  Lazy: Lazy,
  parse: parse,
  print: print,
  eqDecodingHint: eqDecodingHint,
  ordDecodingHint: ordDecodingHint,
  showDecodingHint: showDecodingHint
};
},{"../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js"}],"output/Web.HTML.HTMLImageElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Control_Bind = require("../Control.Bind/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Effect = require("../Effect/index.js");

var Effect_Uncurried = require("../Effect.Uncurried/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_HTML_HTMLImageElement_CORSMode = require("../Web.HTML.HTMLImageElement.CORSMode/index.js");

var Web_HTML_HTMLImageElement_DecodingHint = require("../Web.HTML.HTMLImageElement.DecodingHint/index.js");

var Web_HTML_HTMLImageElement_Laziness = require("../Web.HTML.HTMLImageElement.Laziness/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;

var setLoading = function setLoading(laziness) {
  return Effect_Uncurried.runEffectFn2($foreign["_setLoading"])(Web_HTML_HTMLImageElement_Laziness.print(laziness));
};

var setDecoding = function setDecoding(hint) {
  return Effect_Uncurried.runEffectFn2($foreign["_setDecoding"])(Web_HTML_HTMLImageElement_DecodingHint.print(hint));
};

var setCrossOrigin = function setCrossOrigin(mode) {
  return Effect_Uncurried.runEffectFn2($foreign["_setCrossOrigin"])(Web_HTML_HTMLImageElement_CORSMode.print(mode));
};

var loading = function () {
  var $0 = Data_Functor.map(Effect.functorEffect)(function () {
    var $3 = Data_Maybe.fromMaybe(Web_HTML_HTMLImageElement_Laziness.Eager.value);
    return function ($4) {
      return $3(Web_HTML_HTMLImageElement_Laziness.parse($4));
    };
  }());
  var $1 = Effect_Uncurried.runEffectFn1($foreign["_loading"]);
  return function ($2) {
    return $0($1($2));
  };
}();

var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLImageElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLImageElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLImageElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLImageElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLImageElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLImageElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLImageElement");

var decoding = function () {
  var $5 = Data_Functor.map(Effect.functorEffect)(function () {
    var $8 = Data_Maybe.fromMaybe(Web_HTML_HTMLImageElement_DecodingHint.Auto.value);
    return function ($9) {
      return $8(Web_HTML_HTMLImageElement_DecodingHint.parse($9));
    };
  }());
  var $6 = Effect_Uncurried.runEffectFn1($foreign["_decoding"]);
  return function ($7) {
    return $5($6($7));
  };
}();

var crossOrigin = function () {
  var $10 = Data_Functor.map(Effect.functorEffect)(Control_Bind.composeKleisliFlipped(Data_Maybe.bindMaybe)(Web_HTML_HTMLImageElement_CORSMode.parse)(Data_Nullable.toMaybe));
  var $11 = Effect_Uncurried.runEffectFn1($foreign["_crossOrigin"]);
  return function ($12) {
    return $10($11($12));
  };
}();

var create$prime = $foreign.createWithDimensions;
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  "create'": create$prime,
  crossOrigin: crossOrigin,
  setCrossOrigin: setCrossOrigin,
  decoding: decoding,
  setDecoding: setDecoding,
  loading: loading,
  setLoading: setLoading,
  create: $foreign.create,
  alt: $foreign.alt,
  setAlt: $foreign.setAlt,
  src: $foreign.src,
  setSrc: $foreign.setSrc,
  srcset: $foreign.srcset,
  setSrcset: $foreign.setSrcset,
  currentSrc: $foreign.currentSrc,
  sizes: $foreign.sizes,
  setSizes: $foreign.setSizes,
  useMap: $foreign.useMap,
  setUseMap: $foreign.setUseMap,
  isMap: $foreign.isMap,
  setIsMap: $foreign.setIsMap,
  width: $foreign.width,
  setWidth: $foreign.setWidth,
  height: $foreign.height,
  setHeight: $foreign.setHeight,
  naturalWidth: $foreign.naturalWidth,
  naturalHeight: $foreign.naturalHeight,
  referrerPolicy: $foreign.referrerPolicy,
  setReferrerPolicy: $foreign.setReferrerPolicy,
  complete: $foreign.complete
};
},{"./foreign.js":"output/Web.HTML.HTMLImageElement/foreign.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Nullable/index.js":"output/Data.Nullable/index.js","../Effect/index.js":"output/Effect/index.js","../Effect.Uncurried/index.js":"output/Effect.Uncurried/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.HTML.HTMLImageElement.CORSMode/index.js":"output/Web.HTML.HTMLImageElement.CORSMode/index.js","../Web.HTML.HTMLImageElement.DecodingHint/index.js":"output/Web.HTML.HTMLImageElement.DecodingHint/index.js","../Web.HTML.HTMLImageElement.Laziness/index.js":"output/Web.HTML.HTMLImageElement.Laziness/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLInputElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.accept = function (input) {
  return function () {
    return input.accept;
  };
};

exports.setAccept = function (accept) {
  return function (input) {
    return function () {
      input.accept = accept;
    };
  };
}; // ----------------------------------------------------------------------------


exports.alt = function (input) {
  return function () {
    return input.alt;
  };
};

exports.setAlt = function (alt) {
  return function (input) {
    return function () {
      input.alt = alt;
    };
  };
}; // ----------------------------------------------------------------------------


exports.autocomplete = function (input) {
  return function () {
    return input.autocomplete;
  };
};

exports.setAutocomplete = function (autocomplete) {
  return function (input) {
    return function () {
      input.autocomplete = autocomplete;
    };
  };
}; // ----------------------------------------------------------------------------


exports.autofocus = function (input) {
  return function () {
    return input.autofocus;
  };
};

exports.setAutofocus = function (autofocus) {
  return function (input) {
    return function () {
      input.autofocus = autofocus;
    };
  };
}; // ----------------------------------------------------------------------------


exports.defaultChecked = function (input) {
  return function () {
    return input.defaultChecked;
  };
};

exports.setDefaultChecked = function (defaultChecked) {
  return function (input) {
    return function () {
      input.defaultChecked = defaultChecked;
    };
  };
}; // ----------------------------------------------------------------------------


exports.checked = function (input) {
  return function () {
    return input.checked;
  };
};

exports.setChecked = function (checked) {
  return function (input) {
    return function () {
      input.checked = checked;
    };
  };
}; // ----------------------------------------------------------------------------


exports.dirName = function (input) {
  return function () {
    return input.dirName;
  };
};

exports.setDirName = function (dirName) {
  return function (input) {
    return function () {
      input.dirName = dirName;
    };
  };
}; // ----------------------------------------------------------------------------


exports.disabled = function (input) {
  return function () {
    return input.disabled;
  };
};

exports.setDisabled = function (disabled) {
  return function (input) {
    return function () {
      input.disabled = disabled;
    };
  };
}; // ----------------------------------------------------------------------------


exports._form = function (input) {
  return function () {
    return input.form;
  };
}; // ----------------------------------------------------------------------------


exports._files = function (input) {
  return function () {
    return input.files;
  };
}; // ----------------------------------------------------------------------------


exports.formAction = function (input) {
  return function () {
    return input.formAction;
  };
};

exports.setFormAction = function (formAction) {
  return function (input) {
    return function () {
      input.formAction = formAction;
    };
  };
}; // ----------------------------------------------------------------------------


exports.formEnctype = function (input) {
  return function () {
    return input.formEnctype;
  };
};

exports.setFormEnctype = function (formEnctype) {
  return function (input) {
    return function () {
      input.formEnctype = formEnctype;
    };
  };
}; // ----------------------------------------------------------------------------


exports.formMethod = function (input) {
  return function () {
    return input.formMethod;
  };
};

exports.setFormMethod = function (formMethod) {
  return function (input) {
    return function () {
      input.formMethod = formMethod;
    };
  };
}; // ----------------------------------------------------------------------------


exports.formNoValidate = function (input) {
  return function () {
    return input.formNoValidate;
  };
};

exports.setFormNoValidate = function (formNoValidate) {
  return function (input) {
    return function () {
      input.formNoValidate = formNoValidate;
    };
  };
}; // ----------------------------------------------------------------------------


exports.formTarget = function (input) {
  return function () {
    return input.formTarget;
  };
};

exports.setFormTarget = function (formTarget) {
  return function (input) {
    return function () {
      input.formTarget = formTarget;
    };
  };
}; // ----------------------------------------------------------------------------


exports.height = function (input) {
  return function () {
    return input.height;
  };
};

exports.setHeight = function (height) {
  return function (input) {
    return function () {
      input.height = height;
    };
  };
}; // ----------------------------------------------------------------------------


exports.indeterminate = function (input) {
  return function () {
    return input.indeterminate;
  };
};

exports.setIndeterminate = function (indeterminate) {
  return function (input) {
    return function () {
      input.indeterminate = indeterminate;
    };
  };
}; // ----------------------------------------------------------------------------


exports._list = function (input) {
  return function () {
    return input.list;
  };
}; // ----------------------------------------------------------------------------


exports.max = function (input) {
  return function () {
    return input.max;
  };
};

exports.setMax = function (max) {
  return function (input) {
    return function () {
      input.max = max;
    };
  };
}; // ----------------------------------------------------------------------------


exports.maxLength = function (input) {
  return function () {
    return input.maxLength;
  };
};

exports.setMaxLength = function (maxLength) {
  return function (input) {
    return function () {
      input.maxLength = maxLength;
    };
  };
}; // ----------------------------------------------------------------------------


exports.min = function (input) {
  return function () {
    return input.min;
  };
};

exports.setMin = function (min) {
  return function (input) {
    return function () {
      input.min = min;
    };
  };
}; // ----------------------------------------------------------------------------


exports.minLength = function (input) {
  return function () {
    return input.minLength;
  };
};

exports.setMinLength = function (minLength) {
  return function (input) {
    return function () {
      input.minLength = minLength;
    };
  };
}; // ----------------------------------------------------------------------------


exports.multiple = function (input) {
  return function () {
    return input.multiple;
  };
};

exports.setMultiple = function (multiple) {
  return function (input) {
    return function () {
      input.multiple = multiple;
    };
  };
}; // ----------------------------------------------------------------------------


exports.name = function (input) {
  return function () {
    return input.name;
  };
};

exports.setName = function (name) {
  return function (input) {
    return function () {
      input.name = name;
    };
  };
}; // ----------------------------------------------------------------------------


exports.pattern = function (input) {
  return function () {
    return input.pattern;
  };
};

exports.setPattern = function (pattern) {
  return function (input) {
    return function () {
      input.pattern = pattern;
    };
  };
}; // ----------------------------------------------------------------------------


exports.placeholder = function (input) {
  return function () {
    return input.placeholder;
  };
};

exports.setPlaceholder = function (placeholder) {
  return function (input) {
    return function () {
      input.placeholder = placeholder;
    };
  };
}; // ----------------------------------------------------------------------------


exports.readOnly = function (input) {
  return function () {
    return input.readOnly;
  };
};

exports.setReadOnly = function (readOnly) {
  return function (input) {
    return function () {
      input.readOnly = readOnly;
    };
  };
}; // ----------------------------------------------------------------------------


exports.required = function (input) {
  return function () {
    return input.required;
  };
};

exports.setRequired = function (required) {
  return function (input) {
    return function () {
      input.required = required;
    };
  };
}; // ----------------------------------------------------------------------------


exports.size = function (input) {
  return function () {
    return input.size;
  };
};

exports.setSize = function (size) {
  return function (input) {
    return function () {
      input.size = size;
    };
  };
}; // ----------------------------------------------------------------------------


exports.src = function (input) {
  return function () {
    return input.src;
  };
};

exports.setSrc = function (src) {
  return function (input) {
    return function () {
      input.src = src;
    };
  };
}; // ----------------------------------------------------------------------------


exports.step = function (input) {
  return function () {
    return input.step;
  };
};

exports.setStep = function (step) {
  return function (input) {
    return function () {
      input.step = step;
    };
  };
}; // ----------------------------------------------------------------------------


exports.type_ = function (input) {
  return function () {
    return input.type;
  };
};

exports.setType = function (type) {
  return function (input) {
    return function () {
      input.type = type;
    };
  };
}; // ----------------------------------------------------------------------------


exports.defaultValue = function (input) {
  return function () {
    return input.defaultValue;
  };
};

exports.setDefaultValue = function (defaultValue) {
  return function (input) {
    return function () {
      input.defaultValue = defaultValue;
    };
  };
}; // ----------------------------------------------------------------------------


exports.value = function (input) {
  return function () {
    return input.value;
  };
};

exports.setValue = function (value) {
  return function (input) {
    return function () {
      input.value = value;
    };
  };
}; // ----------------------------------------------------------------------------


exports.valueAsDate = function (input) {
  return function () {
    return input.valueAsDate;
  };
};

exports.setValueAsDate = function (valueAsDate) {
  return function (input) {
    return function () {
      input.valueAsDate = valueAsDate;
    };
  };
}; // ----------------------------------------------------------------------------


exports.valueAsNumber = function (input) {
  return function () {
    return input.valueAsNumber;
  };
};

exports.setValueAsNumber = function (valueAsNumber) {
  return function (input) {
    return function () {
      input.valueAsNumber = valueAsNumber;
    };
  };
}; // ----------------------------------------------------------------------------


exports.width = function (input) {
  return function () {
    return input.width;
  };
};

exports.setWidth = function (width) {
  return function (input) {
    return function () {
      input.width = width;
    };
  };
}; // ----------------------------------------------------------------------------


exports.stepUpBy = function (n) {
  return function (input) {
    return function () {
      input.stepUp(n);
    };
  };
}; // ----------------------------------------------------------------------------


exports.stepDownBy = function (n) {
  return function (input) {
    return function () {
      input.stepDown(n);
    };
  };
}; // ----------------------------------------------------------------------------


exports.willValidate = function (input) {
  return function () {
    return input.willValidate;
  };
}; // ----------------------------------------------------------------------------


exports.validity = function (input) {
  return function () {
    return input.validity;
  };
}; // ----------------------------------------------------------------------------


exports.validationMessage = function (input) {
  return function () {
    return input.validationMessage;
  };
}; // ----------------------------------------------------------------------------


exports.checkValidity = function (input) {
  return function () {
    return input.checkValidity();
  };
}; // ----------------------------------------------------------------------------


exports.reportValidity = function (input) {
  return function () {
    return input.reportValidity();
  };
}; // ----------------------------------------------------------------------------


exports.setCustomValidity = function (value) {
  return function (input) {
    return function () {
      input.setCustomValidity(value);
    };
  };
}; // ----------------------------------------------------------------------------


exports.labels = function (input) {
  return function () {
    return input.labels;
  };
}; // ----------------------------------------------------------------------------


exports.select = function (input) {
  return function () {
    input.select();
  };
}; // ----------------------------------------------------------------------------


exports.selectionStart = function (input) {
  return function () {
    return input.selectionStart;
  };
};

exports.setSelectionStart = function (selectionStart) {
  return function (input) {
    return function () {
      input.selectionStart = selectionStart;
    };
  };
}; // ----------------------------------------------------------------------------


exports.selectionEnd = function (input) {
  return function () {
    return input.selectionEnd;
  };
};

exports.setSelectionEnd = function (selectionEnd) {
  return function (input) {
    return function () {
      input.selectionEnd = selectionEnd;
    };
  };
}; // ----------------------------------------------------------------------------


exports.selectionDirection = function (input) {
  return function () {
    return input.selectionDirection;
  };
};

exports.setSelectionDirection = function (selectionDirection) {
  return function (input) {
    return function () {
      input.selectionDirection = selectionDirection;
    };
  };
}; // ----------------------------------------------------------------------------


exports.setRangeText = function (replacement) {
  return function (input) {
    return function () {
      input.setRangeText(replacement);
    };
  };
};

exports._setRangeText = function (replacement, start, end, selectionMode, textarea) {
  textarea.setRangeText(replacement, start, end, selectionMode);
}; // ----------------------------------------------------------------------------


exports.setSelectionRange = function (start) {
  return function (end) {
    return function (direction) {
      return function (input) {
        return function () {
          input.setSelectionRange(start, end, direction, input);
        };
      };
    };
  };
};
},{}],"output/Web.HTML.SelectionMode/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Preserve = function () {
  function Preserve() {}

  ;
  Preserve.value = new Preserve();
  return Preserve;
}();

var Select = function () {
  function Select() {}

  ;
  Select.value = new Select();
  return Select;
}();

var Start = function () {
  function Start() {}

  ;
  Start.value = new Start();
  return Start;
}();

var End = function () {
  function End() {}

  ;
  End.value = new End();
  return End;
}();

var showSelectionMode = {
  show: function show(v) {
    if (v instanceof Preserve) {
      return "Preserve";
    }

    ;

    if (v instanceof Select) {
      return "Select";
    }

    ;

    if (v instanceof Start) {
      return "Start";
    }

    ;

    if (v instanceof End) {
      return "End";
    }

    ;
    throw new Error("Failed pattern match at Web.HTML.SelectionMode (line 17, column 10 - line 21, column 17): " + [v.constructor.name]);
  }
};

var print = function print(v) {
  if (v instanceof Preserve) {
    return "preserve";
  }

  ;

  if (v instanceof Select) {
    return "select";
  }

  ;

  if (v instanceof Start) {
    return "start";
  }

  ;

  if (v instanceof End) {
    return "end";
  }

  ;
  throw new Error("Failed pattern match at Web.HTML.SelectionMode (line 32, column 9 - line 36, column 15): " + [v.constructor.name]);
};

var parse = function parse(v) {
  if (v === "preserve") {
    return new Data_Maybe.Just(Preserve.value);
  }

  ;

  if (v === "select") {
    return new Data_Maybe.Just(Select.value);
  }

  ;

  if (v === "start") {
    return new Data_Maybe.Just(Start.value);
  }

  ;

  if (v === "end") {
    return new Data_Maybe.Just(End.value);
  }

  ;
  return Data_Maybe.Nothing.value;
};

var eqSelectionMode = {
  eq: function eq(x) {
    return function (y) {
      if (x instanceof Preserve && y instanceof Preserve) {
        return true;
      }

      ;

      if (x instanceof Select && y instanceof Select) {
        return true;
      }

      ;

      if (x instanceof Start && y instanceof Start) {
        return true;
      }

      ;

      if (x instanceof End && y instanceof End) {
        return true;
      }

      ;
      return false;
    };
  }
};
var ordSelectionMode = {
  compare: function compare(x) {
    return function (y) {
      if (x instanceof Preserve && y instanceof Preserve) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof Preserve) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof Preserve) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof Select && y instanceof Select) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof Select) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof Select) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof Start && y instanceof Start) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof Start) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof Start) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof End && y instanceof End) {
        return Data_Ordering.EQ.value;
      }

      ;
      throw new Error("Failed pattern match at Web.HTML.SelectionMode (line 14, column 1 - line 14, column 54): " + [x.constructor.name, y.constructor.name]);
    };
  },
  Eq0: function Eq0() {
    return eqSelectionMode;
  }
};
module.exports = {
  Preserve: Preserve,
  Select: Select,
  Start: Start,
  End: End,
  parse: parse,
  print: print,
  eqSelectionMode: eqSelectionMode,
  ordSelectionMode: ordSelectionMode,
  showSelectionMode: showSelectionMode
};
},{"../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js"}],"output/Web.HTML.HTMLInputElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Effect = require("../Effect/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_HTML_SelectionMode = require("../Web.HTML.SelectionMode/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var stepUp$prime = $foreign.stepUpBy;
var stepUp = stepUp$prime(1);
var stepDown$prime = $foreign.stepDownBy;
var stepDown = stepDown$prime(1);

var setRangeText$prime = function setRangeText$prime(rpl) {
  return function (s) {
    return function (e) {
      return function (mode) {
        return function (area) {
          return function () {
            return $foreign["_setRangeText"](rpl, s, e, Web_HTML_SelectionMode.print(mode), area);
          };
        };
      };
    };
  };
};

var list = function () {
  var $0 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($1) {
    return $0($foreign["_list"]($1));
  };
}();

var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLInputElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLInputElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLInputElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLInputElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLInputElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLInputElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLInputElement");

var form = function () {
  var $2 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($3) {
    return $2($foreign["_form"]($3));
  };
}();

var files = function () {
  var $4 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($5) {
    return $4($foreign["_files"]($5));
  };
}();

module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  form: form,
  files: files,
  list: list,
  stepUp: stepUp,
  "stepUp'": stepUp$prime,
  stepDown: stepDown,
  "stepDown'": stepDown$prime,
  "setRangeText'": setRangeText$prime,
  accept: $foreign.accept,
  setAccept: $foreign.setAccept,
  alt: $foreign.alt,
  setAlt: $foreign.setAlt,
  autocomplete: $foreign.autocomplete,
  setAutocomplete: $foreign.setAutocomplete,
  autofocus: $foreign.autofocus,
  setAutofocus: $foreign.setAutofocus,
  defaultChecked: $foreign.defaultChecked,
  setDefaultChecked: $foreign.setDefaultChecked,
  checked: $foreign.checked,
  setChecked: $foreign.setChecked,
  dirName: $foreign.dirName,
  setDirName: $foreign.setDirName,
  disabled: $foreign.disabled,
  setDisabled: $foreign.setDisabled,
  formAction: $foreign.formAction,
  setFormAction: $foreign.setFormAction,
  formEnctype: $foreign.formEnctype,
  setFormEnctype: $foreign.setFormEnctype,
  formMethod: $foreign.formMethod,
  setFormMethod: $foreign.setFormMethod,
  formNoValidate: $foreign.formNoValidate,
  setFormNoValidate: $foreign.setFormNoValidate,
  formTarget: $foreign.formTarget,
  setFormTarget: $foreign.setFormTarget,
  height: $foreign.height,
  setHeight: $foreign.setHeight,
  indeterminate: $foreign.indeterminate,
  setIndeterminate: $foreign.setIndeterminate,
  max: $foreign.max,
  setMax: $foreign.setMax,
  maxLength: $foreign.maxLength,
  setMaxLength: $foreign.setMaxLength,
  min: $foreign.min,
  setMin: $foreign.setMin,
  minLength: $foreign.minLength,
  setMinLength: $foreign.setMinLength,
  multiple: $foreign.multiple,
  setMultiple: $foreign.setMultiple,
  name: $foreign.name,
  setName: $foreign.setName,
  pattern: $foreign.pattern,
  setPattern: $foreign.setPattern,
  placeholder: $foreign.placeholder,
  setPlaceholder: $foreign.setPlaceholder,
  readOnly: $foreign.readOnly,
  setReadOnly: $foreign.setReadOnly,
  required: $foreign.required,
  setRequired: $foreign.setRequired,
  size: $foreign.size,
  setSize: $foreign.setSize,
  src: $foreign.src,
  setSrc: $foreign.setSrc,
  step: $foreign.step,
  setStep: $foreign.setStep,
  type_: $foreign.type_,
  setType: $foreign.setType,
  defaultValue: $foreign.defaultValue,
  setDefaultValue: $foreign.setDefaultValue,
  value: $foreign.value,
  setValue: $foreign.setValue,
  valueAsDate: $foreign.valueAsDate,
  setValueAsDate: $foreign.setValueAsDate,
  valueAsNumber: $foreign.valueAsNumber,
  setValueAsNumber: $foreign.setValueAsNumber,
  width: $foreign.width,
  setWidth: $foreign.setWidth,
  willValidate: $foreign.willValidate,
  validity: $foreign.validity,
  validationMessage: $foreign.validationMessage,
  checkValidity: $foreign.checkValidity,
  reportValidity: $foreign.reportValidity,
  setCustomValidity: $foreign.setCustomValidity,
  labels: $foreign.labels,
  select: $foreign.select,
  selectionStart: $foreign.selectionStart,
  setSelectionStart: $foreign.setSelectionStart,
  selectionEnd: $foreign.selectionEnd,
  setSelectionEnd: $foreign.setSelectionEnd,
  selectionDirection: $foreign.selectionDirection,
  setSelectionDirection: $foreign.setSelectionDirection,
  setRangeText: $foreign.setRangeText,
  setSelectionRange: $foreign.setSelectionRange
};
},{"./foreign.js":"output/Web.HTML.HTMLInputElement/foreign.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Nullable/index.js":"output/Data.Nullable/index.js","../Effect/index.js":"output/Effect/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.HTML.SelectionMode/index.js":"output/Web.HTML.SelectionMode/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLKeygenElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.autofocus = function (keygen) {
  return function () {
    return keygen.autofocus;
  };
};

exports.setAutofocus = function (autofocus) {
  return function (keygen) {
    return function () {
      keygen.autofocus = autofocus;
    };
  };
}; // ----------------------------------------------------------------------------


exports.challenge = function (keygen) {
  return function () {
    return keygen.challenge;
  };
};

exports.setChallenge = function (challenge) {
  return function (keygen) {
    return function () {
      keygen.challenge = challenge;
    };
  };
}; // ----------------------------------------------------------------------------


exports.disabled = function (keygen) {
  return function () {
    return keygen.disabled;
  };
};

exports.setDisabled = function (disabled) {
  return function (keygen) {
    return function () {
      keygen.disabled = disabled;
    };
  };
}; // ----------------------------------------------------------------------------


exports._form = function (keygen) {
  return function () {
    return keygen.form;
  };
}; // ----------------------------------------------------------------------------


exports.keytype = function (keygen) {
  return function () {
    return keygen.keytype;
  };
};

exports.setKeytype = function (keytype) {
  return function (keygen) {
    return function () {
      keygen.keytype = keytype;
    };
  };
}; // ----------------------------------------------------------------------------


exports.name = function (keygen) {
  return function () {
    return keygen.name;
  };
};

exports.setName = function (name) {
  return function (keygen) {
    return function () {
      keygen.name = name;
    };
  };
}; // ----------------------------------------------------------------------------


exports.type_ = function (keygen) {
  return function () {
    return keygen.type;
  };
}; // ----------------------------------------------------------------------------


exports.willValidate = function (keygen) {
  return function () {
    return keygen.willValidate;
  };
}; // ----------------------------------------------------------------------------


exports.validity = function (keygen) {
  return function () {
    return keygen.validity;
  };
}; // ----------------------------------------------------------------------------


exports.validationMessage = function (keygen) {
  return function () {
    return keygen.validationMessage;
  };
}; // ----------------------------------------------------------------------------


exports.checkValidity = function (keygen) {
  return function () {
    return keygen.checkValidity();
  };
}; // ----------------------------------------------------------------------------


exports.reportValidity = function (keygen) {
  return function () {
    return keygen.reportValidity();
  };
}; // ----------------------------------------------------------------------------


exports.setCustomValidity = function (value) {
  return function (keygen) {
    return function () {
      keygen.setCustomValidity(value);
    };
  };
}; // ----------------------------------------------------------------------------


exports.labels = function (keygen) {
  return function () {
    return keygen.labels;
  };
};
},{}],"output/Web.HTML.HTMLKeygenElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Effect = require("../Effect/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLKeygenElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLKeygenElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLKeygenElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLKeygenElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLKeygenElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLKeygenElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLKeygenElement");

var form = function () {
  var $0 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($1) {
    return $0($foreign["_form"]($1));
  };
}();

module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  form: form,
  autofocus: $foreign.autofocus,
  setAutofocus: $foreign.setAutofocus,
  challenge: $foreign.challenge,
  setChallenge: $foreign.setChallenge,
  disabled: $foreign.disabled,
  setDisabled: $foreign.setDisabled,
  keytype: $foreign.keytype,
  setKeytype: $foreign.setKeytype,
  name: $foreign.name,
  setName: $foreign.setName,
  type_: $foreign.type_,
  willValidate: $foreign.willValidate,
  validity: $foreign.validity,
  validationMessage: $foreign.validationMessage,
  checkValidity: $foreign.checkValidity,
  reportValidity: $foreign.reportValidity,
  setCustomValidity: $foreign.setCustomValidity,
  labels: $foreign.labels
};
},{"./foreign.js":"output/Web.HTML.HTMLKeygenElement/foreign.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Nullable/index.js":"output/Data.Nullable/index.js","../Effect/index.js":"output/Effect/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLLIElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.value = function (li) {
  return function () {
    return li.value;
  };
};

exports.setValue = function (value) {
  return function (li) {
    return function () {
      li.value = value;
    };
  };
};
},{}],"output/Web.HTML.HTMLLIElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLIElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLIElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLIElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLIElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLIElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLIElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLIElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  value: $foreign.value,
  setValue: $foreign.setValue
};
},{"./foreign.js":"output/Web.HTML.HTMLLIElement/foreign.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLLabelElement/foreign.js":[function(require,module,exports) {
"use strict";

exports._form = function (label) {
  return function () {
    return label.form;
  };
}; // ----------------------------------------------------------------------------


exports.htmlFor = function (label) {
  return function () {
    return label.htmlFor;
  };
};

exports.setHtmlFor = function (htmlFor) {
  return function (label) {
    return function () {
      label.htmlFor = htmlFor;
    };
  };
}; // ----------------------------------------------------------------------------


exports._control = function (label) {
  return function () {
    return label.control;
  };
};
},{}],"output/Web.HTML.HTMLLabelElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Effect = require("../Effect/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLabelElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLabelElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLabelElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLabelElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLabelElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLabelElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLabelElement");

var form = function () {
  var $0 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($1) {
    return $0($foreign["_form"]($1));
  };
}();

var control = function () {
  var $2 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($3) {
    return $2($foreign["_control"]($3));
  };
}();

module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  form: form,
  control: control,
  htmlFor: $foreign.htmlFor,
  setHtmlFor: $foreign.setHtmlFor
};
},{"./foreign.js":"output/Web.HTML.HTMLLabelElement/foreign.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Nullable/index.js":"output/Data.Nullable/index.js","../Effect/index.js":"output/Effect/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLLegendElement/foreign.js":[function(require,module,exports) {
"use strict";

exports._form = function (le) {
  return function () {
    return le.form;
  };
};
},{}],"output/Web.HTML.HTMLLegendElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Effect = require("../Effect/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLegendElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLegendElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLegendElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLegendElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLegendElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLegendElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLegendElement");

var form = function () {
  var $0 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($1) {
    return $0($foreign["_form"]($1));
  };
}();

module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  form: form
};
},{"./foreign.js":"output/Web.HTML.HTMLLegendElement/foreign.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Nullable/index.js":"output/Data.Nullable/index.js","../Effect/index.js":"output/Effect/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLLinkElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.disabled = function (link) {
  return function () {
    return link.disabled;
  };
};

exports.setDisabled = function (disabled) {
  return function (link) {
    return function () {
      link.disabled = disabled;
    };
  };
}; // ----------------------------------------------------------------------------


exports.href = function (link) {
  return function () {
    return link.href;
  };
};

exports.setHref = function (href) {
  return function (link) {
    return function () {
      link.href = href;
    };
  };
}; // ----------------------------------------------------------------------------


exports.crossOrigin = function (link) {
  return function () {
    return link.crossOrigin;
  };
};

exports.setCrossOrigin = function (crossOrigin) {
  return function (link) {
    return function () {
      link.crossOrigin = crossOrigin;
    };
  };
}; // ----------------------------------------------------------------------------


exports.rel = function (link) {
  return function () {
    return link.rel;
  };
};

exports.setRel = function (rel) {
  return function (link) {
    return function () {
      link.rel = rel;
    };
  };
}; // ----------------------------------------------------------------------------


exports.rev = function (link) {
  return function () {
    return link.rev;
  };
};

exports.setRev = function (rev) {
  return function (link) {
    return function () {
      link.rev = rev;
    };
  };
}; // ----------------------------------------------------------------------------


exports.relList = function (link) {
  return function () {
    return link.relList;
  };
}; // ----------------------------------------------------------------------------


exports.media = function (link) {
  return function () {
    return link.media;
  };
};

exports.setMedia = function (media) {
  return function (link) {
    return function () {
      link.media = media;
    };
  };
}; // ----------------------------------------------------------------------------


exports.hreflang = function (link) {
  return function () {
    return link.hreflang;
  };
};

exports.setHreflang = function (hreflang) {
  return function (link) {
    return function () {
      link.hreflang = hreflang;
    };
  };
}; // ----------------------------------------------------------------------------


exports.type_ = function (link) {
  return function () {
    return link.type;
  };
};

exports.setType = function (type) {
  return function (link) {
    return function () {
      link.type = type;
    };
  };
};
},{}],"output/Web.HTML.HTMLLinkElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLinkElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLinkElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLinkElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLinkElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLinkElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLinkElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLinkElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  disabled: $foreign.disabled,
  setDisabled: $foreign.setDisabled,
  href: $foreign.href,
  setHref: $foreign.setHref,
  crossOrigin: $foreign.crossOrigin,
  setCrossOrigin: $foreign.setCrossOrigin,
  rel: $foreign.rel,
  setRel: $foreign.setRel,
  rev: $foreign.rev,
  setRev: $foreign.setRev,
  relList: $foreign.relList,
  media: $foreign.media,
  setMedia: $foreign.setMedia,
  hreflang: $foreign.hreflang,
  setHreflang: $foreign.setHreflang,
  type_: $foreign.type_,
  setType: $foreign.setType
};
},{"./foreign.js":"output/Web.HTML.HTMLLinkElement/foreign.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLMapElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.name = function (map) {
  return function () {
    return map.name;
  };
};

exports.setName = function (name) {
  return function (map) {
    return function () {
      map.name = name;
    };
  };
}; // ----------------------------------------------------------------------------


exports.areas = function (map) {
  return function () {
    return map.areas;
  };
}; // ----------------------------------------------------------------------------


exports.images = function (map) {
  return function () {
    return map.images;
  };
};
},{}],"output/Web.HTML.HTMLMapElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMapElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMapElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMapElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMapElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMapElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMapElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMapElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  name: $foreign.name,
  setName: $foreign.setName,
  areas: $foreign.areas,
  images: $foreign.images
};
},{"./foreign.js":"output/Web.HTML.HTMLMapElement/foreign.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLMediaElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.src = function (media) {
  return function () {
    return media.src;
  };
};

exports.setSrc = function (src) {
  return function (media) {
    return function () {
      media.src = src;
    };
  };
}; // ----------------------------------------------------------------------------


exports.currentSrc = function (media) {
  return function () {
    return media.currentSrc;
  };
}; // ----------------------------------------------------------------------------


exports.crossOrigin = function (media) {
  return function () {
    return media.crossOrigin;
  };
};

exports.setCrossOrigin = function (crossOrigin) {
  return function (media) {
    return function () {
      media.crossOrigin = crossOrigin;
    };
  };
}; // ----------------------------------------------------------------------------


exports._networkState = function (media) {
  return media.networkState;
}; // ----------------------------------------------------------------------------


exports.preload = function (media) {
  return function () {
    return media.preload;
  };
};

exports.setPreload = function (preload) {
  return function (media) {
    return function () {
      media.preload = preload;
    };
  };
}; // ----------------------------------------------------------------------------


exports.load = function (media) {
  return function () {
    return media.load();
  };
}; // ----------------------------------------------------------------------------


exports._canPlayType = function (type, media) {
  return media.canPlayType(type);
}; // ----------------------------------------------------------------------------


exports._readyState = function (media) {
  return media.readyState;
}; // ----------------------------------------------------------------------------


exports.seeking = function (media) {
  return function () {
    return media.seeking;
  };
}; // ----------------------------------------------------------------------------


exports.currentTime = function (media) {
  return function () {
    return media.currentTime;
  };
};

exports.setCurrentTime = function (currentTime) {
  return function (media) {
    return function () {
      media.currentTime = currentTime;
    };
  };
}; // ----------------------------------------------------------------------------


exports.duration = function (media) {
  return function () {
    return media.duration;
  };
}; // ----------------------------------------------------------------------------


exports.getStartDate = function (media) {
  return function () {
    return media.getStartDate();
  };
}; // ----------------------------------------------------------------------------


exports.paused = function (media) {
  return function () {
    return media.paused;
  };
}; // ----------------------------------------------------------------------------


exports.defaultPlaybackRate = function (media) {
  return function () {
    return media.defaultPlaybackRate;
  };
};

exports.setDefaultPlaybackRate = function (defaultPlaybackRate) {
  return function (media) {
    return function () {
      media.defaultPlaybackRate = defaultPlaybackRate;
    };
  };
}; // ----------------------------------------------------------------------------


exports.playbackRate = function (media) {
  return function () {
    return media.playbackRate;
  };
};

exports.setPlaybackRate = function (playbackRate) {
  return function (media) {
    return function () {
      media.playbackRate = playbackRate;
    };
  };
}; // ----------------------------------------------------------------------------


exports.ended = function (media) {
  return function () {
    return media.ended;
  };
}; // ----------------------------------------------------------------------------


exports.autoplay = function (media) {
  return function () {
    return media.autoplay;
  };
};

exports.setAutoplay = function (autoplay) {
  return function (media) {
    return function () {
      media.autoplay = autoplay;
    };
  };
}; // ----------------------------------------------------------------------------


exports.loop = function (media) {
  return function () {
    return media.loop;
  };
};

exports.setLoop = function (loop) {
  return function (media) {
    return function () {
      media.loop = loop;
    };
  };
}; // ----------------------------------------------------------------------------


exports.play = function (media) {
  return function () {
    media.play();
  };
}; // ----------------------------------------------------------------------------


exports.pause = function (media) {
  return function () {
    media.pause();
  };
}; // ----------------------------------------------------------------------------


exports.mediaGroup = function (media) {
  return function () {
    return media.mediaGroup;
  };
};

exports.setMediaGroup = function (mediaGroup) {
  return function (media) {
    return function () {
      media.mediaGroup = mediaGroup;
    };
  };
}; // ----------------------------------------------------------------------------


exports.controls = function (media) {
  return function () {
    return media.controls;
  };
};

exports.setControls = function (controls) {
  return function (media) {
    return function () {
      media.controls = controls;
    };
  };
}; // ----------------------------------------------------------------------------


exports.volume = function (media) {
  return function () {
    return media.volume;
  };
};

exports.setVolume = function (volume) {
  return function (media) {
    return function () {
      media.volume = volume;
    };
  };
}; // ----------------------------------------------------------------------------


exports.muted = function (media) {
  return function () {
    return media.muted;
  };
};

exports.setMuted = function (muted) {
  return function (media) {
    return function () {
      media.muted = muted;
    };
  };
}; // ----------------------------------------------------------------------------


exports.defaultMuted = function (media) {
  return function () {
    return media.defaultMuted;
  };
};

exports.setDefaultMuted = function (defaultMuted) {
  return function (media) {
    return function () {
      media.defaultMuted = defaultMuted;
    };
  };
};
},{}],"output/Web.HTML.HTMLMediaElement.CanPlayType/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Unspecified = function () {
  function Unspecified() {}

  ;
  Unspecified.value = new Unspecified();
  return Unspecified;
}();

var Maybe = function () {
  function Maybe() {}

  ;
  Maybe.value = new Maybe();
  return Maybe;
}();

var Probably = function () {
  function Probably() {}

  ;
  Probably.value = new Probably();
  return Probably;
}();

var showCanPlayType = {
  show: function show(v) {
    if (v instanceof Unspecified) {
      return "Unspecified";
    }

    ;

    if (v instanceof Maybe) {
      return "Maybe";
    }

    ;

    if (v instanceof Probably) {
      return "Probably";
    }

    ;
    throw new Error("Failed pattern match at Web.HTML.HTMLMediaElement.CanPlayType (line 16, column 10 - line 19, column 27): " + [v.constructor.name]);
  }
};

var print = function print(v) {
  if (v instanceof Unspecified) {
    return "";
  }

  ;

  if (v instanceof Maybe) {
    return "maybe";
  }

  ;

  if (v instanceof Probably) {
    return "probably";
  }

  ;
  throw new Error("Failed pattern match at Web.HTML.HTMLMediaElement.CanPlayType (line 29, column 9 - line 32, column 25): " + [v.constructor.name]);
};

var parse = function parse(v) {
  if (v === "") {
    return new Data_Maybe.Just(Unspecified.value);
  }

  ;

  if (v === "maybe") {
    return new Data_Maybe.Just(Maybe.value);
  }

  ;

  if (v === "probably") {
    return new Data_Maybe.Just(Probably.value);
  }

  ;
  return Data_Maybe.Nothing.value;
};

var eqCanPlayType = {
  eq: function eq(x) {
    return function (y) {
      if (x instanceof Unspecified && y instanceof Unspecified) {
        return true;
      }

      ;

      if (x instanceof Maybe && y instanceof Maybe) {
        return true;
      }

      ;

      if (x instanceof Probably && y instanceof Probably) {
        return true;
      }

      ;
      return false;
    };
  }
};
var ordCanPlayType = {
  compare: function compare(x) {
    return function (y) {
      if (x instanceof Unspecified && y instanceof Unspecified) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof Unspecified) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof Unspecified) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof Maybe && y instanceof Maybe) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof Maybe) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof Maybe) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof Probably && y instanceof Probably) {
        return Data_Ordering.EQ.value;
      }

      ;
      throw new Error("Failed pattern match at Web.HTML.HTMLMediaElement.CanPlayType (line 13, column 1 - line 13, column 50): " + [x.constructor.name, y.constructor.name]);
    };
  },
  Eq0: function Eq0() {
    return eqCanPlayType;
  }
};
module.exports = {
  Unspecified: Unspecified,
  Maybe: Maybe,
  Probably: Probably,
  parse: parse,
  print: print,
  eqCanPlayType: eqCanPlayType,
  ordCanPlayType: ordCanPlayType,
  showCanPlayType: showCanPlayType
};
},{"../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js"}],"output/Web.HTML.HTMLMediaElement.NetworkState/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Data_Enum = require("../Data.Enum/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Empty = function () {
  function Empty() {}

  ;
  Empty.value = new Empty();
  return Empty;
}();

var Idle = function () {
  function Idle() {}

  ;
  Idle.value = new Idle();
  return Idle;
}();

var Loading = function () {
  function Loading() {}

  ;
  Loading.value = new Loading();
  return Loading;
}();

var NoSource = function () {
  function NoSource() {}

  ;
  NoSource.value = new NoSource();
  return NoSource;
}();

var toEnumNetworkState = function toEnumNetworkState(v) {
  if (v === 0) {
    return new Data_Maybe.Just(Empty.value);
  }

  ;

  if (v === 1) {
    return new Data_Maybe.Just(Idle.value);
  }

  ;

  if (v === 2) {
    return new Data_Maybe.Just(Loading.value);
  }

  ;

  if (v === 3) {
    return new Data_Maybe.Just(NoSource.value);
  }

  ;
  return Data_Maybe.Nothing.value;
};

var showNetworkState = {
  show: function show(v) {
    if (v instanceof Empty) {
      return "Empty";
    }

    ;

    if (v instanceof Idle) {
      return "Idle";
    }

    ;

    if (v instanceof Loading) {
      return "Loading";
    }

    ;

    if (v instanceof NoSource) {
      return "NoSource";
    }

    ;
    throw new Error("Failed pattern match at Web.HTML.HTMLMediaElement.NetworkState (line 29, column 1 - line 33, column 29): " + [v.constructor.name]);
  }
};

var fromEnumNetworkState = function fromEnumNetworkState(v) {
  if (v instanceof Empty) {
    return 0;
  }

  ;

  if (v instanceof Idle) {
    return 1;
  }

  ;

  if (v instanceof Loading) {
    return 2;
  }

  ;

  if (v instanceof NoSource) {
    return 3;
  }

  ;
  throw new Error("Failed pattern match at Web.HTML.HTMLMediaElement.NetworkState (line 46, column 3 - line 50, column 18): " + [v.constructor.name]);
};

var eqNetworkState = {
  eq: function eq(x) {
    return function (y) {
      if (x instanceof Empty && y instanceof Empty) {
        return true;
      }

      ;

      if (x instanceof Idle && y instanceof Idle) {
        return true;
      }

      ;

      if (x instanceof Loading && y instanceof Loading) {
        return true;
      }

      ;

      if (x instanceof NoSource && y instanceof NoSource) {
        return true;
      }

      ;
      return false;
    };
  }
};
var ordNetworkState = {
  compare: function compare(x) {
    return function (y) {
      if (x instanceof Empty && y instanceof Empty) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof Empty) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof Empty) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof Idle && y instanceof Idle) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof Idle) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof Idle) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof Loading && y instanceof Loading) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof Loading) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof Loading) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof NoSource && y instanceof NoSource) {
        return Data_Ordering.EQ.value;
      }

      ;
      throw new Error("Failed pattern match at Web.HTML.HTMLMediaElement.NetworkState (line 14, column 1 - line 14, column 52): " + [x.constructor.name, y.constructor.name]);
    };
  },
  Eq0: function Eq0() {
    return eqNetworkState;
  }
};
var enumNetworkState = {
  succ: Data_Enum.defaultSucc(toEnumNetworkState)(fromEnumNetworkState),
  pred: Data_Enum.defaultPred(toEnumNetworkState)(fromEnumNetworkState),
  Ord0: function Ord0() {
    return ordNetworkState;
  }
};
var boundedNetworkState = {
  bottom: Empty.value,
  top: NoSource.value,
  Ord0: function Ord0() {
    return ordNetworkState;
  }
};
var boundedEnumNetworkState = {
  cardinality: 4,
  toEnum: toEnumNetworkState,
  fromEnum: fromEnumNetworkState,
  Bounded0: function Bounded0() {
    return boundedNetworkState;
  },
  Enum1: function Enum1() {
    return enumNetworkState;
  }
};
module.exports = {
  Empty: Empty,
  Idle: Idle,
  Loading: Loading,
  NoSource: NoSource,
  eqNetworkState: eqNetworkState,
  ordNetworkState: ordNetworkState,
  boundedNetworkState: boundedNetworkState,
  enumNetworkState: enumNetworkState,
  boundedEnumNetworkState: boundedEnumNetworkState,
  showNetworkState: showNetworkState
};
},{"../Data.Enum/index.js":"output/Data.Enum/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js"}],"output/Web.HTML.HTMLMediaElement.ReadyState/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Data_Enum = require("../Data.Enum/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var HaveNothing = function () {
  function HaveNothing() {}

  ;
  HaveNothing.value = new HaveNothing();
  return HaveNothing;
}();

var HaveMetadata = function () {
  function HaveMetadata() {}

  ;
  HaveMetadata.value = new HaveMetadata();
  return HaveMetadata;
}();

var HaveCurrentData = function () {
  function HaveCurrentData() {}

  ;
  HaveCurrentData.value = new HaveCurrentData();
  return HaveCurrentData;
}();

var HaveFutureData = function () {
  function HaveFutureData() {}

  ;
  HaveFutureData.value = new HaveFutureData();
  return HaveFutureData;
}();

var HaveEnoughData = function () {
  function HaveEnoughData() {}

  ;
  HaveEnoughData.value = new HaveEnoughData();
  return HaveEnoughData;
}();

var toEnumReadyState = function toEnumReadyState(v) {
  if (v === 0) {
    return new Data_Maybe.Just(HaveNothing.value);
  }

  ;

  if (v === 1) {
    return new Data_Maybe.Just(HaveMetadata.value);
  }

  ;

  if (v === 2) {
    return new Data_Maybe.Just(HaveCurrentData.value);
  }

  ;

  if (v === 3) {
    return new Data_Maybe.Just(HaveFutureData.value);
  }

  ;

  if (v === 4) {
    return new Data_Maybe.Just(HaveEnoughData.value);
  }

  ;
  return Data_Maybe.Nothing.value;
};

var showReadyState = {
  show: function show(v) {
    if (v instanceof HaveNothing) {
      return "HaveNothing";
    }

    ;

    if (v instanceof HaveMetadata) {
      return "HaveMetadata";
    }

    ;

    if (v instanceof HaveCurrentData) {
      return "HaveCurrentData";
    }

    ;

    if (v instanceof HaveFutureData) {
      return "HaveFutureData";
    }

    ;

    if (v instanceof HaveEnoughData) {
      return "HaveEnoughData";
    }

    ;
    throw new Error("Failed pattern match at Web.HTML.HTMLMediaElement.ReadyState (line 30, column 1 - line 35, column 41): " + [v.constructor.name]);
  }
};

var fromEnumReadyState = function fromEnumReadyState(v) {
  if (v instanceof HaveNothing) {
    return 0;
  }

  ;

  if (v instanceof HaveMetadata) {
    return 1;
  }

  ;

  if (v instanceof HaveCurrentData) {
    return 2;
  }

  ;

  if (v instanceof HaveFutureData) {
    return 3;
  }

  ;

  if (v instanceof HaveEnoughData) {
    return 4;
  }

  ;
  throw new Error("Failed pattern match at Web.HTML.HTMLMediaElement.ReadyState (line 49, column 3 - line 54, column 24): " + [v.constructor.name]);
};

var eqReadyState = {
  eq: function eq(x) {
    return function (y) {
      if (x instanceof HaveNothing && y instanceof HaveNothing) {
        return true;
      }

      ;

      if (x instanceof HaveMetadata && y instanceof HaveMetadata) {
        return true;
      }

      ;

      if (x instanceof HaveCurrentData && y instanceof HaveCurrentData) {
        return true;
      }

      ;

      if (x instanceof HaveFutureData && y instanceof HaveFutureData) {
        return true;
      }

      ;

      if (x instanceof HaveEnoughData && y instanceof HaveEnoughData) {
        return true;
      }

      ;
      return false;
    };
  }
};
var ordReadyState = {
  compare: function compare(x) {
    return function (y) {
      if (x instanceof HaveNothing && y instanceof HaveNothing) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof HaveNothing) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof HaveNothing) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof HaveMetadata && y instanceof HaveMetadata) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof HaveMetadata) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof HaveMetadata) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof HaveCurrentData && y instanceof HaveCurrentData) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof HaveCurrentData) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof HaveCurrentData) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof HaveFutureData && y instanceof HaveFutureData) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof HaveFutureData) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof HaveFutureData) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof HaveEnoughData && y instanceof HaveEnoughData) {
        return Data_Ordering.EQ.value;
      }

      ;
      throw new Error("Failed pattern match at Web.HTML.HTMLMediaElement.ReadyState (line 15, column 1 - line 15, column 48): " + [x.constructor.name, y.constructor.name]);
    };
  },
  Eq0: function Eq0() {
    return eqReadyState;
  }
};
var enumReadyState = {
  succ: Data_Enum.defaultSucc(toEnumReadyState)(fromEnumReadyState),
  pred: Data_Enum.defaultPred(toEnumReadyState)(fromEnumReadyState),
  Ord0: function Ord0() {
    return ordReadyState;
  }
};
var boundedReadyState = {
  bottom: HaveNothing.value,
  top: HaveEnoughData.value,
  Ord0: function Ord0() {
    return ordReadyState;
  }
};
var boundedEnumReadyState = {
  cardinality: 5,
  toEnum: toEnumReadyState,
  fromEnum: fromEnumReadyState,
  Bounded0: function Bounded0() {
    return boundedReadyState;
  },
  Enum1: function Enum1() {
    return enumReadyState;
  }
};
module.exports = {
  HaveNothing: HaveNothing,
  HaveMetadata: HaveMetadata,
  HaveCurrentData: HaveCurrentData,
  HaveFutureData: HaveFutureData,
  HaveEnoughData: HaveEnoughData,
  eqReadyState: eqReadyState,
  ordReadyState: ordReadyState,
  boundedReadyState: boundedReadyState,
  enumReadyState: enumReadyState,
  boundedEnumReadyState: boundedEnumReadyState,
  showReadyState: showReadyState
};
},{"../Data.Enum/index.js":"output/Data.Enum/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js"}],"output/Web.HTML.HTMLMediaElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Data_Enum = require("../Data.Enum/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Effect = require("../Effect/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_HTML_HTMLMediaElement_CanPlayType = require("../Web.HTML.HTMLMediaElement.CanPlayType/index.js");

var Web_HTML_HTMLMediaElement_NetworkState = require("../Web.HTML.HTMLMediaElement.NetworkState/index.js");

var Web_HTML_HTMLMediaElement_ReadyState = require("../Web.HTML.HTMLMediaElement.ReadyState/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;

var readyState = function readyState(el) {
  return Data_Functor.map(Effect.functorEffect)(function () {
    var $0 = Data_Maybe.fromMaybe(Web_HTML_HTMLMediaElement_ReadyState.HaveNothing.value);
    var $1 = Data_Enum.toEnum(Web_HTML_HTMLMediaElement_ReadyState.boundedEnumReadyState);
    return function ($2) {
      return $0($1($2));
    };
  }())(function () {
    return $foreign["_readyState"](el);
  });
};

var networkState = function networkState(el) {
  return Data_Functor.map(Effect.functorEffect)(function () {
    var $3 = Data_Maybe.fromMaybe(Web_HTML_HTMLMediaElement_NetworkState.Empty.value);
    var $4 = Data_Enum.toEnum(Web_HTML_HTMLMediaElement_NetworkState.boundedEnumNetworkState);
    return function ($5) {
      return $3($4($5));
    };
  }())(function () {
    return $foreign["_networkState"](el);
  });
};

var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMediaElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMediaElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMediaElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMediaElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMediaElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMediaElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMediaElement");

var canPlayType = function canPlayType(ty) {
  return function (el) {
    return Data_Functor.map(Effect.functorEffect)(function () {
      var $6 = Data_Maybe.fromMaybe(Web_HTML_HTMLMediaElement_CanPlayType.Unspecified.value);
      return function ($7) {
        return $6(Web_HTML_HTMLMediaElement_CanPlayType.parse($7));
      };
    }())(function () {
      return $foreign["_canPlayType"](ty, el);
    });
  };
};

module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  networkState: networkState,
  canPlayType: canPlayType,
  readyState: readyState,
  src: $foreign.src,
  setSrc: $foreign.setSrc,
  currentSrc: $foreign.currentSrc,
  crossOrigin: $foreign.crossOrigin,
  setCrossOrigin: $foreign.setCrossOrigin,
  preload: $foreign.preload,
  setPreload: $foreign.setPreload,
  load: $foreign.load,
  seeking: $foreign.seeking,
  currentTime: $foreign.currentTime,
  setCurrentTime: $foreign.setCurrentTime,
  duration: $foreign.duration,
  getStartDate: $foreign.getStartDate,
  paused: $foreign.paused,
  defaultPlaybackRate: $foreign.defaultPlaybackRate,
  setDefaultPlaybackRate: $foreign.setDefaultPlaybackRate,
  playbackRate: $foreign.playbackRate,
  setPlaybackRate: $foreign.setPlaybackRate,
  ended: $foreign.ended,
  autoplay: $foreign.autoplay,
  setAutoplay: $foreign.setAutoplay,
  loop: $foreign.loop,
  setLoop: $foreign.setLoop,
  play: $foreign.play,
  pause: $foreign.pause,
  mediaGroup: $foreign.mediaGroup,
  setMediaGroup: $foreign.setMediaGroup,
  controls: $foreign.controls,
  setControls: $foreign.setControls,
  volume: $foreign.volume,
  setVolume: $foreign.setVolume,
  muted: $foreign.muted,
  setMuted: $foreign.setMuted,
  defaultMuted: $foreign.defaultMuted,
  setDefaultMuted: $foreign.setDefaultMuted
};
},{"./foreign.js":"output/Web.HTML.HTMLMediaElement/foreign.js","../Data.Enum/index.js":"output/Data.Enum/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Effect/index.js":"output/Effect/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.HTML.HTMLMediaElement.CanPlayType/index.js":"output/Web.HTML.HTMLMediaElement.CanPlayType/index.js","../Web.HTML.HTMLMediaElement.NetworkState/index.js":"output/Web.HTML.HTMLMediaElement.NetworkState/index.js","../Web.HTML.HTMLMediaElement.ReadyState/index.js":"output/Web.HTML.HTMLMediaElement.ReadyState/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLMetaElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.name = function (meta) {
  return function () {
    return meta.name;
  };
};

exports.setName = function (name) {
  return function (meta) {
    return function () {
      meta.name = name;
    };
  };
}; // ----------------------------------------------------------------------------


exports.httpEquiv = function (meta) {
  return function () {
    return meta.httpEquiv;
  };
};

exports.setHttpEquiv = function (httpEquiv) {
  return function (meta) {
    return function () {
      meta.httpEquiv = httpEquiv;
    };
  };
}; // ----------------------------------------------------------------------------


exports.content = function (meta) {
  return function () {
    return meta.content;
  };
};

exports.setContent = function (content) {
  return function (meta) {
    return function () {
      meta.content = content;
    };
  };
};
},{}],"output/Web.HTML.HTMLMetaElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMetaElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMetaElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMetaElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMetaElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMetaElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMetaElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMetaElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  name: $foreign.name,
  setName: $foreign.setName,
  httpEquiv: $foreign.httpEquiv,
  setHttpEquiv: $foreign.setHttpEquiv,
  content: $foreign.content,
  setContent: $foreign.setContent
};
},{"./foreign.js":"output/Web.HTML.HTMLMetaElement/foreign.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLMeterElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.value = function (meter) {
  return function () {
    return meter.value;
  };
};

exports.setValue = function (value) {
  return function (meter) {
    return function () {
      meter.value = value;
    };
  };
}; // ----------------------------------------------------------------------------


exports.min = function (meter) {
  return function () {
    return meter.min;
  };
};

exports.setMin = function (min) {
  return function (meter) {
    return function () {
      meter.min = min;
    };
  };
}; // ----------------------------------------------------------------------------


exports.max = function (meter) {
  return function () {
    return meter.max;
  };
};

exports.setMax = function (max) {
  return function (meter) {
    return function () {
      meter.max = max;
    };
  };
}; // ----------------------------------------------------------------------------


exports.low = function (meter) {
  return function () {
    return meter.low;
  };
};

exports.setLow = function (low) {
  return function (meter) {
    return function () {
      meter.low = low;
    };
  };
}; // ----------------------------------------------------------------------------


exports.high = function (meter) {
  return function () {
    return meter.high;
  };
};

exports.setHigh = function (high) {
  return function (meter) {
    return function () {
      meter.high = high;
    };
  };
}; // ----------------------------------------------------------------------------


exports.optimum = function (meter) {
  return function () {
    return meter.optimum;
  };
};

exports.setOptimum = function (optimum) {
  return function (meter) {
    return function () {
      meter.optimum = optimum;
    };
  };
}; // ----------------------------------------------------------------------------


exports.labels = function (meter) {
  return function () {
    return meter.labels;
  };
};
},{}],"output/Web.HTML.HTMLMeterElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMeterElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMeterElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMeterElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMeterElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMeterElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMeterElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMeterElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  value: $foreign.value,
  setValue: $foreign.setValue,
  min: $foreign.min,
  setMin: $foreign.setMin,
  max: $foreign.max,
  setMax: $foreign.setMax,
  low: $foreign.low,
  setLow: $foreign.setLow,
  high: $foreign.high,
  setHigh: $foreign.setHigh,
  optimum: $foreign.optimum,
  setOptimum: $foreign.setOptimum,
  labels: $foreign.labels
};
},{"./foreign.js":"output/Web.HTML.HTMLMeterElement/foreign.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLModElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.cite = function (mod) {
  return function () {
    return mod.cite;
  };
};

exports.setCite = function (cite) {
  return function (mod) {
    return function () {
      mod.cite = cite;
    };
  };
}; // ----------------------------------------------------------------------------


exports.dateTime = function (mod) {
  return function () {
    return mod.dateTime;
  };
};

exports.setDateTime = function (dateTime) {
  return function (mod) {
    return function () {
      mod.dateTime = dateTime;
    };
  };
};
},{}],"output/Web.HTML.HTMLModElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLModElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLModElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLModElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLModElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLModElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLModElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLModElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  cite: $foreign.cite,
  setCite: $foreign.setCite,
  dateTime: $foreign.dateTime,
  setDateTime: $foreign.setDateTime
};
},{"./foreign.js":"output/Web.HTML.HTMLModElement/foreign.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLOListElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.reversed = function (ol) {
  return function () {
    return ol.reversed;
  };
};

exports.setReversed = function (reversed) {
  return function (ol) {
    return function () {
      ol.reversed = reversed;
    };
  };
}; // ----------------------------------------------------------------------------


exports.start = function (ol) {
  return function () {
    return ol.start;
  };
};

exports.setStart = function (start) {
  return function (ol) {
    return function () {
      ol.start = start;
    };
  };
}; // ----------------------------------------------------------------------------


exports.type_ = function (ol) {
  return function () {
    return ol.type;
  };
};

exports.setType = function (type) {
  return function (ol) {
    return function () {
      ol.type = type;
    };
  };
};
},{}],"output/Web.HTML.HTMLOListElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOListElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOListElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOListElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOListElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOListElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOListElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOListElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  reversed: $foreign.reversed,
  setReversed: $foreign.setReversed,
  start: $foreign.start,
  setStart: $foreign.setStart,
  type_: $foreign.type_,
  setType: $foreign.setType
};
},{"./foreign.js":"output/Web.HTML.HTMLOListElement/foreign.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLObjectElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.data_ = function (object) {
  return function () {
    return object.data;
  };
};

exports.setData = function (data) {
  return function (object) {
    return function () {
      object.data = data;
    };
  };
}; // ----------------------------------------------------------------------------


exports.type_ = function (object) {
  return function () {
    return object.type;
  };
};

exports.setType = function (type) {
  return function (object) {
    return function () {
      object.type = type;
    };
  };
}; // ----------------------------------------------------------------------------


exports.typeMustMatch = function (object) {
  return function () {
    return object.typeMustMatch;
  };
}; // ----------------------------------------------------------------------------


exports.name = function (object) {
  return function () {
    return object.name;
  };
};

exports.setName = function (name) {
  return function (object) {
    return function () {
      object.name = name;
    };
  };
}; // ----------------------------------------------------------------------------


exports.useMap = function (object) {
  return function () {
    return object.useMap;
  };
};

exports.setUseMap = function (useMap) {
  return function (object) {
    return function () {
      object.useMap = useMap;
    };
  };
}; // ----------------------------------------------------------------------------


exports._form = function (object) {
  return function () {
    return object.form;
  };
}; // ----------------------------------------------------------------------------


exports.width = function (object) {
  return function () {
    return object.width;
  };
};

exports.setWidth = function (width) {
  return function (object) {
    return function () {
      object.width = width;
    };
  };
}; // ----------------------------------------------------------------------------


exports.height = function (object) {
  return function () {
    return object.height;
  };
};

exports.setHeight = function (height) {
  return function (object) {
    return function () {
      object.height = height;
    };
  };
}; // ----------------------------------------------------------------------------


exports._contentDocument = function (object) {
  return function () {
    return object.contentDocument;
  };
}; // ----------------------------------------------------------------------------


exports.willValidate = function (object) {
  return function () {
    return object.willValidate;
  };
}; // ----------------------------------------------------------------------------


exports.validity = function (object) {
  return function () {
    return object.validity;
  };
}; // ----------------------------------------------------------------------------


exports.validationMessage = function (object) {
  return function () {
    return object.validationMessage;
  };
}; // ----------------------------------------------------------------------------


exports.checkValidity = function (object) {
  return function () {
    return object.checkValidity();
  };
}; // ----------------------------------------------------------------------------


exports.reportValidity = function (object) {
  return function () {
    return object.reportValidity();
  };
}; // ----------------------------------------------------------------------------


exports.setCustomValidity = function (value) {
  return function (object) {
    return function () {
      object.setCustomValidity(value);
    };
  };
};
},{}],"output/Web.HTML.HTMLObjectElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Effect = require("../Effect/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLObjectElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLObjectElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLObjectElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLObjectElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLObjectElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLObjectElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLObjectElement");

var form = function () {
  var $0 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($1) {
    return $0($foreign["_form"]($1));
  };
}();

var contentDocument = function () {
  var $2 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($3) {
    return $2($foreign["_contentDocument"]($3));
  };
}();

module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  form: form,
  contentDocument: contentDocument,
  data_: $foreign.data_,
  setData: $foreign.setData,
  type_: $foreign.type_,
  setType: $foreign.setType,
  typeMustMatch: $foreign.typeMustMatch,
  name: $foreign.name,
  setName: $foreign.setName,
  useMap: $foreign.useMap,
  setUseMap: $foreign.setUseMap,
  width: $foreign.width,
  setWidth: $foreign.setWidth,
  height: $foreign.height,
  setHeight: $foreign.setHeight,
  willValidate: $foreign.willValidate,
  validity: $foreign.validity,
  validationMessage: $foreign.validationMessage,
  checkValidity: $foreign.checkValidity,
  reportValidity: $foreign.reportValidity,
  setCustomValidity: $foreign.setCustomValidity
};
},{"./foreign.js":"output/Web.HTML.HTMLObjectElement/foreign.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Nullable/index.js":"output/Data.Nullable/index.js","../Effect/index.js":"output/Effect/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLOptGroupElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.disabled = function (optgroup) {
  return function () {
    return optgroup.disabled;
  };
};

exports.setDisabled = function (disabled) {
  return function (optgroup) {
    return function () {
      optgroup.disabled = disabled;
    };
  };
}; // ----------------------------------------------------------------------------


exports.label = function (optgroup) {
  return function () {
    return optgroup.label;
  };
};

exports.setLabel = function (label) {
  return function (optgroup) {
    return function () {
      optgroup.label = label;
    };
  };
};
},{}],"output/Web.HTML.HTMLOptGroupElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOptGroupElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOptGroupElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOptGroupElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOptGroupElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOptGroupElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOptGroupElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOptGroupElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  disabled: $foreign.disabled,
  setDisabled: $foreign.setDisabled,
  label: $foreign.label,
  setLabel: $foreign.setLabel
};
},{"./foreign.js":"output/Web.HTML.HTMLOptGroupElement/foreign.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLOptionElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.disabled = function (option) {
  return function () {
    return option.disabled;
  };
};

exports.setDisabled = function (disabled) {
  return function (option) {
    return function () {
      option.disabled = disabled;
    };
  };
}; // ----------------------------------------------------------------------------


exports._form = function (option) {
  return function () {
    return option.form;
  };
}; // ----------------------------------------------------------------------------


exports.label = function (option) {
  return function () {
    return option.label;
  };
};

exports.setLabel = function (label) {
  return function (option) {
    return function () {
      option.label = label;
    };
  };
}; // ----------------------------------------------------------------------------


exports.defaultSelected = function (option) {
  return function () {
    return option.defaultSelected;
  };
};

exports.setDefaultSelected = function (defaultSelected) {
  return function (option) {
    return function () {
      option.defaultSelected = defaultSelected;
    };
  };
}; // ----------------------------------------------------------------------------


exports.selected = function (option) {
  return function () {
    return option.selected;
  };
};

exports.setSelected = function (selected) {
  return function (option) {
    return function () {
      option.selected = selected;
    };
  };
}; // ----------------------------------------------------------------------------


exports.value = function (option) {
  return function () {
    return option.value;
  };
};

exports.setValue = function (value) {
  return function (option) {
    return function () {
      option.value = value;
    };
  };
}; // ----------------------------------------------------------------------------


exports.text = function (option) {
  return function () {
    return option.text;
  };
};

exports.setText = function (text) {
  return function (option) {
    return function () {
      option.text = text;
    };
  };
}; // ----------------------------------------------------------------------------


exports.index = function (option) {
  return function () {
    return option.index;
  };
};
},{}],"output/Web.HTML.HTMLOptionElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Effect = require("../Effect/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOptionElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOptionElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOptionElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOptionElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOptionElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOptionElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOptionElement");

var form = function () {
  var $0 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($1) {
    return $0($foreign["_form"]($1));
  };
}();

module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  form: form,
  disabled: $foreign.disabled,
  setDisabled: $foreign.setDisabled,
  label: $foreign.label,
  setLabel: $foreign.setLabel,
  defaultSelected: $foreign.defaultSelected,
  setDefaultSelected: $foreign.setDefaultSelected,
  selected: $foreign.selected,
  setSelected: $foreign.setSelected,
  value: $foreign.value,
  setValue: $foreign.setValue,
  text: $foreign.text,
  setText: $foreign.setText,
  index: $foreign.index
};
},{"./foreign.js":"output/Web.HTML.HTMLOptionElement/foreign.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Nullable/index.js":"output/Data.Nullable/index.js","../Effect/index.js":"output/Effect/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLOutputElement/foreign.js":[function(require,module,exports) {
"use strict";

exports._form = function (output) {
  return function () {
    return output.form;
  };
}; // ----------------------------------------------------------------------------


exports.name = function (output) {
  return function () {
    return output.name;
  };
};

exports.setName = function (name) {
  return function (output) {
    return function () {
      output.name = name;
    };
  };
}; // ----------------------------------------------------------------------------


exports.type_ = function (output) {
  return function () {
    return output.type;
  };
}; // ----------------------------------------------------------------------------


exports.defaultValue = function (output) {
  return function () {
    return output.defaultValue;
  };
};

exports.setDefaultValue = function (defaultValue) {
  return function (output) {
    return function () {
      output.defaultValue = defaultValue;
    };
  };
}; // ----------------------------------------------------------------------------


exports.value = function (output) {
  return function () {
    return output.value;
  };
};

exports.setValue = function (value) {
  return function (output) {
    return function () {
      output.value = value;
    };
  };
}; // ----------------------------------------------------------------------------


exports.willValidate = function (output) {
  return function () {
    return output.willValidate;
  };
}; // ----------------------------------------------------------------------------


exports.validity = function (output) {
  return function () {
    return output.validity;
  };
}; // ----------------------------------------------------------------------------


exports.validationMessage = function (output) {
  return function () {
    return output.validationMessage;
  };
}; // ----------------------------------------------------------------------------


exports.checkValidity = function (output) {
  return function () {
    return output.checkValidity();
  };
}; // ----------------------------------------------------------------------------


exports.reportValidity = function (output) {
  return function () {
    return output.reportValidity();
  };
}; // ----------------------------------------------------------------------------


exports.setCustomValidity = function (value) {
  return function (output) {
    return function () {
      output.setCustomValidity(value);
    };
  };
}; // ----------------------------------------------------------------------------


exports.labels = function (output) {
  return function () {
    return output.labels;
  };
};
},{}],"output/Web.HTML.HTMLOutputElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Effect = require("../Effect/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOutputElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOutputElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOutputElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOutputElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOutputElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOutputElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOutputElement");

var form = function () {
  var $0 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($1) {
    return $0($foreign["_form"]($1));
  };
}();

module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  form: form,
  name: $foreign.name,
  setName: $foreign.setName,
  type_: $foreign.type_,
  defaultValue: $foreign.defaultValue,
  setDefaultValue: $foreign.setDefaultValue,
  value: $foreign.value,
  setValue: $foreign.setValue,
  willValidate: $foreign.willValidate,
  validity: $foreign.validity,
  validationMessage: $foreign.validationMessage,
  checkValidity: $foreign.checkValidity,
  reportValidity: $foreign.reportValidity,
  setCustomValidity: $foreign.setCustomValidity,
  labels: $foreign.labels
};
},{"./foreign.js":"output/Web.HTML.HTMLOutputElement/foreign.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Nullable/index.js":"output/Data.Nullable/index.js","../Effect/index.js":"output/Effect/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLParagraphElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLParagraphElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLParagraphElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLParagraphElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLParagraphElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLParagraphElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLParagraphElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLParagraphElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget
};
},{"../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLParamElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.name = function (param) {
  return function () {
    return param.name;
  };
};

exports.setName = function (name) {
  return function (param) {
    return function () {
      param.name = name;
    };
  };
}; // ----------------------------------------------------------------------------


exports.value = function (param) {
  return function () {
    return param.value;
  };
};

exports.setValue = function (value) {
  return function (param) {
    return function () {
      param.value = value;
    };
  };
};
},{}],"output/Web.HTML.HTMLParamElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLParamElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLParamElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLParamElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLParamElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLParamElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLParamElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLParamElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  name: $foreign.name,
  setName: $foreign.setName,
  value: $foreign.value,
  setValue: $foreign.setValue
};
},{"./foreign.js":"output/Web.HTML.HTMLParamElement/foreign.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLPreElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLPreElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLPreElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLPreElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLPreElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLPreElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLPreElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLPreElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget
};
},{"../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLProgressElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.value = function (progress) {
  return function () {
    return progress.value;
  };
};

exports.setValue = function (value) {
  return function (progress) {
    return function () {
      progress.value = value;
    };
  };
}; // ----------------------------------------------------------------------------


exports.max = function (progress) {
  return function () {
    return progress.max;
  };
};

exports.setMax = function (max) {
  return function (progress) {
    return function () {
      progress.max = max;
    };
  };
}; // ----------------------------------------------------------------------------


exports.position = function (progress) {
  return function () {
    return progress.position;
  };
}; // ----------------------------------------------------------------------------


exports.labels = function (progress) {
  return function () {
    return progress.labels;
  };
};
},{}],"output/Web.HTML.HTMLProgressElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLProgressElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLProgressElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLProgressElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLProgressElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLProgressElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLProgressElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLProgressElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  value: $foreign.value,
  setValue: $foreign.setValue,
  max: $foreign.max,
  setMax: $foreign.setMax,
  position: $foreign.position,
  labels: $foreign.labels
};
},{"./foreign.js":"output/Web.HTML.HTMLProgressElement/foreign.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLQuoteElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.cite = function (quote) {
  return function () {
    return quote.cite;
  };
};

exports.setCite = function (cite) {
  return function (quote) {
    return function () {
      quote.cite = cite;
    };
  };
};
},{}],"output/Web.HTML.HTMLQuoteElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLQuoteElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLQuoteElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLQuoteElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLQuoteElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLQuoteElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLQuoteElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLQuoteElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  cite: $foreign.cite,
  setCite: $foreign.setCite
};
},{"./foreign.js":"output/Web.HTML.HTMLQuoteElement/foreign.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLScriptElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.src = function (script) {
  return function () {
    return script.src;
  };
};

exports.setSrc = function (src) {
  return function (script) {
    return function () {
      script.src = src;
    };
  };
}; // ----------------------------------------------------------------------------


exports.type_ = function (script) {
  return function () {
    return script.type;
  };
};

exports.setType = function (type) {
  return function (script) {
    return function () {
      script.type = type;
    };
  };
}; // ----------------------------------------------------------------------------


exports.charset = function (script) {
  return function () {
    return script.charset;
  };
};

exports.setCharset = function (charset) {
  return function (script) {
    return function () {
      script.charset = charset;
    };
  };
}; // ----------------------------------------------------------------------------


exports.async = function (script) {
  return function () {
    return script.async;
  };
};

exports.setAsync = function (async) {
  return function (script) {
    return function () {
      script.async = async;
    };
  };
}; // ----------------------------------------------------------------------------


exports.defer = function (script) {
  return function () {
    return script.defer;
  };
};

exports.setDefer = function (defer) {
  return function (script) {
    return function () {
      script.defer = defer;
    };
  };
}; // ----------------------------------------------------------------------------


exports.crossOrigin = function (script) {
  return function () {
    return script.crossOrigin;
  };
};

exports.setCrossOrigin = function (crossOrigin) {
  return function (script) {
    return function () {
      script.crossOrigin = crossOrigin;
    };
  };
}; // ----------------------------------------------------------------------------


exports.text = function (script) {
  return function () {
    return script.text;
  };
};

exports.setText = function (text) {
  return function (script) {
    return function () {
      script.text = text;
    };
  };
};
},{}],"output/Web.HTML.HTMLScriptElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLScriptElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLScriptElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLScriptElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLScriptElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLScriptElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLScriptElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLScriptElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  src: $foreign.src,
  setSrc: $foreign.setSrc,
  type_: $foreign.type_,
  setType: $foreign.setType,
  charset: $foreign.charset,
  setCharset: $foreign.setCharset,
  async: $foreign.async,
  setAsync: $foreign.setAsync,
  defer: $foreign.defer,
  setDefer: $foreign.setDefer,
  crossOrigin: $foreign.crossOrigin,
  setCrossOrigin: $foreign.setCrossOrigin,
  text: $foreign.text,
  setText: $foreign.setText
};
},{"./foreign.js":"output/Web.HTML.HTMLScriptElement/foreign.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLSelectElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.autofocus = function (select) {
  return function () {
    return select.autofocus;
  };
};

exports.setAutofocus = function (autofocus) {
  return function (select) {
    return function () {
      select.autofocus = autofocus;
    };
  };
}; // ----------------------------------------------------------------------------


exports.disabled = function (select) {
  return function () {
    return select.disabled;
  };
};

exports.setDisabled = function (disabled) {
  return function (select) {
    return function () {
      select.disabled = disabled;
    };
  };
}; // ----------------------------------------------------------------------------


exports.multiple = function (select) {
  return function () {
    return select.multiple;
  };
};

exports.setMultiple = function (multiple) {
  return function (select) {
    return function () {
      select.multiple = multiple;
    };
  };
}; // ----------------------------------------------------------------------------


exports._form = function (select) {
  return function () {
    return select.form;
  };
}; // ----------------------------------------------------------------------------


exports.name = function (select) {
  return function () {
    return select.name;
  };
};

exports.setName = function (name) {
  return function (select) {
    return function () {
      select.name = name;
    };
  };
}; // ----------------------------------------------------------------------------


exports.required = function (select) {
  return function () {
    return select.required;
  };
};

exports.setRequired = function (required) {
  return function (select) {
    return function () {
      select.required = required;
    };
  };
}; // ----------------------------------------------------------------------------


exports.size = function (select) {
  return function () {
    return select.size;
  };
};

exports.setSize = function (size) {
  return function (select) {
    return function () {
      select.size = size;
    };
  };
}; // ----------------------------------------------------------------------------


exports.type_ = function (select) {
  return function () {
    return select.type;
  };
}; // ----------------------------------------------------------------------------


exports.length = function (select) {
  return function () {
    return select.length;
  };
};

exports.setLength = function (length) {
  return function (select) {
    return function () {
      select.length = length;
    };
  };
}; // ----------------------------------------------------------------------------


exports.selectedOptions = function (select) {
  return function () {
    return select.selectedOptions;
  };
}; // ----------------------------------------------------------------------------


exports.selectedIndex = function (select) {
  return function () {
    return select.selectedIndex;
  };
};

exports.setSelectedIndex = function (selectedIndex) {
  return function (select) {
    return function () {
      select.selectedIndex = selectedIndex;
    };
  };
}; // ----------------------------------------------------------------------------


exports.value = function (select) {
  return function () {
    return select.value;
  };
};

exports.setValue = function (value) {
  return function (select) {
    return function () {
      select.value = value;
    };
  };
}; // ----------------------------------------------------------------------------


exports.willValidate = function (select) {
  return function () {
    return select.willValidate;
  };
}; // ----------------------------------------------------------------------------


exports.validity = function (select) {
  return function () {
    return select.validity;
  };
}; // ----------------------------------------------------------------------------


exports.validationMessage = function (select) {
  return function () {
    return select.validationMessage;
  };
}; // ----------------------------------------------------------------------------


exports.checkValidity = function (select) {
  return function () {
    return select.checkValidity();
  };
}; // ----------------------------------------------------------------------------


exports.reportValidity = function (select) {
  return function () {
    return select.reportValidity();
  };
}; // ----------------------------------------------------------------------------


exports.setCustomValidity = function (value) {
  return function (select) {
    return function () {
      select.setCustomValidity(value);
    };
  };
}; // ----------------------------------------------------------------------------


exports.labels = function (select) {
  return function () {
    return select.labels;
  };
};
},{}],"output/Web.HTML.HTMLSelectElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Effect = require("../Effect/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSelectElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSelectElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSelectElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSelectElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSelectElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSelectElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSelectElement");

var form = function () {
  var $0 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($1) {
    return $0($foreign["_form"]($1));
  };
}();

module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  form: form,
  autofocus: $foreign.autofocus,
  setAutofocus: $foreign.setAutofocus,
  disabled: $foreign.disabled,
  setDisabled: $foreign.setDisabled,
  multiple: $foreign.multiple,
  setMultiple: $foreign.setMultiple,
  name: $foreign.name,
  setName: $foreign.setName,
  required: $foreign.required,
  setRequired: $foreign.setRequired,
  size: $foreign.size,
  setSize: $foreign.setSize,
  type_: $foreign.type_,
  length: $foreign.length,
  setLength: $foreign.setLength,
  selectedOptions: $foreign.selectedOptions,
  selectedIndex: $foreign.selectedIndex,
  setSelectedIndex: $foreign.setSelectedIndex,
  value: $foreign.value,
  setValue: $foreign.setValue,
  willValidate: $foreign.willValidate,
  validity: $foreign.validity,
  validationMessage: $foreign.validationMessage,
  checkValidity: $foreign.checkValidity,
  reportValidity: $foreign.reportValidity,
  setCustomValidity: $foreign.setCustomValidity,
  labels: $foreign.labels
};
},{"./foreign.js":"output/Web.HTML.HTMLSelectElement/foreign.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Nullable/index.js":"output/Data.Nullable/index.js","../Effect/index.js":"output/Effect/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLSourceElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.src = function (source) {
  return function () {
    return source.src;
  };
};

exports.setSrc = function (src) {
  return function (source) {
    return function () {
      source.src = src;
    };
  };
}; // ----------------------------------------------------------------------------


exports.type_ = function (source) {
  return function () {
    return source.type;
  };
};

exports.setType = function (type) {
  return function (source) {
    return function () {
      source.type = type;
    };
  };
}; // ----------------------------------------------------------------------------


exports.media = function (source) {
  return function () {
    return source.media;
  };
};

exports.setMedia = function (media) {
  return function (source) {
    return function () {
      source.media = media;
    };
  };
};
},{}],"output/Web.HTML.HTMLSourceElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSourceElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSourceElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSourceElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSourceElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSourceElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSourceElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSourceElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  src: $foreign.src,
  setSrc: $foreign.setSrc,
  type_: $foreign.type_,
  setType: $foreign.setType,
  media: $foreign.media,
  setMedia: $foreign.setMedia
};
},{"./foreign.js":"output/Web.HTML.HTMLSourceElement/foreign.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLSpanElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSpanElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSpanElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSpanElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSpanElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSpanElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSpanElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSpanElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget
};
},{"../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLStyleElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.media = function (style) {
  return function () {
    return style.media;
  };
};

exports.setMedia = function (media) {
  return function (style) {
    return function () {
      style.media = media;
    };
  };
}; // ----------------------------------------------------------------------------


exports.type_ = function (style) {
  return function () {
    return style.type;
  };
};

exports.setType = function (type) {
  return function (style) {
    return function () {
      style.type = type;
    };
  };
};
},{}],"output/Web.HTML.HTMLStyleElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLStyleElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLStyleElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLStyleElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLStyleElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLStyleElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLStyleElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLStyleElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  media: $foreign.media,
  setMedia: $foreign.setMedia,
  type_: $foreign.type_,
  setType: $foreign.setType
};
},{"./foreign.js":"output/Web.HTML.HTMLStyleElement/foreign.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLTableCaptionElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableCaptionElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableCaptionElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableCaptionElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableCaptionElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableCaptionElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableCaptionElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableCaptionElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget
};
},{"../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLTableCellElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.colSpan = function (cell) {
  return function () {
    return cell.colSpan;
  };
};

exports.setColSpan = function (colSpan) {
  return function (cell) {
    return function () {
      cell.colSpan = colSpan;
    };
  };
}; // ----------------------------------------------------------------------------


exports.rowSpan = function (cell) {
  return function () {
    return cell.rowSpan;
  };
};

exports.setRowSpan = function (rowSpan) {
  return function (cell) {
    return function () {
      cell.rowSpan = rowSpan;
    };
  };
}; // ----------------------------------------------------------------------------


exports.cellIndex = function (cell) {
  return function () {
    return cell.cellIndex;
  };
};
},{}],"output/Web.HTML.HTMLTableCellElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableCellElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableCellElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableCellElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableCellElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableCellElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableCellElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableCellElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  colSpan: $foreign.colSpan,
  setColSpan: $foreign.setColSpan,
  rowSpan: $foreign.rowSpan,
  setRowSpan: $foreign.setRowSpan,
  cellIndex: $foreign.cellIndex
};
},{"./foreign.js":"output/Web.HTML.HTMLTableCellElement/foreign.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLTableColElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.span = function (col) {
  return function () {
    return col.span;
  };
};

exports.setSpan = function (span) {
  return function (col) {
    return function () {
      col.span = span;
    };
  };
};
},{}],"output/Web.HTML.HTMLTableColElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableColElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableColElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableColElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableColElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableColElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableColElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableColElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  span: $foreign.span,
  setSpan: $foreign.setSpan
};
},{"./foreign.js":"output/Web.HTML.HTMLTableColElement/foreign.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLTableDataCellElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLTableCellElement = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableDataCellElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableDataCellElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableDataCellElement");
var fromHTMLTableCellElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableDataCellElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableDataCellElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableDataCellElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableDataCellElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableDataCellElement");
module.exports = {
  fromHTMLTableCellElement: fromHTMLTableCellElement,
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLTableCellElement: toHTMLTableCellElement,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget
};
},{"../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLTableElement/foreign.js":[function(require,module,exports) {
"use strict";

exports._caption = function (table) {
  return function () {
    return table.caption;
  };
};

exports._setCaption = function (caption) {
  return function (table) {
    return function () {
      table.caption = caption;
    };
  };
}; // ----------------------------------------------------------------------------


exports.createCaption = function (table) {
  return function () {
    return table.createCaption();
  };
}; // ----------------------------------------------------------------------------


exports.deleteCaption = function (table) {
  return function () {
    table.deleteCaption();
  };
}; // ----------------------------------------------------------------------------


exports._tHead = function (table) {
  return function () {
    return table.tHead;
  };
};

exports._setTHead = function (tHead) {
  return function (table) {
    return function () {
      table.tHead = tHead;
    };
  };
}; // ----------------------------------------------------------------------------


exports.createTHead = function (table) {
  return function () {
    return table.createTHead();
  };
}; // ----------------------------------------------------------------------------


exports.deleteTHead = function (table) {
  return function () {
    table.deleteTHead();
  };
}; // ----------------------------------------------------------------------------


exports._tFoot = function (table) {
  return function () {
    return table.tFoot;
  };
};

exports._setTFoot = function (tFoot) {
  return function (table) {
    return function () {
      table.tFoot = tFoot;
    };
  };
}; // ----------------------------------------------------------------------------


exports.createTFoot = function (table) {
  return function () {
    return table.createTFoot();
  };
}; // ----------------------------------------------------------------------------


exports.deleteTFoot = function (table) {
  return function () {
    table.deleteTFoot();
  };
}; // ----------------------------------------------------------------------------


exports.tBodies = function (table) {
  return function () {
    return table.tBodies;
  };
}; // ----------------------------------------------------------------------------


exports.createTBody = function (table) {
  return function () {
    return table.createTBody();
  };
}; // ----------------------------------------------------------------------------


exports.rows = function (table) {
  return function () {
    return table.rows;
  };
}; // ----------------------------------------------------------------------------


exports.insertRowAt = function (index) {
  return function (table) {
    return function () {
      return table.insertRow(index);
    };
  };
}; // ----------------------------------------------------------------------------


exports.deleteRow = function (index) {
  return function (table) {
    return function () {
      table.deleteRow(index);
    };
  };
}; // ----------------------------------------------------------------------------


exports.border = function (table) {
  return function () {
    return table.border;
  };
};

exports.setBorder = function (border) {
  return function (table) {
    return function () {
      table.border = border;
    };
  };
};
},{}],"output/Web.HTML.HTMLTableElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Effect = require("../Effect/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;

var tHead = function () {
  var $0 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($1) {
    return $0($foreign["_tHead"]($1));
  };
}();

var tFoot = function () {
  var $2 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($3) {
    return $2($foreign["_tFoot"]($3));
  };
}();

var setTHead = function setTHead($4) {
  return $foreign["_setTHead"](Data_Nullable.toNullable($4));
};

var setTFoot = function setTFoot($5) {
  return $foreign["_setTFoot"](Data_Nullable.toNullable($5));
};

var setCaption = function setCaption($6) {
  return $foreign["_setCaption"](Data_Nullable.toNullable($6));
};

var insertRow$prime = $foreign.insertRowAt;
var insertRow = insertRow$prime(-1 | 0);
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableElement");

var caption = function () {
  var $7 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($8) {
    return $7($foreign["_caption"]($8));
  };
}();

module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  caption: caption,
  setCaption: setCaption,
  tHead: tHead,
  setTHead: setTHead,
  tFoot: tFoot,
  setTFoot: setTFoot,
  insertRow: insertRow,
  "insertRow'": insertRow$prime,
  createCaption: $foreign.createCaption,
  deleteCaption: $foreign.deleteCaption,
  createTHead: $foreign.createTHead,
  deleteTHead: $foreign.deleteTHead,
  createTFoot: $foreign.createTFoot,
  deleteTFoot: $foreign.deleteTFoot,
  tBodies: $foreign.tBodies,
  createTBody: $foreign.createTBody,
  rows: $foreign.rows,
  deleteRow: $foreign.deleteRow,
  border: $foreign.border,
  setBorder: $foreign.setBorder
};
},{"./foreign.js":"output/Web.HTML.HTMLTableElement/foreign.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Nullable/index.js":"output/Data.Nullable/index.js","../Effect/index.js":"output/Effect/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLTableHeaderCellElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.scope = function (cell) {
  return function () {
    return cell.scope;
  };
};

exports.setScope = function (scope) {
  return function (cell) {
    return function () {
      cell.scope = scope;
    };
  };
}; // ----------------------------------------------------------------------------


exports.abbr = function (cell) {
  return function () {
    return cell.abbr;
  };
};

exports.setAbbr = function (abbr) {
  return function (cell) {
    return function () {
      cell.abbr = abbr;
    };
  };
};
},{}],"output/Web.HTML.HTMLTableHeaderCellElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLTableCellElement = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableHeaderCellElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableHeaderCellElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableHeaderCellElement");
var fromHTMLTableCellElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableHeaderCellElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableHeaderCellElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableHeaderCellElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableHeaderCellElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableHeaderCellElement");
module.exports = {
  fromHTMLTableCellElement: fromHTMLTableCellElement,
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLTableCellElement: toHTMLTableCellElement,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  scope: $foreign.scope,
  setScope: $foreign.setScope,
  abbr: $foreign.abbr,
  setAbbr: $foreign.setAbbr
};
},{"./foreign.js":"output/Web.HTML.HTMLTableHeaderCellElement/foreign.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLTableRowElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.rowIndex = function (row) {
  return function () {
    return row.rowIndex;
  };
}; // ----------------------------------------------------------------------------


exports.sectionRowIndex = function (row) {
  return function () {
    return row.sectionRowIndex;
  };
}; // ----------------------------------------------------------------------------


exports.cells = function (row) {
  return function () {
    return row.cells;
  };
}; // ----------------------------------------------------------------------------


exports.insertCellAt = function (index) {
  return function (row) {
    return function () {
      return row.insertCell(index);
    };
  };
}; // ----------------------------------------------------------------------------


exports.deleteCell = function (index) {
  return function (row) {
    return function () {
      row.deleteCell(index);
    };
  };
};
},{}],"output/Web.HTML.HTMLTableRowElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var insertCell$prime = $foreign.insertCellAt;
var insertCell = insertCell$prime(-1 | 0);
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableRowElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableRowElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableRowElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableRowElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableRowElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableRowElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableRowElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  insertCell: insertCell,
  "insertCell'": insertCell$prime,
  rowIndex: $foreign.rowIndex,
  sectionRowIndex: $foreign.sectionRowIndex,
  cells: $foreign.cells,
  deleteCell: $foreign.deleteCell
};
},{"./foreign.js":"output/Web.HTML.HTMLTableRowElement/foreign.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLTableSectionElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.rows = function (section) {
  return function () {
    return section.rows;
  };
}; // ----------------------------------------------------------------------------


exports.insertRowAt = function (index) {
  return function (section) {
    return function () {
      return section.insertRow(index);
    };
  };
}; // ----------------------------------------------------------------------------


exports.deleteRow = function (index) {
  return function (section) {
    return function () {
      section.deleteRow(index);
    };
  };
};
},{}],"output/Web.HTML.HTMLTableSectionElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var insertRow$prime = $foreign.insertRowAt;
var insertRow = insertRow$prime(-1 | 0);
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableSectionElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableSectionElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableSectionElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableSectionElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableSectionElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableSectionElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableSectionElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  insertRow: insertRow,
  "insertRow'": insertRow$prime,
  rows: $foreign.rows,
  deleteRow: $foreign.deleteRow
};
},{"./foreign.js":"output/Web.HTML.HTMLTableSectionElement/foreign.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLTemplateElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.content = function (template) {
  return function () {
    return template.content;
  };
};
},{}],"output/Web.HTML.HTMLTemplateElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTemplateElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTemplateElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTemplateElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTemplateElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTemplateElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTemplateElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTemplateElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  content: $foreign.content
};
},{"./foreign.js":"output/Web.HTML.HTMLTemplateElement/foreign.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLTextAreaElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.autocomplete = function (textarea) {
  return function () {
    return textarea.autocomplete;
  };
};

exports.setAutocomplete = function (autocomplete) {
  return function (textarea) {
    return function () {
      textarea.autocomplete = autocomplete;
    };
  };
}; // ----------------------------------------------------------------------------


exports.autofocus = function (textarea) {
  return function () {
    return textarea.autofocus;
  };
};

exports.setAutofocus = function (autofocus) {
  return function (textarea) {
    return function () {
      textarea.autofocus = autofocus;
    };
  };
}; // ----------------------------------------------------------------------------


exports.cols = function (textarea) {
  return function () {
    return textarea.cols;
  };
};

exports.setCols = function (cols) {
  return function (textarea) {
    return function () {
      textarea.cols = cols;
    };
  };
}; // ----------------------------------------------------------------------------


exports.dirName = function (textarea) {
  return function () {
    return textarea.dirName;
  };
};

exports.setDirName = function (dirName) {
  return function (textarea) {
    return function () {
      textarea.dirName = dirName;
    };
  };
}; // ----------------------------------------------------------------------------


exports.disabled = function (textarea) {
  return function () {
    return textarea.disabled;
  };
};

exports.setDisabled = function (disabled) {
  return function (textarea) {
    return function () {
      textarea.disabled = disabled;
    };
  };
}; // ----------------------------------------------------------------------------


exports._form = function (textarea) {
  return function () {
    return textarea.form;
  };
}; // ----------------------------------------------------------------------------


exports.maxLength = function (textarea) {
  return function () {
    return textarea.maxLength;
  };
};

exports.setMaxLength = function (maxLength) {
  return function (textarea) {
    return function () {
      textarea.maxLength = maxLength;
    };
  };
}; // ----------------------------------------------------------------------------


exports.minLength = function (textarea) {
  return function () {
    return textarea.minLength;
  };
};

exports.setMinLength = function (minLength) {
  return function (textarea) {
    return function () {
      textarea.minLength = minLength;
    };
  };
}; // ----------------------------------------------------------------------------


exports.name = function (textarea) {
  return function () {
    return textarea.name;
  };
};

exports.setName = function (name) {
  return function (textarea) {
    return function () {
      textarea.name = name;
    };
  };
}; // ----------------------------------------------------------------------------


exports.placeholder = function (textarea) {
  return function () {
    return textarea.placeholder;
  };
};

exports.setPlaceholder = function (placeholder) {
  return function (textarea) {
    return function () {
      textarea.placeholder = placeholder;
    };
  };
}; // ----------------------------------------------------------------------------


exports.readOnly = function (textarea) {
  return function () {
    return textarea.readOnly;
  };
};

exports.setReadOnly = function (readOnly) {
  return function (textarea) {
    return function () {
      textarea.readOnly = readOnly;
    };
  };
}; // ----------------------------------------------------------------------------


exports.required = function (textarea) {
  return function () {
    return textarea.required;
  };
};

exports.setRequired = function (required) {
  return function (textarea) {
    return function () {
      textarea.required = required;
    };
  };
}; // ----------------------------------------------------------------------------


exports.rows = function (textarea) {
  return function () {
    return textarea.rows;
  };
};

exports.setRows = function (rows) {
  return function (textarea) {
    return function () {
      textarea.rows = rows;
    };
  };
}; // ----------------------------------------------------------------------------


exports.wrap = function (textarea) {
  return function () {
    return textarea.wrap;
  };
};

exports.setWrap = function (wrap) {
  return function (textarea) {
    return function () {
      textarea.wrap = wrap;
    };
  };
}; // ----------------------------------------------------------------------------


exports.type_ = function (textarea) {
  return function () {
    return textarea.type;
  };
}; // ----------------------------------------------------------------------------


exports.defaultValue = function (textarea) {
  return function () {
    return textarea.defaultValue;
  };
};

exports.setDefaultValue = function (defaultValue) {
  return function (textarea) {
    return function () {
      textarea.defaultValue = defaultValue;
    };
  };
}; // ----------------------------------------------------------------------------


exports.value = function (textarea) {
  return function () {
    return textarea.value;
  };
};

exports.setValue = function (value) {
  return function (textarea) {
    return function () {
      textarea.value = value;
    };
  };
}; // ----------------------------------------------------------------------------


exports.textLength = function (textarea) {
  return function () {
    return textarea.textLength;
  };
}; // ----------------------------------------------------------------------------


exports.willValidate = function (textarea) {
  return function () {
    return textarea.willValidate;
  };
}; // ----------------------------------------------------------------------------


exports.validity = function (textarea) {
  return function () {
    return textarea.validity;
  };
}; // ----------------------------------------------------------------------------


exports.validationMessage = function (textarea) {
  return function () {
    return textarea.validationMessage;
  };
}; // ----------------------------------------------------------------------------


exports.checkValidity = function (textarea) {
  return function () {
    return textarea.checkValidity();
  };
}; // ----------------------------------------------------------------------------


exports.reportValidity = function (textarea) {
  return function () {
    return textarea.reportValidity();
  };
}; // ----------------------------------------------------------------------------


exports.setCustomValidity = function (value) {
  return function (textarea) {
    return function () {
      textarea.setCustomValidity(value);
    };
  };
}; // ----------------------------------------------------------------------------


exports.labels = function (textarea) {
  return function () {
    return textarea.labels;
  };
}; // ----------------------------------------------------------------------------


exports.select = function (textarea) {
  return function () {
    textarea.select();
  };
}; // ----------------------------------------------------------------------------


exports.selectionStart = function (textarea) {
  return function () {
    return textarea.selectionStart;
  };
};

exports.setSelectionStart = function (selectionStart) {
  return function (textarea) {
    return function () {
      textarea.selectionStart = selectionStart;
    };
  };
}; // ----------------------------------------------------------------------------


exports.selectionEnd = function (textarea) {
  return function () {
    return textarea.selectionEnd;
  };
};

exports.setSelectionEnd = function (selectionEnd) {
  return function (textarea) {
    return function () {
      textarea.selectionEnd = selectionEnd;
    };
  };
}; // ----------------------------------------------------------------------------


exports.selectionDirection = function (textarea) {
  return function () {
    return textarea.selectionDirection;
  };
};

exports.setSelectionDirection = function (selectionDirection) {
  return function (textarea) {
    return function () {
      textarea.selectionDirection = selectionDirection;
    };
  };
}; // ----------------------------------------------------------------------------


exports.setRangeText = function (replacement) {
  return function (textarea) {
    return function () {
      textarea.setRangeText(replacement);
    };
  };
};

exports._setRangeText = function (replacement, start, end, selectionMode, textarea) {
  textarea.setRangeText(replacement, start, end, selectionMode);
}; // ----------------------------------------------------------------------------


exports.setSelectionRange = function (start) {
  return function (end) {
    return function (direction) {
      return function (textarea) {
        return function () {
          textarea.setSelectionRange(start, end, direction);
        };
      };
    };
  };
};
},{}],"output/Web.HTML.HTMLTextAreaElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Effect = require("../Effect/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_HTML_SelectionMode = require("../Web.HTML.SelectionMode/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;

var setRangeText$prime = function setRangeText$prime(rpl) {
  return function (s) {
    return function (e) {
      return function (mode) {
        return function (area) {
          return function () {
            return $foreign["_setRangeText"](rpl, s, e, Web_HTML_SelectionMode.print(mode), area);
          };
        };
      };
    };
  };
};

var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTextAreaElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTextAreaElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTextAreaElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTextAreaElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTextAreaElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTextAreaElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTextAreaElement");

var form = function () {
  var $0 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($1) {
    return $0($foreign["_form"]($1));
  };
}();

module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  form: form,
  "setRangeText'": setRangeText$prime,
  autocomplete: $foreign.autocomplete,
  setAutocomplete: $foreign.setAutocomplete,
  autofocus: $foreign.autofocus,
  setAutofocus: $foreign.setAutofocus,
  cols: $foreign.cols,
  setCols: $foreign.setCols,
  dirName: $foreign.dirName,
  setDirName: $foreign.setDirName,
  disabled: $foreign.disabled,
  setDisabled: $foreign.setDisabled,
  maxLength: $foreign.maxLength,
  setMaxLength: $foreign.setMaxLength,
  minLength: $foreign.minLength,
  setMinLength: $foreign.setMinLength,
  name: $foreign.name,
  setName: $foreign.setName,
  placeholder: $foreign.placeholder,
  setPlaceholder: $foreign.setPlaceholder,
  readOnly: $foreign.readOnly,
  setReadOnly: $foreign.setReadOnly,
  required: $foreign.required,
  setRequired: $foreign.setRequired,
  rows: $foreign.rows,
  setRows: $foreign.setRows,
  wrap: $foreign.wrap,
  setWrap: $foreign.setWrap,
  type_: $foreign.type_,
  defaultValue: $foreign.defaultValue,
  setDefaultValue: $foreign.setDefaultValue,
  value: $foreign.value,
  setValue: $foreign.setValue,
  textLength: $foreign.textLength,
  willValidate: $foreign.willValidate,
  validity: $foreign.validity,
  validationMessage: $foreign.validationMessage,
  checkValidity: $foreign.checkValidity,
  reportValidity: $foreign.reportValidity,
  setCustomValidity: $foreign.setCustomValidity,
  labels: $foreign.labels,
  select: $foreign.select,
  selectionStart: $foreign.selectionStart,
  setSelectionStart: $foreign.setSelectionStart,
  selectionEnd: $foreign.selectionEnd,
  setSelectionEnd: $foreign.setSelectionEnd,
  selectionDirection: $foreign.selectionDirection,
  setSelectionDirection: $foreign.setSelectionDirection,
  setRangeText: $foreign.setRangeText,
  setSelectionRange: $foreign.setSelectionRange
};
},{"./foreign.js":"output/Web.HTML.HTMLTextAreaElement/foreign.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Nullable/index.js":"output/Data.Nullable/index.js","../Effect/index.js":"output/Effect/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.HTML.SelectionMode/index.js":"output/Web.HTML.SelectionMode/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLTimeElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.dateTime = function (time) {
  return function () {
    return time.dateTime;
  };
};

exports.setDateTime = function (dateTime) {
  return function (time) {
    return function () {
      time.dateTime = dateTime;
    };
  };
};
},{}],"output/Web.HTML.HTMLTimeElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTimeElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTimeElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTimeElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTimeElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTimeElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTimeElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTimeElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  dateTime: $foreign.dateTime,
  setDateTime: $foreign.setDateTime
};
},{"./foreign.js":"output/Web.HTML.HTMLTimeElement/foreign.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLTitleElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.text = function (title) {
  return function () {
    return title.text;
  };
};

exports.setText = function (text) {
  return function (title) {
    return function () {
      title.text = text;
    };
  };
};
},{}],"output/Web.HTML.HTMLTitleElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTitleElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTitleElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTitleElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTitleElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTitleElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTitleElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTitleElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  text: $foreign.text,
  setText: $foreign.setText
};
},{"./foreign.js":"output/Web.HTML.HTMLTitleElement/foreign.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLTrackElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.kind = function (track) {
  return function () {
    return track.kind;
  };
};

exports.setKind = function (kind) {
  return function (track) {
    return function () {
      track.kind = kind;
    };
  };
}; // ----------------------------------------------------------------------------


exports.src = function (track) {
  return function () {
    return track.src;
  };
};

exports.setSrc = function (src) {
  return function (track) {
    return function () {
      track.src = src;
    };
  };
}; // ----------------------------------------------------------------------------


exports.srclang = function (track) {
  return function () {
    return track.srclang;
  };
};

exports.setSrclang = function (srclang) {
  return function (track) {
    return function () {
      track.srclang = srclang;
    };
  };
}; // ----------------------------------------------------------------------------


exports.label = function (track) {
  return function () {
    return track.label;
  };
};

exports.setLabel = function (label) {
  return function (track) {
    return function () {
      track.label = label;
    };
  };
}; // ----------------------------------------------------------------------------


exports["default"] = function (track) {
  return function () {
    return track["default"];
  };
};

exports.setDefault = function (def) {
  return function (track) {
    return function () {
      track["default"] = def;
    };
  };
}; // ----------------------------------------------------------------------------


exports._readyState = function (track) {
  return track.readyState;
};
},{}],"output/Web.HTML.HTMLTrackElement.ReadyState/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Data_Enum = require("../Data.Enum/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var None = function () {
  function None() {}

  ;
  None.value = new None();
  return None;
}();

var Loading = function () {
  function Loading() {}

  ;
  Loading.value = new Loading();
  return Loading;
}();

var Loaded = function () {
  function Loaded() {}

  ;
  Loaded.value = new Loaded();
  return Loaded;
}();

var $$Error = function () {
  function $$Error() {}

  ;
  $$Error.value = new $$Error();
  return $$Error;
}();

var toEnumReadyState = function toEnumReadyState(v) {
  if (v === 0) {
    return new Data_Maybe.Just(None.value);
  }

  ;

  if (v === 1) {
    return new Data_Maybe.Just(Loading.value);
  }

  ;

  if (v === 2) {
    return new Data_Maybe.Just(Loaded.value);
  }

  ;

  if (v === 3) {
    return new Data_Maybe.Just($$Error.value);
  }

  ;
  return Data_Maybe.Nothing.value;
};

var showReadyState = {
  show: function show(v) {
    if (v instanceof None) {
      return "None";
    }

    ;

    if (v instanceof Loading) {
      return "Loading";
    }

    ;

    if (v instanceof Loaded) {
      return "Loaded";
    }

    ;

    if (v instanceof $$Error) {
      return "Error";
    }

    ;
    throw new Error("Failed pattern match at Web.HTML.HTMLTrackElement.ReadyState (line 29, column 1 - line 33, column 23): " + [v.constructor.name]);
  }
};

var fromEnumReadyState = function fromEnumReadyState(v) {
  if (v instanceof None) {
    return 0;
  }

  ;

  if (v instanceof Loading) {
    return 1;
  }

  ;

  if (v instanceof Loaded) {
    return 2;
  }

  ;

  if (v instanceof $$Error) {
    return 3;
  }

  ;
  throw new Error("Failed pattern match at Web.HTML.HTMLTrackElement.ReadyState (line 46, column 3 - line 50, column 15): " + [v.constructor.name]);
};

var eqReadyState = {
  eq: function eq(x) {
    return function (y) {
      if (x instanceof None && y instanceof None) {
        return true;
      }

      ;

      if (x instanceof Loading && y instanceof Loading) {
        return true;
      }

      ;

      if (x instanceof Loaded && y instanceof Loaded) {
        return true;
      }

      ;

      if (x instanceof $$Error && y instanceof $$Error) {
        return true;
      }

      ;
      return false;
    };
  }
};
var ordReadyState = {
  compare: function compare(x) {
    return function (y) {
      if (x instanceof None && y instanceof None) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof None) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof None) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof Loading && y instanceof Loading) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof Loading) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof Loading) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof Loaded && y instanceof Loaded) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof Loaded) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof Loaded) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof $$Error && y instanceof $$Error) {
        return Data_Ordering.EQ.value;
      }

      ;
      throw new Error("Failed pattern match at Web.HTML.HTMLTrackElement.ReadyState (line 14, column 1 - line 14, column 48): " + [x.constructor.name, y.constructor.name]);
    };
  },
  Eq0: function Eq0() {
    return eqReadyState;
  }
};
var enumReadyState = {
  succ: Data_Enum.defaultSucc(toEnumReadyState)(fromEnumReadyState),
  pred: Data_Enum.defaultPred(toEnumReadyState)(fromEnumReadyState),
  Ord0: function Ord0() {
    return ordReadyState;
  }
};
var boundedReadyState = {
  bottom: None.value,
  top: $$Error.value,
  Ord0: function Ord0() {
    return ordReadyState;
  }
};
var boundedEnumReadyState = {
  cardinality: 4,
  toEnum: toEnumReadyState,
  fromEnum: fromEnumReadyState,
  Bounded0: function Bounded0() {
    return boundedReadyState;
  },
  Enum1: function Enum1() {
    return enumReadyState;
  }
};
module.exports = {
  None: None,
  Loading: Loading,
  Loaded: Loaded,
  "Error": $$Error,
  toEnumReadyState: toEnumReadyState,
  fromEnumReadyState: fromEnumReadyState,
  eqReadyState: eqReadyState,
  ordReadyState: ordReadyState,
  boundedReadyState: boundedReadyState,
  enumReadyState: enumReadyState,
  boundedEnumReadyState: boundedEnumReadyState,
  showReadyState: showReadyState
};
},{"../Data.Enum/index.js":"output/Data.Enum/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js"}],"output/Web.HTML.HTMLTrackElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Data_Enum = require("../Data.Enum/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Effect = require("../Effect/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_HTML_HTMLTrackElement_ReadyState = require("../Web.HTML.HTMLTrackElement.ReadyState/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;

var readyState = function readyState(el) {
  return Data_Functor.map(Effect.functorEffect)(function () {
    var $0 = Data_Maybe.fromMaybe(Web_HTML_HTMLTrackElement_ReadyState.None.value);
    var $1 = Data_Enum.toEnum(Web_HTML_HTMLTrackElement_ReadyState.boundedEnumReadyState);
    return function ($2) {
      return $0($1($2));
    };
  }())(function () {
    return $foreign["_readyState"](el);
  });
};

var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTrackElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTrackElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTrackElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTrackElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTrackElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTrackElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTrackElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  readyState: readyState,
  kind: $foreign.kind,
  setKind: $foreign.setKind,
  src: $foreign.src,
  setSrc: $foreign.setSrc,
  srclang: $foreign.srclang,
  setSrclang: $foreign.setSrclang,
  label: $foreign.label,
  setLabel: $foreign.setLabel,
  "default": $foreign["default"],
  setDefault: $foreign.setDefault
};
},{"./foreign.js":"output/Web.HTML.HTMLTrackElement/foreign.js","../Data.Enum/index.js":"output/Data.Enum/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Effect/index.js":"output/Effect/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.HTML.HTMLTrackElement.ReadyState/index.js":"output/Web.HTML.HTMLTrackElement.ReadyState/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLUListElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLUListElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLUListElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLUListElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLUListElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLUListElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLUListElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLUListElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget
};
},{"../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLVideoElement/foreign.js":[function(require,module,exports) {
"use strict"; // ----------------------------------------------------------------------------

exports.width = function (video) {
  return function () {
    return video.width;
  };
};

exports.setWidth = function (width) {
  return function (video) {
    return function () {
      video.width = width;
    };
  };
}; // ----------------------------------------------------------------------------


exports.height = function (video) {
  return function () {
    return video.height;
  };
};

exports.setHeight = function (height) {
  return function (video) {
    return function () {
      video.height = height;
    };
  };
}; // ----------------------------------------------------------------------------


exports.videoWidth = function (video) {
  return function () {
    return video.videoWidth;
  };
}; // ----------------------------------------------------------------------------


exports.videoHeight = function (video) {
  return function () {
    return video.videoHeight;
  };
}; // ----------------------------------------------------------------------------


exports.poster = function (video) {
  return function () {
    return video.poster;
  };
};

exports.setPoster = function (poster) {
  return function (video) {
    return function () {
      video.poster = poster;
    };
  };
};
},{}],"output/Web.HTML.HTMLVideoElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLMediaElement = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLVideoElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLVideoElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLVideoElement");
var fromHTMLMediaElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLVideoElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLVideoElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLVideoElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLVideoElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLVideoElement");
module.exports = {
  fromHTMLMediaElement: fromHTMLMediaElement,
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLMediaElement: toHTMLMediaElement,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  width: $foreign.width,
  setWidth: $foreign.setWidth,
  height: $foreign.height,
  setHeight: $foreign.setHeight,
  videoWidth: $foreign.videoWidth,
  videoHeight: $foreign.videoHeight,
  poster: $foreign.poster,
  setPoster: $foreign.setPoster
};
},{"./foreign.js":"output/Web.HTML.HTMLVideoElement/foreign.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.History/foreign.js":[function(require,module,exports) {
"use strict";

exports.back = function (history) {
  return function () {
    return history.back();
  };
};

exports.forward = function (history) {
  return function () {
    return history.forward();
  };
};

exports.go = function (delta) {
  return function (history) {
    return function () {
      return history.go(delta);
    };
  };
};

exports.pushState = function (a) {
  return function (docTitle) {
    return function (url) {
      return function (history) {
        return function () {
          return history.pushState(a, docTitle, url);
        };
      };
    };
  };
};

exports.replaceState = function (a) {
  return function (docTitle) {
    return function (url) {
      return function (history) {
        return function () {
          return history.replaceState(a, docTitle, url);
        };
      };
    };
  };
};

exports.state = function (history) {
  return function () {
    return history.state;
  };
};
},{}],"output/Web.HTML.History/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Data_Ord = require("../Data.Ord/index.js");

var URL = function URL(x) {
  return x;
};

var DocumentTitle = function DocumentTitle(x) {
  return x;
};

var Delta = function Delta(x) {
  return x;
};

var newtypeURL = {
  Coercible0: function Coercible0() {
    return undefined;
  }
};
var newtypeDocumentTitle = {
  Coercible0: function Coercible0() {
    return undefined;
  }
};
var newtypeDelta = {
  Coercible0: function Coercible0() {
    return undefined;
  }
};
var eqURL = {
  eq: function eq(x) {
    return function (y) {
      return x === y;
    };
  }
};
var ordURL = {
  compare: function compare(x) {
    return function (y) {
      return Data_Ord.compare(Data_Ord.ordString)(x)(y);
    };
  },
  Eq0: function Eq0() {
    return eqURL;
  }
};
var eqDocumentTitle = {
  eq: function eq(x) {
    return function (y) {
      return x === y;
    };
  }
};
var ordDocumentTitle = {
  compare: function compare(x) {
    return function (y) {
      return Data_Ord.compare(Data_Ord.ordString)(x)(y);
    };
  },
  Eq0: function Eq0() {
    return eqDocumentTitle;
  }
};
var eqDelta = {
  eq: function eq(x) {
    return function (y) {
      return x === y;
    };
  }
};
var ordDelta = {
  compare: function compare(x) {
    return function (y) {
      return Data_Ord.compare(Data_Ord.ordInt)(x)(y);
    };
  },
  Eq0: function Eq0() {
    return eqDelta;
  }
};
module.exports = {
  DocumentTitle: DocumentTitle,
  Delta: Delta,
  URL: URL,
  eqDocumentTitle: eqDocumentTitle,
  ordDocumentTitle: ordDocumentTitle,
  newtypeDocumentTitle: newtypeDocumentTitle,
  eqDelta: eqDelta,
  ordDelta: ordDelta,
  newtypeDelta: newtypeDelta,
  eqURL: eqURL,
  ordURL: ordURL,
  newtypeURL: newtypeURL,
  back: $foreign.back,
  forward: $foreign.forward,
  go: $foreign.go,
  pushState: $foreign.pushState,
  replaceState: $foreign.replaceState,
  state: $foreign.state
};
},{"./foreign.js":"output/Web.HTML.History/foreign.js","../Data.Ord/index.js":"output/Data.Ord/index.js"}],"output/Web.HTML.Location/foreign.js":[function(require,module,exports) {
"use strict";

exports.hash = function (location) {
  return function () {
    return location.hash;
  };
};

exports.setHash = function (hash) {
  return function (location) {
    return function () {
      location.hash = hash;
    };
  };
}; // ----------------------------------------------------------------------------


exports.host = function (location) {
  return function () {
    return location.host;
  };
};

exports.setHost = function (host) {
  return function (location) {
    return function () {
      location.host = host;
    };
  };
}; // ----------------------------------------------------------------------------


exports.hostname = function (location) {
  return function () {
    return location.hostname;
  };
};

exports.setHostname = function (hostname) {
  return function (location) {
    return function () {
      location.hostname = hostname;
    };
  };
}; // ----------------------------------------------------------------------------


exports.href = function (location) {
  return function () {
    return location.href;
  };
};

exports.setHref = function (href) {
  return function (location) {
    return function () {
      location.href = href;
    };
  };
}; // ----------------------------------------------------------------------------


exports.origin = function (location) {
  return function () {
    return location.origin;
  };
};

exports.setOrigin = function (origin) {
  return function (location) {
    return function () {
      location.origin = origin;
    };
  };
}; // ----------------------------------------------------------------------------


exports.pathname = function (location) {
  return function () {
    return location.pathname;
  };
};

exports.setPathname = function (pathname) {
  return function (location) {
    return function () {
      location.pathname = pathname;
    };
  };
}; // ----------------------------------------------------------------------------


exports.port = function (location) {
  return function () {
    return location.port;
  };
};

exports.setPort = function (port) {
  return function (location) {
    return function () {
      location.port = port;
    };
  };
}; // ----------------------------------------------------------------------------


exports.protocol = function (location) {
  return function () {
    return location.protocol;
  };
};

exports.setProtocol = function (protocol) {
  return function (location) {
    return function () {
      location.protocol = protocol;
    };
  };
}; // ----------------------------------------------------------------------------


exports.search = function (location) {
  return function () {
    return location.search;
  };
};

exports.setSearch = function (search) {
  return function (location) {
    return function () {
      location.search = search;
    };
  };
}; // ----------------------------------------------------------------------------


exports.assign = function (url) {
  return function (location) {
    return function () {
      location.assign(url);
    };
  };
}; // ----------------------------------------------------------------------------


exports.replace = function (url) {
  return function (location) {
    return function () {
      location.replace(url);
    };
  };
}; // ----------------------------------------------------------------------------


exports.reload = function (location) {
  return function () {
    location.reload();
  };
};
},{}],"output/Web.HTML.Location/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

module.exports = {
  hash: $foreign.hash,
  setHash: $foreign.setHash,
  host: $foreign.host,
  setHost: $foreign.setHost,
  hostname: $foreign.hostname,
  setHostname: $foreign.setHostname,
  href: $foreign.href,
  setHref: $foreign.setHref,
  origin: $foreign.origin,
  setOrigin: $foreign.setOrigin,
  pathname: $foreign.pathname,
  setPathname: $foreign.setPathname,
  port: $foreign.port,
  setPort: $foreign.setPort,
  protocol: $foreign.protocol,
  setProtocol: $foreign.setProtocol,
  search: $foreign.search,
  setSearch: $foreign.setSearch,
  assign: $foreign.assign,
  replace: $foreign.replace,
  reload: $foreign.reload
};
},{"./foreign.js":"output/Web.HTML.Location/foreign.js"}],"output/Web.HTML.Navigator/foreign.js":[function(require,module,exports) {
"use strict";

exports.language = function (navigator) {
  return function () {
    return navigator.language;
  };
};

exports.languages = function (navigator) {
  return function () {
    return navigator.languages;
  };
};

exports.onLine = function (navigator) {
  return function () {
    return navigator.onLine;
  };
};

exports.platform = function (navigator) {
  return function () {
    return navigator.platform;
  };
};

exports.userAgent = function (navigator) {
  return function () {
    return navigator.userAgent;
  };
};
},{}],"output/Web.HTML.Navigator/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

module.exports = {
  language: $foreign.language,
  languages: $foreign.languages,
  onLine: $foreign.onLine,
  platform: $foreign.platform,
  userAgent: $foreign.userAgent
};
},{"./foreign.js":"output/Web.HTML.Navigator/foreign.js"}],"output/Web.HTML.Window/foreign.js":[function(require,module,exports) {
"use strict";

exports.document = function (window) {
  return function () {
    return window.document;
  };
};

exports.navigator = function (window) {
  return function () {
    return window.navigator;
  };
};

exports.location = function (window) {
  return function () {
    return window.location;
  };
};

exports.history = function (window) {
  return function () {
    return window.history;
  };
};

exports.innerWidth = function (window) {
  return function () {
    return window.innerWidth;
  };
};

exports.innerHeight = function (window) {
  return function () {
    return window.innerHeight;
  };
};

exports.alert = function (str) {
  return function (window) {
    return function () {
      window.alert(str);
    };
  };
};

exports.confirm = function (str) {
  return function (window) {
    return function () {
      return window.confirm(str);
    };
  };
};

exports.moveBy = function (xDelta) {
  return function (yDelta) {
    return function (window) {
      return function () {
        window.moveBy(xDelta, yDelta);
      };
    };
  };
};

exports.moveTo = function (width) {
  return function (height) {
    return function (window) {
      return function () {
        window.moveTo(width, height);
      };
    };
  };
};

exports._open = function (url) {
  return function (name) {
    return function (features) {
      return function (window) {
        return function () {
          return window.open(url, name, features);
        };
      };
    };
  };
};

exports.outerHeight = function (window) {
  return function () {
    return window.outerHeight;
  };
};

exports.outerWidth = function (window) {
  return function () {
    return window.outerWidth;
  };
};

exports.print = function (window) {
  return function () {
    window.print();
  };
};

exports._prompt = function (str) {
  return function (defaultText) {
    return function (window) {
      return function () {
        return window.prompt(str, defaultText);
      };
    };
  };
};

exports.resizeBy = function (xDelta) {
  return function (yDelta) {
    return function (window) {
      return function () {
        window.resizeBy(xDelta, yDelta);
      };
    };
  };
};

exports.resizeTo = function (width) {
  return function (height) {
    return function (window) {
      return function () {
        window.resizeTo(width, height);
      };
    };
  };
};

exports.screenX = function (window) {
  return function () {
    return window.screenX;
  };
};

exports.screenY = function (window) {
  return function () {
    return window.screenY;
  };
};

exports.scroll = function (xCoord) {
  return function (yCoord) {
    return function (window) {
      return function () {
        window.scroll(xCoord, yCoord);
      };
    };
  };
};

exports.scrollBy = function (xCoord) {
  return function (yCoord) {
    return function (window) {
      return function () {
        window.scrollBy(xCoord, yCoord);
      };
    };
  };
};

exports.scrollX = function (window) {
  return function () {
    return window.scrollX;
  };
};

exports.scrollY = function (window) {
  return function () {
    return window.scrollY;
  };
};

exports.localStorage = function (window) {
  return function () {
    return window.localStorage;
  };
};

exports.sessionStorage = function (window) {
  return function () {
    return window.sessionStorage;
  };
};

exports.requestAnimationFrame = function (fn) {
  return function (window) {
    return function () {
      return window.requestAnimationFrame(fn);
    };
  };
};

exports.cancelAnimationFrame = function (id) {
  return function (window) {
    return function () {
      return window.cancelAnimationFrame(id);
    };
  };
};

exports.requestIdleCallback = function (opts) {
  return function (fn) {
    return function (window) {
      return function () {
        return window.requestIdleCallback(fn, opts);
      };
    };
  };
};

exports.cancelIdleCallback = function (id) {
  return function (window) {
    return function () {
      return window.cancelIdleCallback(id);
    };
  };
};

exports.parent = function (window) {
  return function () {
    return window.parent;
  };
};

exports._opener = function (window) {
  return function () {
    return window.opener;
  };
};
},{}],"output/Web.HTML.Window/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Effect = require("../Effect/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var RequestIdleCallbackId = function RequestIdleCallbackId(x) {
  return x;
};

var RequestAnimationFrameId = function RequestAnimationFrameId(x) {
  return x;
};

var toEventTarget = Unsafe_Coerce.unsafeCoerce;

var promptDefault = function promptDefault(msg) {
  return function (defaultText) {
    return function (window) {
      return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_prompt"](msg)(defaultText)(window));
    };
  };
};

var prompt = function prompt(msg) {
  return function (window) {
    return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_prompt"](msg)("")(window));
  };
};

var opener = function opener(window) {
  return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_opener"](window));
};

var open = function open(url$prime) {
  return function (name) {
    return function (features) {
      return function (window) {
        return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_open"](url$prime)(name)(features)(window));
      };
    };
  };
};

var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("Window");
var eqRequestIdleCallbackId = {
  eq: function eq(x) {
    return function (y) {
      return x === y;
    };
  }
};
var ordRequestIdleCallbackId = {
  compare: function compare(x) {
    return function (y) {
      return Data_Ord.compare(Data_Ord.ordInt)(x)(y);
    };
  },
  Eq0: function Eq0() {
    return eqRequestIdleCallbackId;
  }
};
var eqRequestAnimationFrameId = {
  eq: function eq(x) {
    return function (y) {
      return x === y;
    };
  }
};
var ordRequestAnimationFrameId = {
  compare: function compare(x) {
    return function (y) {
      return Data_Ord.compare(Data_Ord.ordInt)(x)(y);
    };
  },
  Eq0: function Eq0() {
    return eqRequestAnimationFrameId;
  }
};
module.exports = {
  toEventTarget: toEventTarget,
  fromEventTarget: fromEventTarget,
  open: open,
  prompt: prompt,
  promptDefault: promptDefault,
  opener: opener,
  eqRequestAnimationFrameId: eqRequestAnimationFrameId,
  ordRequestAnimationFrameId: ordRequestAnimationFrameId,
  eqRequestIdleCallbackId: eqRequestIdleCallbackId,
  ordRequestIdleCallbackId: ordRequestIdleCallbackId,
  document: $foreign.document,
  navigator: $foreign.navigator,
  location: $foreign.location,
  history: $foreign.history,
  innerWidth: $foreign.innerWidth,
  innerHeight: $foreign.innerHeight,
  alert: $foreign.alert,
  confirm: $foreign.confirm,
  moveBy: $foreign.moveBy,
  moveTo: $foreign.moveTo,
  outerHeight: $foreign.outerHeight,
  outerWidth: $foreign.outerWidth,
  print: $foreign.print,
  resizeBy: $foreign.resizeBy,
  resizeTo: $foreign.resizeTo,
  screenX: $foreign.screenX,
  screenY: $foreign.screenY,
  scroll: $foreign.scroll,
  scrollBy: $foreign.scrollBy,
  scrollX: $foreign.scrollX,
  scrollY: $foreign.scrollY,
  localStorage: $foreign.localStorage,
  sessionStorage: $foreign.sessionStorage,
  requestAnimationFrame: $foreign.requestAnimationFrame,
  cancelAnimationFrame: $foreign.cancelAnimationFrame,
  requestIdleCallback: $foreign.requestIdleCallback,
  cancelIdleCallback: $foreign.cancelIdleCallback,
  parent: $foreign.parent
};
},{"./foreign.js":"output/Web.HTML.Window/foreign.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Nullable/index.js":"output/Data.Nullable/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Effect/index.js":"output/Effect/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var $foreign = require("./foreign.js");

var Web_HTML_Common = require("../Web.HTML.Common/index.js");

var Web_HTML_HTMLAnchorElement = require("../Web.HTML.HTMLAnchorElement/index.js");

var Web_HTML_HTMLAreaElement = require("../Web.HTML.HTMLAreaElement/index.js");

var Web_HTML_HTMLAudioElement = require("../Web.HTML.HTMLAudioElement/index.js");

var Web_HTML_HTMLBRElement = require("../Web.HTML.HTMLBRElement/index.js");

var Web_HTML_HTMLBaseElement = require("../Web.HTML.HTMLBaseElement/index.js");

var Web_HTML_HTMLBodyElement = require("../Web.HTML.HTMLBodyElement/index.js");

var Web_HTML_HTMLButtonElement = require("../Web.HTML.HTMLButtonElement/index.js");

var Web_HTML_HTMLCanvasElement = require("../Web.HTML.HTMLCanvasElement/index.js");

var Web_HTML_HTMLDListElement = require("../Web.HTML.HTMLDListElement/index.js");

var Web_HTML_HTMLDataElement = require("../Web.HTML.HTMLDataElement/index.js");

var Web_HTML_HTMLDataListElement = require("../Web.HTML.HTMLDataListElement/index.js");

var Web_HTML_HTMLDivElement = require("../Web.HTML.HTMLDivElement/index.js");

var Web_HTML_HTMLDocument = require("../Web.HTML.HTMLDocument/index.js");

var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");

var Web_HTML_HTMLEmbedElement = require("../Web.HTML.HTMLEmbedElement/index.js");

var Web_HTML_HTMLFieldSetElement = require("../Web.HTML.HTMLFieldSetElement/index.js");

var Web_HTML_HTMLFormElement = require("../Web.HTML.HTMLFormElement/index.js");

var Web_HTML_HTMLHRElement = require("../Web.HTML.HTMLHRElement/index.js");

var Web_HTML_HTMLHeadElement = require("../Web.HTML.HTMLHeadElement/index.js");

var Web_HTML_HTMLHeadingElement = require("../Web.HTML.HTMLHeadingElement/index.js");

var Web_HTML_HTMLIFrameElement = require("../Web.HTML.HTMLIFrameElement/index.js");

var Web_HTML_HTMLImageElement = require("../Web.HTML.HTMLImageElement/index.js");

var Web_HTML_HTMLInputElement = require("../Web.HTML.HTMLInputElement/index.js");

var Web_HTML_HTMLKeygenElement = require("../Web.HTML.HTMLKeygenElement/index.js");

var Web_HTML_HTMLLIElement = require("../Web.HTML.HTMLLIElement/index.js");

var Web_HTML_HTMLLabelElement = require("../Web.HTML.HTMLLabelElement/index.js");

var Web_HTML_HTMLLegendElement = require("../Web.HTML.HTMLLegendElement/index.js");

var Web_HTML_HTMLLinkElement = require("../Web.HTML.HTMLLinkElement/index.js");

var Web_HTML_HTMLMapElement = require("../Web.HTML.HTMLMapElement/index.js");

var Web_HTML_HTMLMediaElement = require("../Web.HTML.HTMLMediaElement/index.js");

var Web_HTML_HTMLMetaElement = require("../Web.HTML.HTMLMetaElement/index.js");

var Web_HTML_HTMLMeterElement = require("../Web.HTML.HTMLMeterElement/index.js");

var Web_HTML_HTMLModElement = require("../Web.HTML.HTMLModElement/index.js");

var Web_HTML_HTMLOListElement = require("../Web.HTML.HTMLOListElement/index.js");

var Web_HTML_HTMLObjectElement = require("../Web.HTML.HTMLObjectElement/index.js");

var Web_HTML_HTMLOptGroupElement = require("../Web.HTML.HTMLOptGroupElement/index.js");

var Web_HTML_HTMLOptionElement = require("../Web.HTML.HTMLOptionElement/index.js");

var Web_HTML_HTMLOutputElement = require("../Web.HTML.HTMLOutputElement/index.js");

var Web_HTML_HTMLParagraphElement = require("../Web.HTML.HTMLParagraphElement/index.js");

var Web_HTML_HTMLParamElement = require("../Web.HTML.HTMLParamElement/index.js");

var Web_HTML_HTMLPreElement = require("../Web.HTML.HTMLPreElement/index.js");

var Web_HTML_HTMLProgressElement = require("../Web.HTML.HTMLProgressElement/index.js");

var Web_HTML_HTMLQuoteElement = require("../Web.HTML.HTMLQuoteElement/index.js");

var Web_HTML_HTMLScriptElement = require("../Web.HTML.HTMLScriptElement/index.js");

var Web_HTML_HTMLSelectElement = require("../Web.HTML.HTMLSelectElement/index.js");

var Web_HTML_HTMLSourceElement = require("../Web.HTML.HTMLSourceElement/index.js");

var Web_HTML_HTMLSpanElement = require("../Web.HTML.HTMLSpanElement/index.js");

var Web_HTML_HTMLStyleElement = require("../Web.HTML.HTMLStyleElement/index.js");

var Web_HTML_HTMLTableCaptionElement = require("../Web.HTML.HTMLTableCaptionElement/index.js");

var Web_HTML_HTMLTableCellElement = require("../Web.HTML.HTMLTableCellElement/index.js");

var Web_HTML_HTMLTableColElement = require("../Web.HTML.HTMLTableColElement/index.js");

var Web_HTML_HTMLTableDataCellElement = require("../Web.HTML.HTMLTableDataCellElement/index.js");

var Web_HTML_HTMLTableElement = require("../Web.HTML.HTMLTableElement/index.js");

var Web_HTML_HTMLTableHeaderCellElement = require("../Web.HTML.HTMLTableHeaderCellElement/index.js");

var Web_HTML_HTMLTableRowElement = require("../Web.HTML.HTMLTableRowElement/index.js");

var Web_HTML_HTMLTableSectionElement = require("../Web.HTML.HTMLTableSectionElement/index.js");

var Web_HTML_HTMLTemplateElement = require("../Web.HTML.HTMLTemplateElement/index.js");

var Web_HTML_HTMLTextAreaElement = require("../Web.HTML.HTMLTextAreaElement/index.js");

var Web_HTML_HTMLTimeElement = require("../Web.HTML.HTMLTimeElement/index.js");

var Web_HTML_HTMLTitleElement = require("../Web.HTML.HTMLTitleElement/index.js");

var Web_HTML_HTMLTrackElement = require("../Web.HTML.HTMLTrackElement/index.js");

var Web_HTML_HTMLUListElement = require("../Web.HTML.HTMLUListElement/index.js");

var Web_HTML_HTMLVideoElement = require("../Web.HTML.HTMLVideoElement/index.js");

var Web_HTML_History = require("../Web.HTML.History/index.js");

var Web_HTML_Location = require("../Web.HTML.Location/index.js");

var Web_HTML_Navigator = require("../Web.HTML.Navigator/index.js");

var Web_HTML_Window = require("../Web.HTML.Window/index.js");

module.exports = {
  window: $foreign.window
};
},{"./foreign.js":"output/Web.HTML/foreign.js","../Web.HTML.Common/index.js":"output/Web.HTML.Common/index.js","../Web.HTML.HTMLAnchorElement/index.js":"output/Web.HTML.HTMLAnchorElement/index.js","../Web.HTML.HTMLAreaElement/index.js":"output/Web.HTML.HTMLAreaElement/index.js","../Web.HTML.HTMLAudioElement/index.js":"output/Web.HTML.HTMLAudioElement/index.js","../Web.HTML.HTMLBRElement/index.js":"output/Web.HTML.HTMLBRElement/index.js","../Web.HTML.HTMLBaseElement/index.js":"output/Web.HTML.HTMLBaseElement/index.js","../Web.HTML.HTMLBodyElement/index.js":"output/Web.HTML.HTMLBodyElement/index.js","../Web.HTML.HTMLButtonElement/index.js":"output/Web.HTML.HTMLButtonElement/index.js","../Web.HTML.HTMLCanvasElement/index.js":"output/Web.HTML.HTMLCanvasElement/index.js","../Web.HTML.HTMLDListElement/index.js":"output/Web.HTML.HTMLDListElement/index.js","../Web.HTML.HTMLDataElement/index.js":"output/Web.HTML.HTMLDataElement/index.js","../Web.HTML.HTMLDataListElement/index.js":"output/Web.HTML.HTMLDataListElement/index.js","../Web.HTML.HTMLDivElement/index.js":"output/Web.HTML.HTMLDivElement/index.js","../Web.HTML.HTMLDocument/index.js":"output/Web.HTML.HTMLDocument/index.js","../Web.HTML.HTMLElement/index.js":"output/Web.HTML.HTMLElement/index.js","../Web.HTML.HTMLEmbedElement/index.js":"output/Web.HTML.HTMLEmbedElement/index.js","../Web.HTML.HTMLFieldSetElement/index.js":"output/Web.HTML.HTMLFieldSetElement/index.js","../Web.HTML.HTMLFormElement/index.js":"output/Web.HTML.HTMLFormElement/index.js","../Web.HTML.HTMLHRElement/index.js":"output/Web.HTML.HTMLHRElement/index.js","../Web.HTML.HTMLHeadElement/index.js":"output/Web.HTML.HTMLHeadElement/index.js","../Web.HTML.HTMLHeadingElement/index.js":"output/Web.HTML.HTMLHeadingElement/index.js","../Web.HTML.HTMLIFrameElement/index.js":"output/Web.HTML.HTMLIFrameElement/index.js","../Web.HTML.HTMLImageElement/index.js":"output/Web.HTML.HTMLImageElement/index.js","../Web.HTML.HTMLInputElement/index.js":"output/Web.HTML.HTMLInputElement/index.js","../Web.HTML.HTMLKeygenElement/index.js":"output/Web.HTML.HTMLKeygenElement/index.js","../Web.HTML.HTMLLIElement/index.js":"output/Web.HTML.HTMLLIElement/index.js","../Web.HTML.HTMLLabelElement/index.js":"output/Web.HTML.HTMLLabelElement/index.js","../Web.HTML.HTMLLegendElement/index.js":"output/Web.HTML.HTMLLegendElement/index.js","../Web.HTML.HTMLLinkElement/index.js":"output/Web.HTML.HTMLLinkElement/index.js","../Web.HTML.HTMLMapElement/index.js":"output/Web.HTML.HTMLMapElement/index.js","../Web.HTML.HTMLMediaElement/index.js":"output/Web.HTML.HTMLMediaElement/index.js","../Web.HTML.HTMLMetaElement/index.js":"output/Web.HTML.HTMLMetaElement/index.js","../Web.HTML.HTMLMeterElement/index.js":"output/Web.HTML.HTMLMeterElement/index.js","../Web.HTML.HTMLModElement/index.js":"output/Web.HTML.HTMLModElement/index.js","../Web.HTML.HTMLOListElement/index.js":"output/Web.HTML.HTMLOListElement/index.js","../Web.HTML.HTMLObjectElement/index.js":"output/Web.HTML.HTMLObjectElement/index.js","../Web.HTML.HTMLOptGroupElement/index.js":"output/Web.HTML.HTMLOptGroupElement/index.js","../Web.HTML.HTMLOptionElement/index.js":"output/Web.HTML.HTMLOptionElement/index.js","../Web.HTML.HTMLOutputElement/index.js":"output/Web.HTML.HTMLOutputElement/index.js","../Web.HTML.HTMLParagraphElement/index.js":"output/Web.HTML.HTMLParagraphElement/index.js","../Web.HTML.HTMLParamElement/index.js":"output/Web.HTML.HTMLParamElement/index.js","../Web.HTML.HTMLPreElement/index.js":"output/Web.HTML.HTMLPreElement/index.js","../Web.HTML.HTMLProgressElement/index.js":"output/Web.HTML.HTMLProgressElement/index.js","../Web.HTML.HTMLQuoteElement/index.js":"output/Web.HTML.HTMLQuoteElement/index.js","../Web.HTML.HTMLScriptElement/index.js":"output/Web.HTML.HTMLScriptElement/index.js","../Web.HTML.HTMLSelectElement/index.js":"output/Web.HTML.HTMLSelectElement/index.js","../Web.HTML.HTMLSourceElement/index.js":"output/Web.HTML.HTMLSourceElement/index.js","../Web.HTML.HTMLSpanElement/index.js":"output/Web.HTML.HTMLSpanElement/index.js","../Web.HTML.HTMLStyleElement/index.js":"output/Web.HTML.HTMLStyleElement/index.js","../Web.HTML.HTMLTableCaptionElement/index.js":"output/Web.HTML.HTMLTableCaptionElement/index.js","../Web.HTML.HTMLTableCellElement/index.js":"output/Web.HTML.HTMLTableCellElement/index.js","../Web.HTML.HTMLTableColElement/index.js":"output/Web.HTML.HTMLTableColElement/index.js","../Web.HTML.HTMLTableDataCellElement/index.js":"output/Web.HTML.HTMLTableDataCellElement/index.js","../Web.HTML.HTMLTableElement/index.js":"output/Web.HTML.HTMLTableElement/index.js","../Web.HTML.HTMLTableHeaderCellElement/index.js":"output/Web.HTML.HTMLTableHeaderCellElement/index.js","../Web.HTML.HTMLTableRowElement/index.js":"output/Web.HTML.HTMLTableRowElement/index.js","../Web.HTML.HTMLTableSectionElement/index.js":"output/Web.HTML.HTMLTableSectionElement/index.js","../Web.HTML.HTMLTemplateElement/index.js":"output/Web.HTML.HTMLTemplateElement/index.js","../Web.HTML.HTMLTextAreaElement/index.js":"output/Web.HTML.HTMLTextAreaElement/index.js","../Web.HTML.HTMLTimeElement/index.js":"output/Web.HTML.HTMLTimeElement/index.js","../Web.HTML.HTMLTitleElement/index.js":"output/Web.HTML.HTMLTitleElement/index.js","../Web.HTML.HTMLTrackElement/index.js":"output/Web.HTML.HTMLTrackElement/index.js","../Web.HTML.HTMLUListElement/index.js":"output/Web.HTML.HTMLUListElement/index.js","../Web.HTML.HTMLVideoElement/index.js":"output/Web.HTML.HTMLVideoElement/index.js","../Web.HTML.History/index.js":"output/Web.HTML.History/index.js","../Web.HTML.Location/index.js":"output/Web.HTML.Location/index.js","../Web.HTML.Navigator/index.js":"output/Web.HTML.Navigator/index.js","../Web.HTML.Window/index.js":"output/Web.HTML.Window/index.js"}],"output/Main/index.js":[function(require,module,exports) {
// Generated by purs version 0.14.7
"use strict";

var Affjax = require("../Affjax/index.js");

var Affjax_ResponseFormat = require("../Affjax.ResponseFormat/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Data_Argonaut_Core = require("../Data.Argonaut.Core/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_HTTP_Method = require("../Data.HTTP.Method/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var DocumentEvent = require("../DocumentEvent/index.js");

var Effect = require("../Effect/index.js");

var Effect_Aff = require("../Effect.Aff/index.js");

var Effect_Class = require("../Effect.Class/index.js");

var Effect_Class_Console = require("../Effect.Class.Console/index.js");

var Web_DOM_Element = require("../Web.DOM.Element/index.js");

var Web_DOM_Node = require("../Web.DOM.Node/index.js");

var Web_DOM_ParentNode = require("../Web.DOM.ParentNode/index.js");

var Web_Event_Event = require("../Web.Event.Event/index.js");

var Web_HTML = require("../Web.HTML/index.js");

var Web_HTML_HTMLDocument = require("../Web.HTML.HTMLDocument/index.js");

var Web_HTML_HTMLInputElement = require("../Web.HTML.HTMLInputElement/index.js");

var Web_HTML_Window = require("../Web.HTML.Window/index.js");

var updateText = function updateText(v) {
  return function (v1) {
    if (v1 instanceof Data_Maybe.Just) {
      return Web_DOM_Node.setTextContent(v)(Web_DOM_Element.toNode(v1.value0));
    }

    ;
    return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
  };
};

var testApi = Data_Functor["void"](Effect.functorEffect)(Effect_Aff.launchAff(Control_Bind.bind(Effect_Aff.bindAff)(Affjax.request({
  method: new Data_Either.Left(Data_HTTP_Method.GET.value),
  url: "https://api.openweathermap.org/data/2.5/onecall?lat=38.8950368&lon=-77.0365427&appid=883f70964bc4427b6582c086f8a59ff7&units=imperial",
  headers: Affjax.defaultRequest.headers,
  content: Affjax.defaultRequest.content,
  username: Affjax.defaultRequest.username,
  password: Affjax.defaultRequest.password,
  withCredentials: Affjax.defaultRequest.withCredentials,
  responseFormat: Affjax_ResponseFormat.json,
  timeout: Affjax.defaultRequest.timeout
}))(function (result) {
  if (result instanceof Data_Either.Left) {
    return Effect_Class_Console.log(Effect_Aff.monadEffectAff)("GET /api response failed to decode: " + Affjax.printError(result.value0));
  }

  ;

  if (result instanceof Data_Either.Right) {
    return Effect_Class_Console.log(Effect_Aff.monadEffectAff)("GET /api response: " + Data_Argonaut_Core.stringify(result.value0.body));
  }

  ;
  throw new Error("Failed pattern match at Main (line 63, column 3 - line 65, column 77): " + [result.constructor.name]);
})));
var rootSelector = "#root";

var selectFromDocument = function selectFromDocument(doc) {
  return Web_DOM_ParentNode.querySelector(rootSelector)(Web_HTML_HTMLDocument.toParentNode(doc));
};

var maybeText = function maybeText(v) {
  if (v instanceof Data_Maybe.Just) {
    return Web_DOM_Node.textContent(Web_DOM_Element.toNode(v.value0));
  }

  ;
  return Control_Applicative.pure(Effect.applicativeEffect)("");
};

var inputValue = function inputValue(v) {
  if (v instanceof Data_Maybe.Just) {
    return Web_HTML_HTMLInputElement.value(v.value0);
  }

  ;
  return Control_Applicative.pure(Effect.applicativeEffect)("");
};

var targetValue = function targetValue(v) {
  if (v instanceof Data_Maybe.Just) {
    return inputValue(Web_HTML_HTMLInputElement.fromEventTarget(v.value0));
  }

  ;
  return Control_Applicative.pure(Effect.applicativeEffect)("");
};

var eventValue = function eventValue(evt) {
  return targetValue(Web_Event_Event.target(evt));
};

var inputEventHandler = function inputEventHandler(el) {
  return function (evt) {
    return function __do() {
      var str = eventValue(evt)();
      return updateText(str)(el)();
    };
  };
};

var main = function __do() {
  var w = Web_HTML.window();
  var d = Web_HTML_Window.document(w)();
  var el = selectFromDocument(d)();
  var str = maybeText(el)();
  Effect_Class_Console.log(Effect_Class.monadEffectEffect)(str)();
  updateText("Hey! It worked!")(el)();
  DocumentEvent.addEvent(DocumentEvent.inputEvent)(inputEventHandler(el))();
  return DocumentEvent.getPosition();
};

module.exports = {
  inputValue: inputValue,
  targetValue: targetValue,
  eventValue: eventValue,
  inputEventHandler: inputEventHandler,
  rootSelector: rootSelector,
  maybeText: maybeText,
  selectFromDocument: selectFromDocument,
  updateText: updateText,
  testApi: testApi,
  main: main
};
},{"../Affjax/index.js":"output/Affjax/index.js","../Affjax.ResponseFormat/index.js":"output/Affjax.ResponseFormat/index.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Data.Argonaut.Core/index.js":"output/Data.Argonaut.Core/index.js","../Data.Either/index.js":"output/Data.Either/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.HTTP.Method/index.js":"output/Data.HTTP.Method/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../DocumentEvent/index.js":"output/DocumentEvent/index.js","../Effect/index.js":"output/Effect/index.js","../Effect.Aff/index.js":"output/Effect.Aff/index.js","../Effect.Class/index.js":"output/Effect.Class/index.js","../Effect.Class.Console/index.js":"output/Effect.Class.Console/index.js","../Web.DOM.Element/index.js":"output/Web.DOM.Element/index.js","../Web.DOM.Node/index.js":"output/Web.DOM.Node/index.js","../Web.DOM.ParentNode/index.js":"output/Web.DOM.ParentNode/index.js","../Web.Event.Event/index.js":"output/Web.Event.Event/index.js","../Web.HTML/index.js":"output/Web.HTML/index.js","../Web.HTML.HTMLDocument/index.js":"output/Web.HTML.HTMLDocument/index.js","../Web.HTML.HTMLInputElement/index.js":"output/Web.HTML.HTMLInputElement/index.js","../Web.HTML.Window/index.js":"output/Web.HTML.Window/index.js"}],"index.js":[function(require,module,exports) {
var _require = require('./output/Main'),
    main = _require.main;

main();
},{"./output/Main":"output/Main/index.js"}],"node_modules/parcel-bundler/src/builtins/hmr-runtime.js":[function(require,module,exports) {
var global = arguments[3];
var OVERLAY_ID = '__parcel__error__overlay__';
var OldModule = module.bundle.Module;

function Module(moduleName) {
  OldModule.call(this, moduleName);
  this.hot = {
    data: module.bundle.hotData,
    _acceptCallbacks: [],
    _disposeCallbacks: [],
    accept: function (fn) {
      this._acceptCallbacks.push(fn || function () {});
    },
    dispose: function (fn) {
      this._disposeCallbacks.push(fn);
    }
  };
  module.bundle.hotData = null;
}

module.bundle.Module = Module;
var checkedAssets, assetsToAccept;
var parent = module.bundle.parent;

if ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {
  var hostname = "" || location.hostname;
  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';
  var ws = new WebSocket(protocol + '://' + hostname + ':' + "59204" + '/');

  ws.onmessage = function (event) {
    checkedAssets = {};
    assetsToAccept = [];
    var data = JSON.parse(event.data);

    if (data.type === 'update') {
      var handled = false;
      data.assets.forEach(function (asset) {
        if (!asset.isNew) {
          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);

          if (didAccept) {
            handled = true;
          }
        }
      }); // Enable HMR for CSS by default.

      handled = handled || data.assets.every(function (asset) {
        return asset.type === 'css' && asset.generated.js;
      });

      if (handled) {
        console.clear();
        data.assets.forEach(function (asset) {
          hmrApply(global.parcelRequire, asset);
        });
        assetsToAccept.forEach(function (v) {
          hmrAcceptRun(v[0], v[1]);
        });
      } else if (location.reload) {
        // `location` global exists in a web worker context but lacks `.reload()` function.
        location.reload();
      }
    }

    if (data.type === 'reload') {
      ws.close();

      ws.onclose = function () {
        location.reload();
      };
    }

    if (data.type === 'error-resolved') {
      console.log('[parcel] ✨ Error resolved');
      removeErrorOverlay();
    }

    if (data.type === 'error') {
      console.error('[parcel] 🚨  ' + data.error.message + '\n' + data.error.stack);
      removeErrorOverlay();
      var overlay = createErrorOverlay(data);
      document.body.appendChild(overlay);
    }
  };
}

function removeErrorOverlay() {
  var overlay = document.getElementById(OVERLAY_ID);

  if (overlay) {
    overlay.remove();
  }
}

function createErrorOverlay(data) {
  var overlay = document.createElement('div');
  overlay.id = OVERLAY_ID; // html encode message and stack trace

  var message = document.createElement('div');
  var stackTrace = document.createElement('pre');
  message.innerText = data.error.message;
  stackTrace.innerText = data.error.stack;
  overlay.innerHTML = '<div style="background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;">' + '<span style="background: red; padding: 2px 4px; border-radius: 2px;">ERROR</span>' + '<span style="top: 2px; margin-left: 5px; position: relative;">🚨</span>' + '<div style="font-size: 18px; font-weight: bold; margin-top: 20px;">' + message.innerHTML + '</div>' + '<pre>' + stackTrace.innerHTML + '</pre>' + '</div>';
  return overlay;
}

function getParents(bundle, id) {
  var modules = bundle.modules;

  if (!modules) {
    return [];
  }

  var parents = [];
  var k, d, dep;

  for (k in modules) {
    for (d in modules[k][1]) {
      dep = modules[k][1][d];

      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {
        parents.push(k);
      }
    }
  }

  if (bundle.parent) {
    parents = parents.concat(getParents(bundle.parent, id));
  }

  return parents;
}

function hmrApply(bundle, asset) {
  var modules = bundle.modules;

  if (!modules) {
    return;
  }

  if (modules[asset.id] || !bundle.parent) {
    var fn = new Function('require', 'module', 'exports', asset.generated.js);
    asset.isNew = !modules[asset.id];
    modules[asset.id] = [fn, asset.deps];
  } else if (bundle.parent) {
    hmrApply(bundle.parent, asset);
  }
}

function hmrAcceptCheck(bundle, id) {
  var modules = bundle.modules;

  if (!modules) {
    return;
  }

  if (!modules[id] && bundle.parent) {
    return hmrAcceptCheck(bundle.parent, id);
  }

  if (checkedAssets[id]) {
    return;
  }

  checkedAssets[id] = true;
  var cached = bundle.cache[id];
  assetsToAccept.push([bundle, id]);

  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {
    return true;
  }

  return getParents(global.parcelRequire, id).some(function (id) {
    return hmrAcceptCheck(global.parcelRequire, id);
  });
}

function hmrAcceptRun(bundle, id) {
  var cached = bundle.cache[id];
  bundle.hotData = {};

  if (cached) {
    cached.hot.data = bundle.hotData;
  }

  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {
    cached.hot._disposeCallbacks.forEach(function (cb) {
      cb(bundle.hotData);
    });
  }

  delete bundle.cache[id];
  bundle(id);
  cached = bundle.cache[id];

  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {
    cached.hot._acceptCallbacks.forEach(function (cb) {
      cb();
    });

    return true;
  }
}
},{}]},{},["node_modules/parcel-bundler/src/builtins/hmr-runtime.js","index.js"], null)
//# sourceMappingURL=/FinalProject.e31bb0bc.js.map